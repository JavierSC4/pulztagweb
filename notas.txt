# Al hacer cambios en models.py, hay que migrar:
 - flask db migrate -m "Añadidos descripción de cambios"
 - flask db upgrade

git status
git add .
git commit -m "Texto cambios"
git push origin main

git add <ruta/al/archivo> "Dirección relativa del archivo a añadir"
git add . (para añadir todos los archivos modificados)
git commit -m "Mensaje descriptivo de los cambios"
git push origin main

tree -L 3

flask shell

javiersc@MacBook-Air-de-Javier pulztagweb % source virtualenv/bin/activate
(virtualenv) javiersc@MacBook-Air-de-Javier pulztagweb % 

(virtualenv) javiersc@MacBook-Air-de-Javier pulztagweb % git add static/css/style.css templates/order.html
(virtualenv) javiersc@MacBook-Air-de-Javier pulztagweb % git commit -m "Actualizar order.html y style.css con nuevos cambios"
[main 47ee6c7] Actualizar order.html y style.css con nuevos cambios
 2 files changed, 14 insertions(+), 13 deletions(-)
(virtualenv) javiersc@MacBook-Air-de-Javier pulztagweb % git push origin main
Enumerating objects: 13, done.
Counting objects: 100% (13/13), done.
Delta compression using up to 8 threads
Compressing objects: 100% (7/7), done.
Writing objects: 100% (7/7), 1.13 KiB | 1.13 MiB/s, done.
Total 7 (delta 5), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (5/5), completed with 5 local objects.
To github.com:JavierSC4/pulztagweb.git
   8276bce..47ee6c7  main -> main
(virtualenv) javiersc@MacBook-Air-de-Javier pulztagweb %  




gracias por las propuestas. así estoy dejando el proyecto ahora. Quiero hacer una mejora importante en el perfil de los usuarios. Entiende el contexto del proyecto, y agrega un perfil util y completo para los usuarios. además, quiero un side bar con Cuenta, Pedidos (donde usuarios puedan subir pedidos, y vusualizar los pedidos hechos y su estado actual). la información del estado de cada pedido, la manejo yo como administrador manualmente. COmparto el codigo actual del proyecto:

----- Inicio de app.py -----
# app.py

import os
import uuid
from flask import Flask, render_template, request, flash, redirect, url_for
from flask_mail import Mail, Message
from dotenv import load_dotenv
import pandas as pd
from werkzeug.utils import secure_filename
from itsdangerous import URLSafeTimedSerializer, SignatureExpired
from extensions import db, migrate, bcrypt, login_manager
from models import User
from forms import RegistrationForm, LoginForm, UpdateAccountForm, RequestResetForm, ResetPasswordForm

from flask_login import login_required, current_user, login_user, logout_user  # Importar login_user y logout_user

load_dotenv()

app = Flask(__name__, instance_relative_config=True)
app.secret_key = os.getenv('SECRET_KEY')

# Configuración de la Base de Datos
basedir = os.path.abspath(os.path.dirname(__file__))
db_path = os.path.join(basedir, 'instance', 'site.db')
app.config['SQLALCHEMY_DATABASE_URI'] = f'sqlite:///{db_path}'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
print("Database URI:", app.config['SQLALCHEMY_DATABASE_URI'])

db.init_app(app)
migrate.init_app(app, db)
bcrypt.init_app(app)
login_manager.init_app(app)

print("Database URI:", app.config['SQLALCHEMY_DATABASE_URI'])

# Configuración de Flask-Mail
app.config['MAIL_SERVER'] = 'smtp.gmail.com'
app.config['MAIL_PORT'] = 587
app.config['MAIL_USE_TLS'] = True
app.config['MAIL_USERNAME'] = os.getenv('MAIL_USERNAME')
app.config['MAIL_PASSWORD'] = os.getenv('MAIL_PASSWORD')
app.config['MAIL_DEFAULT_SENDER'] = os.getenv('MAIL_USERNAME')

mail = Mail(app)

# Configuración de Flask-Login
login_manager.login_view = 'login'
login_manager.login_message_category = 'warning'

@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))

# Configuración para Tokens
s = URLSafeTimedSerializer(app.secret_key)

# Directorio para guardar las subidas
UPLOAD_FOLDER = os.path.join(app.root_path, 'uploads')  # Cambiado a 'uploads'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# Extensiones permitidas
ALLOWED_LOGO_EXTENSIONS = {'png', 'jpeg', 'jpg'}
ALLOWED_EXCEL_EXTENSIONS = {'xlsx', 'xls'}


def allowed_file(filename, allowed_extensions):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in allowed_extensions


# Rutas de Autenticación

@app.route('/register', methods=['GET', 'POST'])
def register():
    if current_user.is_authenticated:
        flash('Ya estás logueado.', 'info')
        return redirect(url_for('home'))
    form = RegistrationForm()
    if form.validate_on_submit():
        hashed_password = bcrypt.generate_password_hash(form.password.data).decode('utf-8')
        user = User(username=form.username.data, email=form.email.data, password=hashed_password)
        db.session.add(user)
        db.session.commit()
        flash('Tu cuenta ha sido creada! Ahora puedes iniciar sesión.', 'success')
        return redirect(url_for('login'))
    return render_template('register.html', title='Registrar', form=form)

@app.route('/login', methods=['GET', 'POST'])
def login():
    if current_user.is_authenticated:
        flash('Ya estás logueado.', 'info')
        return redirect(url_for('home'))
    form = LoginForm()
    if form.validate_on_submit():
        user = User.query.filter_by(email=form.email.data).first()
        if user and bcrypt.check_password_hash(user.password, form.password.data):
            login_user(user, remember=form.remember.data)
            flash('Has iniciado sesión correctamente.', 'success')
            next_page = request.args.get('next')
            return redirect(next_page) if next_page else redirect(url_for('home'))
        else:
            flash('Inicio de sesión fallido. Revisa el correo y la contraseña.', 'danger')
    return render_template('login.html', title='Iniciar Sesión', form=form)

@app.route('/logout')
def logout():
    logout_user()
    flash('Has cerrado sesión.', 'info')
    return redirect(url_for('home'))

@app.route('/account', methods=['GET', 'POST'])
@login_required
def account():
    form = UpdateAccountForm()
    if form.validate_on_submit():
        current_user.username = form.username.data
        current_user.email = form.email.data
        if form.password.data:
            hashed_password = bcrypt.generate_password_hash(form.password.data).decode('utf-8')
            current_user.password = hashed_password
        db.session.commit()
        flash('Tu cuenta ha sido actualizada.', 'success')
        return redirect(url_for('account'))
    elif request.method == 'GET':
        form.username.data = current_user.username
        form.email.data = current_user.email
    return render_template('account.html', title='Perfil de Usuario', form=form)

@app.route('/reset_password', methods=['GET', 'POST'])
def reset_request():
    if current_user.is_authenticated:
        flash('Ya estás logueado.', 'info')
        return redirect(url_for('home'))
    form = RequestResetForm()
    if form.validate_on_submit():
        user = User.query.filter_by(email=form.email.data).first()
        if user:
            token = user.get_reset_token()
            msg = Message('Recupera tu Contraseña', recipients=[user.email])
            reset_url = url_for('reset_token', token=token, _external=True)
            msg.body = f'''Para restablecer tu contraseña, visita el siguiente enlace:
{reset_url}

Si no solicitaste un restablecimiento de contraseña, por favor ignora este mensaje.
'''
            mail.send(msg)
            flash('Se ha enviado un correo para restablecer tu contraseña.', 'info')
            return redirect(url_for('login'))
    return render_template('reset_request.html', title='Recuperar Contraseña', form=form)

@app.route('/reset_password/<token>', methods=['GET', 'POST'])
def reset_token(token):
    if current_user.is_authenticated:
        flash('Ya estás logueado.', 'info')
        return redirect(url_for('home'))
    user = User.verify_reset_token(token)
    if not user:
        flash('El token es inválido o ha expirado.', 'warning')
        return redirect(url_for('reset_request'))
    form = ResetPasswordForm()
    if form.validate_on_submit():
        hashed_password = bcrypt.generate_password_hash(form.password.data).decode('utf-8')
        user.password = hashed_password
        db.session.commit()
        flash('Tu contraseña ha sido actualizada. Ahora puedes iniciar sesión.', 'success')
        return redirect(url_for('login'))
    return render_template('reset_token.html', title='Restablecer Contraseña', form=form)

# Rutas Existentes

@app.route('/')
def home():
    return render_template('index.html')


@app.route('/about')
def about():
    return render_template('about.html')


@app.route('/contact', methods=['GET', 'POST'])
def contact():
    if request.method == 'POST':
        nombre = request.form.get('nombre')
        email = request.form.get('email')
        mensaje = request.form.get('mensaje')

        if not nombre or not email or not mensaje:
            flash('Por favor, completa todos los campos.', 'danger')
            return redirect(url_for('contact'))

        try:
            msg = Message(
                subject=f"Nuevo mensaje de {nombre}",
                recipients=['contacto@pulztag.com'],
                body=f"Nombre: {nombre}\nCorreo Electrónico: {email}\n\nMensaje:\n{mensaje}"
            )
            mail.send(msg)
            flash('¡Tu mensaje ha sido enviado exitosamente!', 'success')
            return redirect(url_for('contact'))
        except Exception as e:
            print(e)
            flash('Hubo un error al enviar tu mensaje. Por favor, inténtalo de nuevo más tarde.', 'danger')
            return redirect(url_for('contact'))

    return render_template('contact.html')


@app.route('/products')
def products():
    return render_template('products.html')


@app.route('/order', methods=['GET', 'POST'])
@login_required  # Protegido para usuarios autenticados
def order():
    if request.method == 'POST':
        nombre = request.form.get('nombre')
        email = request.form.get('email')
        dispositivo = request.form.get('dispositivo')
        mensaje = request.form.get('mensaje')

        # Validaciones básicas
        if not nombre or not email or not dispositivo or not mensaje:
            flash('Por favor, completa todos los campos.', 'danger')
            return redirect(url_for('order'))

        # Manejar los logos
        logos = request.files.getlist('logos')
        valid_logos = [logo for logo in logos if logo.filename != '']
        if len(valid_logos) > 10:
            flash('Puedes subir un máximo de 10 logos.', 'danger')
            return redirect(url_for('order'))

        saved_logos = []
        for logo in valid_logos:
            filename = logo.filename.strip()
            if allowed_file(filename, ALLOWED_LOGO_EXTENSIONS):
                try:
                    secure_name = secure_filename(filename)
                    unique_filename = f"{uuid.uuid4().hex}_{secure_name}"
                    logo_path = os.path.join(app.config['UPLOAD_FOLDER'], unique_filename)
                    logo.save(logo_path)
                    saved_logos.append((filename, logo_path))
                    print(f"Logo guardado: {logo_path}")
                except Exception as e:
                    print(f"Error al guardar el logo {filename}: {e}")
                    flash(f"Hubo un error al guardar el logo {filename}.", 'danger')
                    return redirect(url_for('order'))
            else:
                flash(f"Formato de logo no permitido: {filename}", 'danger')
                return redirect(url_for('order'))

        # Manejar el archivo Excel
        excel = request.files.get('excel')
        if excel and excel.filename != '':
            filename = excel.filename.strip()
            if allowed_file(filename, ALLOWED_EXCEL_EXTENSIONS):
                try:
                    secure_name = secure_filename(filename)
                    unique_filename = f"{uuid.uuid4().hex}_{secure_name}"
                    excel_path = os.path.join(app.config['UPLOAD_FOLDER'], unique_filename)
                    excel.save(excel_path)
                    print(f"Archivo Excel guardado: {excel_path}")
                except Exception as e:
                    print(f"Error al guardar el archivo Excel {filename}: {e}")
                    flash(f"Hubo un error al guardar el archivo Excel {filename}.", 'danger')
                    return redirect(url_for('order'))
            else:
                flash('Formato de archivo Excel no permitido.', 'danger')
                return redirect(url_for('order'))
        else:
            excel_path = None

        # Crear un DataFrame con los datos del pedido
        data = {
            'Nombre': [nombre],
            'Correo Electrónico': [email],
            'Selección de Dispositivo': [dispositivo],
            'Mensaje': [mensaje]
        }
        df = pd.DataFrame(data)

        # Guardar el DataFrame en un archivo Excel
        pedido_excel_path = os.path.join(app.config['UPLOAD_FOLDER'], f"pedido_{uuid.uuid4().hex}.xlsx")
        df.to_excel(pedido_excel_path, index=False)
        print(f"Pedido guardado en: {pedido_excel_path}")

        # Enviar el correo con los archivos adjuntos
        try:
            msg = Message(
                subject="Nuevo Pedido de PulztagWeb",
                recipients=['contacto@pulztag.com']
            )
            msg.body = f"Nombre: {nombre}\nCorreo Electrónico: {email}\nSelección de Dispositivo: {dispositivo}\n\nMensaje:\n{mensaje}"

            # Adjuntar el archivo Excel del pedido
            with open(pedido_excel_path, 'rb') as fp:
                msg.attach(
                    "pedido.xlsx",
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    fp.read()
                )

            # Adjuntar los logos
            for original_filename, logo_path in saved_logos:
                try:
                    print(f"Adjuntando logo: {original_filename} desde {logo_path}")
                    with open(logo_path, 'rb') as fp:
                        # Determinar el MIME type correcto
                        ext = original_filename.rsplit('.', 1)[1].lower()
                        mime_type = f"image/{'jpeg' if ext in ['jpg', 'jpeg'] else ext}"
                        msg.attach(
                            original_filename,
                            mime_type,
                            fp.read()
                        )
                except Exception as e:
                    print(f"Error adjuntando el logo {original_filename}: {e}")

            # Adjuntar el archivo Excel si existe
            if excel_path:
                with open(excel_path, 'rb') as fp:
                    msg.attach(
                        os.path.basename(excel_path),
                        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        fp.read()
                    )

            mail.send(msg)
            print("Correo enviado exitosamente.")

            # Eliminar archivos temporales
            os.remove(pedido_excel_path)
            for _, logo_path in saved_logos:
                os.remove(logo_path)
            if excel_path:
                os.remove(excel_path)
            print("Archivos temporales eliminados.")

            flash('Su solicitud fue enviada exitosamente. ¡Pronto nos pondremos en contacto contigo!', 'success')
            return redirect(url_for('order'))

        except Exception as e:
            print(f"Error al enviar el correo: {e}")
            flash('Hubo un error al procesar tu solicitud. Por favor, inténtalo de nuevo más tarde.', 'danger')
            return redirect(url_for('order'))

    # Manejar solicitudes GET y otros casos no cubiertos
    return render_template('order.html')

if __name__ == '__main__':
    app.run(debug=os.getenv('FLASK_DEBUG', 'False') == 'True')

----- Fin de app.py -----

----- Inicio de minimal_app.py -----
# minimal_app.py

from flask import Flask
from extensions import db, migrate

app = Flask(__name__, instance_relative_config=True)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///instance/site.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.secret_key = 'test_secret_key'

db.init_app(app)
migrate.init_app(app, db)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(20), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)
    password = db.Column(db.String(60), nullable=False)

if __name__ == '__main__':
    app.run(debug=os.getenv('FLASK_DEBUG', 'False') == 'True')

----- Fin de minimal_app.py -----

----- Inicio de forms.py -----
# forms.py

from flask_wtf import FlaskForm
from wtforms import StringField, PasswordField, SubmitField, BooleanField
from wtforms.validators import DataRequired, Length, Email, EqualTo, ValidationError
from models import User  # Importar desde models.py
from flask_login import current_user

class RegistrationForm(FlaskForm):
    username = StringField('Nombre de Usuario', validators=[DataRequired(), Length(min=2, max=20)])
    email = StringField('Correo Electrónico', validators=[DataRequired(), Email()])
    password = PasswordField('Contraseña', validators=[DataRequired(), Length(min=6)])
    confirm_password = PasswordField('Confirmar Contraseña',
                                     validators=[DataRequired(), EqualTo('password')])
    submit = SubmitField('Crear Cuenta')

    def validate_username(self, username):
        user = User.query.filter_by(username=username.data).first()
        if user:
            raise ValidationError('Este nombre de usuario ya está en uso. Por favor, elige otro.')

    def validate_email(self, email):
        user = User.query.filter_by(email=email.data).first()
        if user:
            raise ValidationError('Este correo electrónico ya está registrado. Por favor, inicia sesión o usa otro correo.')

class LoginForm(FlaskForm):
    email = StringField('Correo Electrónico', validators=[DataRequired(), Email()])
    password = PasswordField('Contraseña', validators=[DataRequired()])
    remember = BooleanField('Recordarme')
    submit = SubmitField('Iniciar Sesión')

class UpdateAccountForm(FlaskForm):
    username = StringField('Nombre de Usuario', validators=[DataRequired(), Length(min=2, max=20)])
    email = StringField('Correo Electrónico', validators=[DataRequired(), Email()])
    password = PasswordField('Nueva Contraseña', validators=[Length(min=6)])
    confirm_password = PasswordField('Confirmar Nueva Contraseña',
                                     validators=[EqualTo('password')])
    submit = SubmitField('Actualizar Perfil')

    def validate_username(self, username):
        if username.data != current_user.username:
            user = User.query.filter_by(username=username.data).first()
            if user:
                raise ValidationError('Este nombre de usuario ya está en uso. Por favor, elige otro.')

    def validate_email(self, email):
        if email.data != current_user.email:
            user = User.query.filter_by(email=email.data).first()
            if user:
                raise ValidationError('Este correo electrónico ya está registrado. Por favor, usa otro correo.')

class RequestResetForm(FlaskForm):
    email = StringField('Correo Electrónico', validators=[DataRequired(), Email()])
    submit = SubmitField('Solicitar Restablecimiento de Contraseña')

    def validate_email(self, email):
        user = User.query.filter_by(email=email.data).first()
        if user is None:
            raise ValidationError('No hay una cuenta asociada a este correo electrónico.')

class ResetPasswordForm(FlaskForm):
    password = PasswordField('Contraseña', validators=[DataRequired(), Length(min=6)])
    confirm_password = PasswordField('Confirmar Contraseña',
                                     validators=[DataRequired(), EqualTo('password')])
    submit = SubmitField('Restablecer Contraseña')

----- Fin de forms.py -----

----- Inicio de models.py -----
# models.py

from extensions import db
from flask_login import UserMixin
from itsdangerous import URLSafeTimedSerializer, SignatureExpired
from flask import current_app

class User(db.Model, UserMixin):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(20), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)
    password = db.Column(db.String(60), nullable=False)
    # Puedes agregar más campos como nombre, apellido, etc.

    def get_reset_token(self, expires_sec=3600):
        s = URLSafeTimedSerializer(current_app.config['SECRET_KEY'])
        return s.dumps(self.email, salt='password-reset-salt')

    @staticmethod
    def verify_reset_token(token, expires_sec=3600):
        s = URLSafeTimedSerializer(current_app.config['SECRET_KEY'])
        try:
            email = s.loads(token, salt='password-reset-salt', max_age=expires_sec)
        except SignatureExpired:
            return None
        return User.query.filter_by(email=email).first()

----- Fin de models.py -----

----- Inicio de test_db.py -----
# test_db.py

from sqlalchemy import create_engine
import os

basedir = os.path.abspath(os.path.dirname(__file__))
db_path = os.path.join(basedir, 'instance', 'site.db')
db_uri = f'sqlite:///{db_path}'

engine = create_engine(db_uri)

try:
    connection = engine.connect()
    print("Conexión exitosa a la base de datos.")
    connection.close()
except Exception as e:
    print(f"Error al conectar a la base de datos: {e}")

----- Fin de test_db.py -----

----- Inicio de requirements.txt -----
alembic==1.13.3
bcrypt==4.2.0
blinker==1.8.2
click==8.1.7
dnspython==2.7.0
email_validator==2.2.0
et-xmlfile==1.1.0
Flask==3.0.3
Flask-Bcrypt==1.0.1
Flask-Login==0.6.3
Flask-Mail==0.10.0
Flask-Migrate==4.0.4
Flask-SQLAlchemy==3.0.3
Flask-WTF==1.2.1
gunicorn==23.0.0
idna==3.10
itsdangerous==2.2.0
Jinja2==3.1.4
Mako==1.3.5
MarkupSafe==2.1.5
numpy==2.1.1
openpyxl==3.1.5
packaging==24.1
pandas==2.2.3
pillow==10.4.0
python-dateutil==2.9.0.post0
python-dotenv==1.0.1
pytz==2024.2
six==1.16.0
SQLAlchemy==2.0.35
typing_extensions==4.12.2
tzdata==2024.2
Werkzeug==3.0.4
WTForms==3.1.2
XlsxWriter==3.2.0


----- Fin de requirements.txt -----

----- Inicio de static/css/style.css -----
/* static/css/style.css */

/* Tipografía Global */
body {
    font-family: 'Roboto', sans-serif;
    background-color: #ffffff;
    color: #333333;
}

/* Encabezados */
h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: 'Montserrat', sans-serif;
    color: #03c0ff;
}

/* Navbar */
.navbar-brand {
    font-family: 'Montserrat', sans-serif;
    font-size: 1.5rem;
}

.nav-link {
    color: #555555 !important;
    transition: color 0.3s;
}

.nav-link:hover {
    color: #03c0ff !important;
}

.nav-link.active {
    color: #03c0ff !important;
    font-weight: 500;
}

/* Footer */
footer {
    background-color: #f1f1f1;
    color: #555555;
}

footer a {
    color: #03c0ff;
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
}

/* Botones Personalizados */
.btn-primary {
    background-color: #03c0ff;
    border-color: #03c0ff;
}

.btn-primary:hover {
    background-color: #02a8d1;
    border-color: #0290b8;
}

/* Jumbotron / Hero Section */
.jumbotron {
    background: linear-gradient(135deg, #ffffff 0%, #e6f7ff 100%);
    padding: 4rem 2rem;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
}

.jumbotron h1 {
    color: #03c0ff;
}

.jumbotron p {
    color: #555555;
}

/* Cards */
.card {
    border: none;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s, box-shadow 0.3s;
}

.card:hover {
    transform: translateY(-10px);
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
}

.card-title {
    color: #03c0ff;
}

/* Links */
a {
    color: #03c0ff;
    transition: color 0.3s;
}

a:hover {
    color: #0290b8;
    text-decoration: none;
}

/* Formularios */
.form-control {
    border-radius: 0.3rem;
    border: 1px solid #ced4da;
}

.form-control:focus {
    border-color: #03c0ff;
    box-shadow: none;
}

/* Estilos para el formulario de contacto y pedido */
form {
    background-color: #f9f9f9;
    padding: 2rem;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
}

form .form-control {
    margin-bottom: 1.5rem;
}

form .form-check {
    margin-bottom: 1rem;
}

form .btn {
    padding: 0.5rem 1.5rem;
}

/* Estilos para las etapas del formulario de pedido */
form h4 {
    color: #03c0ff;
    margin-bottom: 1rem;
}

.form-check-label {
    margin-left: 0.5rem;
}

/* Estilos para el campo de cantidad */
#cantidad {
    max-width: 200px;
}

/* Transiciones suaves para imágenes */
img.rounded.shadow {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

img.rounded.shadow:hover {
    transform: scale(1.05);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

/* Botón de Envío personalizado */
#submitBtn {
    padding: 0.75rem 2rem;
    font-size: 1rem;
}

/* Contenedor de pedido con formulario a la izquierda y la imagen a la derecha */
.row.justify-content-center {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* Responsividad para dispositivos móviles */
@media (max-width: 768px) {
    .row.justify-content-center {
        flex-direction: column;
    }

    /* Ajustar el tamaño máximo del campo de cantidad en dispositivos móviles */
    #cantidad {
        max-width: 100%;
    }

    /* Ajustar los títulos de las etapas en dispositivos móviles */
    form h4 {
        font-size: 1.25rem;
    }

    /* Ajustar el tamaño de las imágenes en dispositivos móviles */
    img.rounded.shadow {
        width: 100%;
    }
}

/* ------------------------------------- */
/* Nuevos estilos para carga de archivos  */
/* ------------------------------------- */

/* Estilos para las listas de archivos adjuntos */
.list-group-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.list-group-item button {
    margin-left: 10px;
    background: none;
    border: none;
    color: #ff4d4d;
    cursor: pointer;
    text-decoration: underline;
    padding: 0;
    font-size: 0.9rem;
}

.list-group-item button:hover {
    color: #cc0000;
}

/* Estilos para mensajes de error específicos */
.text-danger {
    font-size: 0.9rem;
}

/* Estilos para las alertas de éxito */
.alert-success {
    background-color: #d4edda;
    color: #155724;
    border-color: #c3e6cb;
}

/* Estilos para las alertas de error */
.alert-danger {
    background-color: #f8d7da;
    color: #721c24;
    border-color: #f5c6cb;
}

/* Opcional: Añadir margen superior para las alertas */
.alert {
    margin-top: 20px;
}

/* Estilo para el texto de las secciones de subida de archivos */
.text-muted {
    color: #a7a7a7 !important; /* Asegúrate de que el color se aplique */
}

/* ------------------------------------- */
/* Estilos para la sección de Soluciones Personalizadas */
/* ------------------------------------- */

.custom-solutions-section {
    background: linear-gradient(135deg, #03c0ff 0%, #02a8d1 100%);
    color: #fff;
    padding: 40px; /* Reducido desde 50px para menos margen */
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.custom-solutions-section h4 {
    font-size: 2.5rem; /* Aumentado el tamaño del texto */
    margin-bottom: 20px; /* Reducido margen inferior */
}

.solutions-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}

.solution-item {
    flex: 1 1 220px; /* Ajustado para mejor adaptabilidad */
    margin: 10px; /* Reducido margen */
    background-color: rgba(255, 255, 255, 0.1);
    padding: 15px; /* Reducido padding */
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s, box-shadow 0.3s;
}

.solution-item h5 {
    font-size: 1.5rem; /* Aumentado tamaño del texto */
    margin-bottom: 8px; /* Reducido margen inferior */
    color: #fff;
}

.solution-item p {
    color: #e0f7fa;
    font-size: 1.2rem; /* Tamaño incrementado del texto */
    line-height: 1.5;  /* Opcional: Mejora la legibilidad */
}

.solution-item:hover {
    transform: translateY(-10px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
}

/* Responsividad para la sección de Soluciones Personalizadas */
@media (max-width: 768px) {
    .custom-solutions-section {
        padding: 20px; /* Menor padding en móviles */
    }

    .custom-solutions-section h4 {
        font-size: 2rem; /* Ajustar tamaño del título */
        margin-bottom: 15px;
    }

    .solution-item {
        flex: 1 1 100%; /* Apilar elementos en una sola columna */
        margin: 5px 0;
    }

    .solution-item h5 {
        font-size: 1.25rem;
    }

    .solution-item p {
        font-size: 0.95rem;
    }
}

/* ------------------------------------- */
/* Mejora Adicional: Estilos para Precios */
/* ------------------------------------- */

.price {
    color: #03c0ff;
    font-size: 1.5rem;
    font-weight: bold;
}

.price-value {
    font-size: 1.75rem;
    color: #03c0ff;
}

@media (max-width: 768px) {
    .price {
        font-size: 1.25rem;
    }

    .price-value {
        font-size: 1.5rem;
    }
}

----- Fin de static/css/style.css -----

----- Inicio de static/js/script.js -----
document.addEventListener('DOMContentLoaded', function () {
    // Logo Upload Elements
    const logoUpload = document.getElementById('logoUpload');
    const logoList = document.getElementById('logoList');
    const logoError = document.getElementById('logoError');
    let selectedLogos = [];

    // Excel Upload Elements
    const excelUpload = document.getElementById('excelUpload');
    const excelList = document.getElementById('excelList');
    const excelError = document.getElementById('excelError');
    let selectedExcel = null;

    // Manejar la selección de logos
    logoUpload.addEventListener('change', function (e) {
        const files = Array.from(e.target.files);
        for (let file of files) {
            if (selectedLogos.length >= 10) {
                logoError.style.display = 'block';
                break;
            }
            if (['image/png', 'image/jpeg', 'image/jpg'].includes(file.type)) {
                selectedLogos.push(file);
                displayLogo(file);
            }
        }
        // No restablezcas el valor del input
        // logoUpload.value = ''; // Comentado para permitir que los archivos se envíen
    });

    // Mostrar un logo en la lista
    function displayLogo(file) {
        const li = document.createElement('li');
        li.className = 'list-group-item d-flex justify-content-between align-items-center';
        li.textContent = file.name;

        const removeBtn = document.createElement('button');
        removeBtn.type = 'button';
        removeBtn.className = 'btn btn-danger btn-sm';
        removeBtn.textContent = 'Eliminar';
        removeBtn.addEventListener('click', function () {
            // Eliminar el archivo de selectedLogos
            selectedLogos = selectedLogos.filter((f) => f !== file);
            logoList.removeChild(li);
            logoError.style.display = 'none';

            // Actualizar el input de archivos
            updateLogoInput();
        });

        li.appendChild(removeBtn);
        logoList.appendChild(li);
    }

    // Actualizar el input de archivos para reflejar los archivos seleccionados
    function updateLogoInput() {
        const dataTransfer = new DataTransfer();
        selectedLogos.forEach((file) => {
            dataTransfer.items.add(file);
        });
        logoUpload.files = dataTransfer.files;
    }

    // Manejar la selección de Excel
    excelUpload.addEventListener('change', function (e) {
        const file = e.target.files[0];
        if (selectedExcel) {
            excelError.style.display = 'block';
            // Restablece el input para evitar múltiples archivos
            excelUpload.value = '';
            return;
        }
        if (file && ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel'].includes(file.type)) {
            selectedExcel = file;
            displayExcel(file);
        }
    });

    // Mostrar el archivo Excel en la lista
    function displayExcel(file) {
        const li = document.createElement('li');
        li.className = 'list-group-item d-flex justify-content-between align-items-center';
        li.textContent = file.name;

        const removeBtn = document.createElement('button');
        removeBtn.type = 'button';
        removeBtn.className = 'btn btn-danger btn-sm';
        removeBtn.textContent = 'Eliminar';
        removeBtn.addEventListener('click', function () {
            selectedExcel = null;
            excelList.removeChild(li);
            excelError.style.display = 'none';
            excelUpload.value = ''; // Restablecer el input
        });

        li.appendChild(removeBtn);
        excelList.appendChild(li);
    }
});

----- Fin de static/js/script.js -----

----- Inicio de templates/about.html -----
<!-- templates/about.html -->

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-NC88XS28');</script>
    <!-- End Google Tag Manager -->

{% extends 'base.html' %}

{% block title %}Acerca de - Pulztag{% endblock %}

{% block content %}
<h2 class="text-center mb-4">Acerca de Pulztag</h2>
<div class="row align-items-center mb-5">
    <!-- Texto Descriptivo -->
    <div class="col-md-6">
        <p>En <strong>Pulztag</strong>, reinventamos la interacción entre empresas y clientes a través de soluciones
            NFC personalizadas y servicios a medida que impulsan el crecimiento y la fidelidad. Nuestra pasión por la
            innovación y el compromiso con la excelencia nos posicionan como socios estratégicos en la era digital.</p>
        <p>Nos especializamos en diseñar dispositivos NFC adaptados a las necesidades específicas de cada negocio,
            facilitando conexiones más profundas y significativas con los clientes. Además, desarrollamos servicios
            integrales que abarcan desde la implementación tecnológica hasta estrategias de marketing innovadoras,
            asegurando que cada solución no solo cumpla, sino que supere las expectativas.</p>
        <a href="/contact" class="btn btn-primary mt-3 mb-4">Contáctanos</a>
    </div>
    <!-- Imagen Representativa -->  
    <div class="col-md-6">
        <img src="{{ url_for('static', filename='images/acerca_de.jpeg') }}" class="img-fluid rounded shadow"
            alt="Pulztag Innovación NFC">
    </div>
</div>

<!-- Nuestra Misión y Visión -->
<section class="mt-5">
    <div class="row">
        <!-- Misión -->
        <div class="col-md-6">
            <div class="card text-center h-100">
                <!-- Opcional: Imagen relacionada con la misión -->
                <!-- <img src="{{ url_for('static', filename='images/mision.jpg') }}" class="card-img-top" alt="Misión"> -->
                <div class="card-body">
                    <i class="bi bi-flag" style="font-size: 2rem; color: #03c0ff;"></i>
                    <h5 class="card-title mt-3">Misión</h5>
                    <p class="card-text">Nuestra misión es transformar la manera en que las empresas interactúan con sus
                        clientes mediante soluciones NFC innovadoras y personalizadas que mejoran la eficiencia
                        operativa y fomentan la lealtad del cliente.</p>
                </div>
            </div>
        </div>
        <!-- Visión -->
        <div class="col-md-6 mt-4 mt-md-0">
            <div class="card text-center h-100">
                <!-- Opcional: Imagen relacionada con la visión -->
                <!-- <img src="{{ url_for('static', filename='images/vision.jpg') }}" class="card-img-top" alt="Visión"> -->
                <div class="card-body">
                    <i class="bi bi-eye" style="font-size: 2rem; color: #03c0ff;"></i>
                    <h5 class="card-title mt-3">Visión</h5>
                    <p class="card-text">Nos visualizamos como líderes en el mercado de tecnología NFC, expandiendo
                        nuestras alianzas estratégicas y ofreciendo servicios de vanguardia que impulsen el crecimiento
                        y la competitividad de nuestros clientes a nivel global.</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Nuestros Valores -->
<section class="mt-5">
    <h3 class="text-center mb-4">Nuestros Valores</h3>
    <div class="row">
        <!-- Valor 1: Innovación -->
        <div class="col-md-4">
            <div class="card text-center">
                <!-- Imagen: valor_innovacion.jpg (Imagen que represente innovación) -->
                <!-- <img src="{{ url_for('static', filename='images/valor_innovacion.jpg') }}" class="card-img-top" alt="Innovación"> -->
                <div class="card-body">
                    <i class="bi bi-lightbulb" style="font-size: 2rem; color: #03c0ff;"></i>
                    <h5 class="card-title mt-3">Innovación</h5>
                    <p class="card-text">Nos mantenemos a la vanguardia de la tecnología NFC para ofrecer soluciones
                        únicas y efectivas.</p>
                </div>
            </div>
        </div>
        <!-- Valor 2: Calidad -->
        <div class="col-md-4 mt-4 mt-md-0">
            <div class="card text-center">
                <!-- Imagen: valor_calidad.jpg (Imagen que represente calidad) -->
                <!-- <img src="{{ url_for('static', filename='images/valor_calidad.jpg') }}" class="card-img-top" alt="Calidad"> -->
                <div class="card-body">
                    <i class="bi bi-award" style="font-size: 2rem; color: #03c0ff;"></i>
                    <h5 class="card-title mt-3">Calidad</h5>
                    <p class="card-text">Cada proyecto es ejecutado con altos estándares para garantizar la satisfacción
                        total de nuestros clientes.</p>
                </div>
            </div>
        </div>
        <!-- Valor 3: Colaboración -->
        <div class="col-md-4 mt-4 mt-md-0">
            <div class="card text-center">
                <!-- Imagen: valor_colaboracion.jpg (Imagen que represente colaboración) -->
                <!-- <img src="{{ url_for('static', filename='images/valor_colaboracion.jpg') }}" class="card-img-top" alt="Colaboración"> -->
                <div class="card-body">
                    <i class="bi bi-people-fill" style="font-size: 2rem; color: #03c0ff;"></i>
                    <h5 class="card-title mt-3">Colaboración</h5>
                    <p class="card-text">Trabajamos en estrecha colaboración con nuestros clientes para entender y
                        superar sus expectativas.</p>
                </div>
            </div>
        </div>
    </div>
</section>
{% endblock %}


----- Fin de templates/about.html -----

----- Inicio de templates/account.html -----
<!-- templates/account.html -->

{% extends 'base.html' %}

{% block title %}Perfil de Usuario - PulztagWeb{% endblock %}

{% block content %}
<h2 class="text-center mb-4">Perfil de Usuario</h2>
<div class="row justify-content-center">
    <div class="col-md-6">
        <form method="POST" action="{{ url_for('account') }}">
            {{ form.hidden_tag() }}
            <div class="mb-3">
                {{ form.username.label(class="form-label") }}
                {{ form.username(class="form-control", placeholder="Nombre de Usuario") }}
                {% for error in form.username.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <div class="mb-3">
                {{ form.email.label(class="form-label") }}
                {{ form.email(class="form-control", placeholder="Correo Electrónico") }}
                {% for error in form.email.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <hr>
            <h5>Cambiar Contraseña</h5>
            <div class="mb-3">
                {{ form.password.label(class="form-label") }}
                {{ form.password(class="form-control", placeholder="Nueva Contraseña") }}
                {% for error in form.password.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <div class="mb-3">
                {{ form.confirm_password.label(class="form-label") }}
                {{ form.confirm_password(class="form-control", placeholder="Confirmar Nueva Contraseña") }}
                {% for error in form.confirm_password.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <button type="submit" class="btn btn-primary">{{ form.submit.label.text }}</button>
        </form>
    </div>
</div>
{% endblock %}

----- Fin de templates/account.html -----

----- Inicio de templates/login.html -----
<!-- templates/login.html -->

{% extends 'base.html' %}

{% block title %}Iniciar Sesión - PulztagWeb{% endblock %}

{% block content %}
<h2 class="text-center mb-4">Iniciar Sesión</h2>
<div class="row justify-content-center">
    <div class="col-md-6">
        <form method="POST" action="{{ url_for('login') }}">
            {{ form.hidden_tag() }}
            <div class="mb-3">
                {{ form.email.label(class="form-label") }}
                {{ form.email(class="form-control", placeholder="Correo Electrónico") }}
                {% for error in form.email.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <div class="mb-3">
                {{ form.password.label(class="form-label") }}
                {{ form.password(class="form-control", placeholder="Contraseña") }}
                {% for error in form.password.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <div class="form-check mb-3">
                {{ form.remember(class="form-check-input") }}
                {{ form.remember.label(class="form-check-label") }}
            </div>
            <button type="submit" class="btn btn-primary">{{ form.submit.label.text }}</button>
        </form>
        <p class="mt-3"><a href="{{ url_for('reset_request') }}">¿Olvidaste tu contraseña?</a></p>
        <p>¿No tienes una cuenta? <a href="{{ url_for('register') }}">Regístrate</a></p>
    </div>
</div>
{% endblock %}

----- Fin de templates/login.html -----

----- Inicio de templates/base.html -----
<!-- templates/base.html -->

<!DOCTYPE html>
<html lang="es">

<head>
    <!-- Google Tag Manager -->
    <script>
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id=GTM-NC88XS28';f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-NC88XS28');
    </script>
    <!-- End Google Tag Manager -->

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Pulztag{% endblock %}</title>

    <!-- Google Fonts -->
    <link
        href="https://fonts.googleapis.com/css2?family=Montserrat:wght@500;700&family=Roboto:wght@400;500&display=swap"
        rel="stylesheet">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

    <!-- CSS Personalizado con Parámetro de Versión para Evitar Caché -->
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}?v=1.0">

    {% block head %}{% endblock %}
</head>

<body>
    <!-- Google Tag Manager (noscript) -->
    <noscript>
        <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NC88XS28"
        height="0" width="0" style="display:none;visibility:hidden"></iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->
    <!-- Barra Superior -->
    <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
        <div class="container-fluid">
            <!-- Marca de la Navbar -->
            <a class="navbar-brand text-primary fw-bold" href="/">
                <img src="{{ url_for('static', filename='images/logo.png') }}" alt="Pulztag Logo" height="40">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <!-- Enlaces de Navegación -->
            <div class="collapse navbar-collapse" id="navbarNav">
                <!-- Enlaces alineados a la izquierda -->
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link{% if request.path == '/' %} active{% endif %}" href="/">Inicio</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link{% if request.path == '/about' %} active{% endif %}" href="/about">Acerca
                            de</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link{% if request.path == '/products' %} active{% endif %}" href="{{ url_for('products') }}">Productos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link{% if request.path == '/order' %} active{% endif %}" href="/order">Pedido</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link{% if request.path == '/contact' %} active{% endif %}" href="/contact">Contacto</a>
                    </li>
                </ul>
                <!-- Botón desplegable alineado a la derecha -->
                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        {% if current_user.is_authenticated %}
                        <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown"
                            aria-expanded="false">
                            {{ current_user.username }}
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                            <li><a class="dropdown-item" href="{{ url_for('account') }}">Perfil</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="{{ url_for('logout') }}">Cerrar Sesión</a></li>
                        </ul>
                        {% else %}
                        <a class="nav-link dropdown-toggle" href="#" id="authDropdown" role="button" data-bs-toggle="dropdown"
                            aria-expanded="false">
                            Mi Cuenta
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="authDropdown">
                            <li><a class="dropdown-item" href="{{ url_for('login') }}">Iniciar Sesión</a></li>
                            <li><a class="dropdown-item" href="{{ url_for('register') }}">Crear Cuenta</a></li>
                        </ul>
                        {% endif %}
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Contenido Principal -->
    <div class="container mt-4">
        <!-- Mensajes Flash -->
        {% with messages = get_flashed_messages(with_categories=true) %}
        {% if messages %}
        <div class="row justify-content-center">
            <div class="col-md-8">
                {% for category, message in messages %}
                <div class="alert alert-{{ category }} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
                </div>
                {% endfor %}
            </div>
        </div>
        {% endif %}
        {% endwith %}

        {% block content %}{% endblock %}
    </div>

    <!-- Footer -->
    <footer class="bg-light text-center py-4 mt-5">
        &copy; 2024 Pulztag. Todos los derechos reservados.
    </footer>

    <!-- Bootstrap JS y dependencias -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- JS Personalizado -->
    <script src="{{ url_for('static', filename='js/script.js') }}"></script>

    {% block scripts %}{% endblock %}
</body>

</html>

----- Fin de templates/base.html -----

----- Inicio de templates/index.html -----
<!-- templates/index.html -->

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-NC88XS28');</script>
    <!-- End Google Tag Manager -->

{% extends 'base.html' %}

{% block title %}Inicio - PulztagWeb{% endblock %}

{% block content %}
<!-- Hero Section -->
<div class="jumbotron text-center">
    <h1 class="display-4">Transforma tu Negocio con Tecnología NFC</h1>
    <p class="lead">Dispositivos NFC personalizados y servicios a medida para impulsar tu crecimiento.</p>
    <!-- Imagen: hero_image.jpg (Una imagen representativa de dispositivos NFC en uso) -->
    <hr class="my-4">
    <a class="btn btn-primary btn-lg" href="#servicios" role="button">Nuestros Servicios</a>
</div>

<!-- Servicios Destacados -->
<section id="servicios" class="mt-5">
    <h2 class="text-center mb-4">Nuestros Servicios</h2>
    <div class="row">
        <div class="col-md-4">
            <div class="card text-center">
                <!-- Imagen: servicios_personalizados.jpg (Imagen de dispositivos NFC personalizados) -->
                <img src="{{ url_for('static', filename='images/servicios_personalizados.jpeg') }}" class="card-img-top"
                    alt="Dispositivos NFC Personalizados">
                <div class="card-body">
                    <i class="bi bi-tools" style="font-size: 2rem; color: #03c0ff;"></i>
                    <h5 class="card-title mt-3">Dispositivos NFC Personalizados</h5>
                    <p class="card-text">Diseñamos y configuramos dispositivos NFC adaptados a las necesidades
                        específicas de tu negocio.</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 mt-4 mt-md-0">
            <div class="card text-center">
                <!-- Imagen: desarrollo_servicios.jpg (Imagen de desarrollo de software o servicios) -->
                <img src="{{ url_for('static', filename='images/desarrollo_servicios.jpeg') }}" class="card-img-top"
                    alt="Desarrollo de Servicios Personalizados">
                <div class="card-body">
                    <i class="bi bi-code-slash" style="font-size: 2rem; color: #03c0ff;"></i>
                    <h5 class="card-title mt-3">Desarrollo de Servicios Personalizados</h5>
                    <p class="card-text">Colaboramos contigo para crear soluciones únicas, como aplicaciones de
                        georeferenciación y campañas de marketing NFC.</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 mt-4 mt-md-0">
            <div class="card text-center">
                <!-- Imagen: fidelizacion_clientes.jpg (Imagen representativa de fidelización de clientes) -->
                <img src="{{ url_for('static', filename='images/fidelizacion_clientes.jpeg') }}" class="card-img-top"
                    alt="Fidelización de Clientes">
                <div class="card-body">
                    <i class="bi bi-people-fill" style="font-size: 2rem; color: #03c0ff;"></i>
                    <h5 class="card-title mt-3">Fidelización de Clientes</h5>
                    <p class="card-text">Implementamos programas de fidelización utilizando tecnología NFC para
                        fortalecer la relación con tus clientes.</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Aplicaciones de Nuestras Soluciones NFC -->
<section class="mt-5">
    <h2 class="text-center mb-4">Aplicaciones de Nuestras Soluciones NFC</h2>
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <!-- Imagen: aplicacion_georeferenciacion.jpg (Imagen de georeferenciación NFC en acción) -->
                <img src="{{ url_for('static', filename='images/aplicacion_georeferenciacion.jpeg') }}"
                    class="card-img-top" alt="Georeferenciación de Etiquetas NFC">
                <div class="card-body">
                    <h4>Georeferenciación de Etiquetas NFC</h4>
                    <p>Desarrollamos aplicaciones que permiten la geolocalización de etiquetas NFC, facilitando el
                        seguimiento y la gestión eficiente de activos.</p>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card mb-4">
                <!-- Imagen: campañas_marketing_nfc.jpg (Imagen de campaña de marketing utilizando NFC) -->
                <img src="{{ url_for('static', filename='images/campanas_marketing_nfc.jpeg') }}" class="card-img-top"
                    alt="Campañas de Marketing NFC">
                <div class="card-body">
                    <h4>Campañas Publicitarias y Marketing</h4>
                    <p>Utiliza nuestros dispositivos NFC para crear campañas de marketing interactivas que conecten de
                        manera directa con tu audiencia. Reduce costos de producción gráfica</p>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <!-- Imagen: fidelizacion_programas.jpg (Imagen de programas de fidelización de clientes) -->
                <img src="{{ url_for('static', filename='images/fidelizacion_programas.jpeg') }}" class="card-img-top"
                    alt="Programas de Fidelización de Clientes">
                <div class="card-body">
                    <h4>Programas de Fidelización de Clientes</h4>
                    <p>Implementa programas de fidelización efectivos con tecnología NFC que recompensen a tus clientes
                        y fomenten su lealtad.</p>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card mb-4">
                <!-- Imagen: integracion_sistemas.jpg (Imagen de integración de sistemas NFC) -->
                <img src="{{ url_for('static', filename='images/integracion_sistemas.jpeg') }}" class="card-img-top"
                    alt="Integración de Sistemas NFC">
                <div class="card-body">
                    <h4>Integración de Sistemas</h4>
                    <p>Integramos nuestras soluciones NFC con tus sistemas existentes para optimizar procesos y mejorar
                        la eficiencia operativa.</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Clientes y Alianzas
<!--<section class="mt-5">
    <h2 class="text-center mb-4">Nuestros Clientes y Alianzas</h2>
    <div class="row justify-content-center">
        <div class="col-md-4 text-center">
            <!-- Imagen: cliente1_logo.jpg (Logo del cliente 1)
            <img src="{{ url_for('static', filename='images/cliente1_logo.jpeg') }}" class="img-fluid mb-3"
                alt="Cliente 1 Logo">
        </div>
        <div class="col-md-4 text-center mt-4 mt-md-0">
            <!-- Imagen: cliente2_logo.jpg (Logo del cliente 2)
            <img src="{{ url_for('static', filename='images/cliente2_logo.jpeg') }}" class="img-fluid mb-3"
                alt="Cliente 2 Logo">
        </div>
        <div class="col-md-4 text-center mt-4 mt-md-0">
            <!-- Imagen: cliente3_logo.jpg (Logo del cliente 3)
            <img src="{{ url_for('static', filename='images/cliente3_logo.jpeg') }}" class="img-fluid mb-3"
                alt="Cliente 3 Logo">
        </div>
    </div>
    <!-- Puedes agregar más logos o testimonios según sea necesario
</section>

<!-- Call to Action Section -->
<section class="text-center mt-5">
    <h2>¿Listo para Transformar tu Negocio?</h2>
    <p>Contáctanos hoy mismo y descubre cómo nuestras soluciones NFC pueden impulsar tu empresa.</p>
    <a class="btn btn-primary btn-lg" href="/contact" role="button">Contactar</a>
</section>
{% endblock %}

----- Fin de templates/index.html -----

----- Inicio de templates/contact.html -----
<!-- templates/contact.html -->

{% extends 'base.html' %}

{% block title %}Contacto - PulztagWeb{% endblock %}

{% block content %}
<h2 class="text-center mb-4">Contáctanos</h2>
<p class="text-center mb-5">Estamos aquí para ayudarte. Completa el formulario a continuación y nos pondremos en
    contacto contigo lo antes posible.</p>

<div class="row justify-content-center">
    <div class="col-md-8">
        <form method="POST" action="{{ url_for('contact') }}">
            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre</label>
                <input type="text" class="form-control" id="nombre" name="nombre" placeholder="Tu nombre" required>
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Correo Electrónico</label>
                <input type="email" class="form-control" id="email" name="email" placeholder="nombre@ejemplo.com"
                    required>
            </div>
            <div class="mb-3">
                <label for="mensaje" class="form-label">Mensaje</label>
                <textarea class="form-control" id="mensaje" name="mensaje" rows="5" placeholder="Tu mensaje"
                    required></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Enviar</button>
        </form>
    </div>
</div>

<!-- Información de Contacto Section -->
<div class="row justify-content-center mt-5">
    <div class="col-md-8">
        <div class="custom-solutions-section text-center p-5 rounded shadow">
            <h4 class="text-white">Información de Contacto</h4>
            <p class="text-white">Para más información, no dudes en ponerte en contacto con nosotros a través de los siguientes medios:</p>
            <ul class="list-unstyled">
                <li><strong>Correo Electrónico:</strong> <a href="mailto:contacto@pulztag.com" class="text-white">contacto@pulztag.com</a></li>
                <li><strong>Teléfono:</strong> <a href="tel:+56962411963" class="text-white">+56962411963</a></li>
                <li><strong>Instagram:</strong> <a href="https://www.instagram.com/pulztag" target="_blank" class="text-white">@pulztag</a></li>
            </ul>
        </div>
    </div>
</div>

{% endblock %}

----- Fin de templates/contact.html -----

----- Inicio de templates/order.html -----
<!-- templates/order.html -->

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-NC88XS28');</script>
    <!-- End Google Tag Manager -->

{% extends 'base.html' %}

{% block title %}Pedido - PulztagWeb{% endblock %}

{% block content %}
<h2 class="text-center mb-4">Realiza tu Pedido</h2>
<p class="text-center mb-5">Completa el formulario a continuación para realizar tu pedido de dispositivos NFC personalizados.</p>

<div class="row justify-content-center">
    <div class="col-md-8 mb-4">
        <form method="POST" action="{{ url_for('order') }}" enctype="multipart/form-data" id="orderForm">
            <!-- Campos del formulario -->
            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre</label>
                <input type="text" class="form-control" id="nombre" name="nombre" placeholder="Tu nombre" required>
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Correo Electrónico</label>
                <input type="email" class="form-control" id="email" name="email" placeholder="nombre@ejemplo.com" required>
            </div>
            <div class="mb-3">
                <label for="dispositivo" class="form-label">Selecciona un Dispositivo</label>
                <select class="form-select" id="dispositivo" name="dispositivo" required>
                    <option value="" disabled selected>Elige una opción</option>
                    <option value="NFC Token de PVC (30 mm)">NFC Token de PVC (30 mm)</option>
                    <option value="NFC Sticker (25 mm)">NFC Sticker (25 mm)</option>
                    <option value="NFC Cards">NFC Cards</option>
                    <!-- Agrega más opciones según sea necesario -->
                </select>
            </div>
            <div class="mb-3">
                <label for="mensaje" class="form-label">¿Qué necesitas?</label>
                <textarea class="form-control" id="mensaje" name="mensaje" rows="3" placeholder="Escribe tu mensaje aquí" required></textarea>
            </div>

            <!-- Sección para subir Logos -->
            <div class="mb-4">
                <label class="form-label">Subir Logos (png, jpeg, jpg) - Máximo 10 (*)</label>
                <input type="file" class="form-control" id="logoUpload" name="logos" accept=".png,.jpeg,.jpg" multiple>
                <ul class="list-group mt-2" id="logoList"></ul>
                <div id="logoError" class="text-danger mt-2" style="display: none;">Has alcanzado el máximo de 10 logos.</div>
                <p class="text-muted mt-2">(*) Sube aquí las imágenes que deseas imprimir en tus dispositivos personalizados. Nuestro equipo se encargará de ayudarte con la implementación y asegurará que tus diseños se vean espectaculares!</p>
            </div>

            <!-- Sección para subir Archivo Excel -->
            <div class="mb-4">
                <label class="form-label">Subir Archivo Excel (xlsx, xls) - Máximo 1 (*)</label>
                <input type="file" class="form-control" id="excelUpload" name="excel" accept=".xlsx,.xls">
                <ul class="list-group mt-2" id="excelList"></ul>
                <div id="excelError" class="text-danger mt-2" style="display: none;">Solo puedes subir un archivo Excel.</div>
                <p class="text-muted mt-2">(*) Cada dispositivo puede tener una configuración única. Para pedidos de gran volumen, por favor proporciona los detalles en un archivo Excel.</p>
            </div>
            <button type="submit" class="btn btn-primary">Enviar solicitud</button>
        </form>
    </div>
</div>

<!-- Información Bancaria Section -->
<div class="row justify-content-center mt-5">
    <div class="col-md-8">
        <div class="custom-solutions-section text-center p-5 rounded shadow">
            <h4 class="text-white">Datos para Transferencia</h4>
            <ul class="list-unstyled">
                <li><strong>Banco:</strong> Banco de Chile</li>
                <li><strong>Tipo de Cuenta:</strong> Cuenta Corriente</li>
                <li><strong>Nombre:</strong> Pulztag SpA</li>
                <li><strong>Número de Cuenta:</strong> 00-888-08888-08</li>
                <li><strong>RUT:</strong> 88.888.888-8</li>
                <li><strong>Correo:</strong> <a href="mailto:contacto@pulztag.com" class="text-white">contacto@pulztag.com</a></li>
                <li><strong>Teléfono:</strong> <a href="tel:+56962411963" class="text-white">+56962411963</a></li>
            </ul>
        </div>
    </div>
</div>

{% endblock %}

----- Fin de templates/order.html -----

----- Inicio de templates/products.html -----
{% extends 'base.html' %}

{% block title %}Nuestros Productos - PulztagWeb{% endblock %}

{% block content %}
<div class="container">
    <h2 class="text-center mb-4">Nuestros Productos</h2>
    <p class="text-center mb-5">Descubre nuestras soluciones de NFC y RFID personalizadas para diversas industrias.</p>

    <!-- Soluciones Personalizadas Section Mejorada -->
    <div class="row mb-5">
        <div class="col-md-12">
            <div class="custom-solutions-section text-center p-5 rounded shadow">
                <h4 class="text-white">Soluciones Personalizadas para Industrias</h4>
                <div class="solutions-list">
                    <div class="solution-item">
                        <h5>Marketing y Publicidad</h5>
                        <p>Campañas interactivas con etiquetas y tarjetas NFC que dirigen a contenido exclusivo.</p>
                    </div>
                    <div class="solution-item">
                        <h5>Eventos</h5>
                        <p>Control de accesos y branding en llaveros que conectan a experiencias digitales.</p>
                    </div>
                    <div class="solution-item">
                        <h5>Educación</h5>
                        <p>Uso de tokens NFC para administrar acceso y participación en cursos.</p>
                    </div>
                    <div class="solution-item">
                        <h5>Logística</h5>
                        <p>Etiquetas NFC duraderas para el seguimiento de envíos y productos.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Etiquetas NFC Section: Texto Izquierda / Imagen Derecha -->
    <div class="row mb-5">
        <div class="col-md-6">
            <h4>Etiquetas NFC</h4>
            <p>Tokens de plástico con tecnología NFC, ideales para campañas de marketing, eventos, y fidelización.</p>
            <ul>
                <li>Dimensiones: 30.0 mm diámetro x 0.9 mm espesor</li>
                <li>Materiales: PVC y metálico</li>
                <li>Resistentes al agua</li>
                <li>Opciones de adhesivo: Media resistencia o alta resistencia</li>
                <li>Aplicaciones: Promociones, eventos, logística.</li>
            </ul>
            <p class="price text-center mt-3">Desde <span class="price-value">$2.990</span> (IVA inc.)</p>
        </div>
        <div class="col-md-6">
            <img src="/static/images/etiquetas_nfc.jpeg" alt="Etiquetas NFC" class="img-fluid rounded shadow">
        </div>
    </div>

    <!-- Tarjetas NFC Personalizadas Section: Texto Derecha / Imagen Izquierda -->
    <div class="row mb-5">
        <div class="col-md-6 order-md-2">
            <h4>Tarjetas NFC Personalizadas</h4>
            <p>Tarjetas de PVC rígido con impresión de alta calidad por ambas caras, ideales para contacto instantáneo, vCards, y campañas publicitarias.</p>
            <ul>
                <li>Dimensiones: 85.60 mm x 53.98 mm x 0.76 mm</li>
                <li>Colores: Blanco y Negro</li>
                <li>Material: PVC</li>
                <li>Aplicaciones: Contacto instantáneo, enlaces a vCards, apertura de apps, campañas publicitarias.</li>
            </ul>
            <p class="price text-center mt-3">Desde <span class="price-value">$4.990</span> (IVA inc.)</p>
        </div>
        <div class="col-md-6 order-md-1">
            <img src="/static/images/tarjetas_nfc.jpeg" alt="Tarjetas NFC Personalizadas" class="img-fluid rounded shadow">
        </div>
    </div>

    <!-- Stickers NFC Section: Texto Izquierda / Imagen Derecha -->
    <div class="row mb-5">
        <div class="col-md-6">
            <h4>Stickers NFC</h4>
            <p>Stickers personalizables con tecnología NFC, disponibles en diseños predefinidos o completamente personalizados con el branding de tu empresa.</p>
            <ul>
                <li>Impresión: Una o dos caras</li>
                <li>Material: PVC o adhesivo fuerte</li>
                <li>Aplicaciones: Branding, marketing interactivo, logística.</li>
            </ul>
            <p class="price text-center mt-3">Desde <span class="price-value">$2.990</span> (IVA inc.)</p>
        </div>
        <div class="col-md-6">
            <img src="/static/images/stickers_nfc.jpg" alt="Stickers NFC" class="img-fluid rounded shadow">
        </div>
    </div>
</div>
{% endblock %}

----- Fin de templates/products.html -----

----- Inicio de templates/reset_request.html -----
<!-- templates/reset_request.html -->

{% extends 'base.html' %}

{% block title %}Recuperar Contraseña - PulztagWeb{% endblock %}

{% block content %}
<h2 class="text-center mb-4">Recuperar Contraseña</h2>
<div class="row justify-content-center">
    <div class="col-md-6">
        <form method="POST" action="{{ url_for('reset_request') }}">
            {{ form.hidden_tag() }}
            <div class="mb-3">
                {{ form.email.label(class="form-label") }}
                {{ form.email(class="form-control", placeholder="Correo Electrónico") }}
                {% for error in form.email.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <button type="submit" class="btn btn-primary">{{ form.submit.label.text }}</button>
        </form>
        <p class="mt-3">¿Recuerdas tu contraseña? <a href="{{ url_for('login') }}">Inicia Sesión</a></p>
    </div>
</div>
{% endblock %}

----- Fin de templates/reset_request.html -----

----- Inicio de templates/reset_token.html -----
<!-- templates/reset_token.html -->

{% extends 'base.html' %}

{% block title %}Restablecer Contraseña - PulztagWeb{% endblock %}

{% block content %}
<h2 class="text-center mb-4">Restablecer Contraseña</h2>
<div class="row justify-content-center">
    <div class="col-md-6">
        <form method="POST" action="{{ url_for('reset_token', token=token) }}">
            {{ form.hidden_tag() }}
            <div class="mb-3">
                {{ form.password.label(class="form-label") }}
                {{ form.password(class="form-control", placeholder="Nueva Contraseña") }}
                {% for error in form.password.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <div class="mb-3">
                {{ form.confirm_password.label(class="form-label") }}
                {{ form.confirm_password(class="form-control", placeholder="Confirmar Nueva Contraseña") }}
                {% for error in form.confirm_password.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <button type="submit" class="btn btn-primary">{{ form.submit.label.text }}</button>
        </form>
    </div>
</div>
{% endblock %}

----- Fin de templates/reset_token.html -----

----- Inicio de templates/register.html -----
<!-- templates/register.html -->

{% extends 'base.html' %}

{% block title %}Registrar - PulztagWeb{% endblock %}

{% block content %}
<h2 class="text-center mb-4">Crear una Nueva Cuenta</h2>
<div class="row justify-content-center">
    <div class="col-md-6">
        <form method="POST" action="{{ url_for('register') }}">
            {{ form.hidden_tag() }}
            <div class="mb-3">
                {{ form.username.label(class="form-label") }}
                {{ form.username(class="form-control", placeholder="Nombre de Usuario") }}
                {% for error in form.username.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <div class="mb-3">
                {{ form.email.label(class="form-label") }}
                {{ form.email(class="form-control", placeholder="Correo Electrónico") }}
                {% for error in form.email.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <div class="mb-3">
                {{ form.password.label(class="form-label") }}
                {{ form.password(class="form-control", placeholder="Contraseña") }}
                {% for error in form.password.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <div class="mb-3">
                {{ form.confirm_password.label(class="form-label") }}
                {{ form.confirm_password(class="form-control", placeholder="Confirmar Contraseña") }}
                {% for error in form.confirm_password.errors %}
                    <div class="text-danger">{{ error }}</div>
                {% endfor %}
            </div>
            <button type="submit" class="btn btn-primary">{{ form.submit.label.text }}</button>
        </form>
        <p class="mt-3">¿Ya tienes una cuenta? <a href="{{ url_for('login') }}">Inicia Sesión</a></p>
    </div>
</div>
{% endblock %}

----- Fin de templates/register.html -----









import os
import uuid
from urllib.parse import urlparse
from flask import Flask, render_template, request, flash, redirect, url_for, send_from_directory, abort
from flask_mail import Mail, Message
from flask_wtf.csrf import CSRFProtect
from dotenv import load_dotenv
import pandas as pd
from werkzeug.utils import secure_filename
from itsdangerous import URLSafeTimedSerializer, SignatureExpired
from extensions import db, migrate, bcrypt, login_manager
from models import User, Role, Pulzcard, Tag
from forms import (
    RegistrationForm, LoginForm, UpdateAccountForm,
    RequestResetForm, ResetPasswordForm,
    PulzcardForm, EditPulzcardForm, DeletePulzcardForm,
    ContactForm, OrderForm, TagForm, EditTagForm, DeleteTagForm
)
from flask_login import login_required, current_user, login_user, logout_user
from datetime import datetime
from flask_security import Security, SQLAlchemyUserDatastore, roles_required, roles_accepted
from flask_admin import Admin
from flask_admin.contrib.sqla import ModelView
from flask_security.forms import RegisterForm
from flask_security import user_registered
from flask import flash, redirect

load_dotenv()

app = Flask(__name__, instance_relative_config=True)
app.secret_key = os.getenv('SECRET_KEY', 'test_secret_key')

# Configuración de la Base de Datos
db_path = os.path.join(app.instance_path, 'site_new.db')
app.config['SQLALCHEMY_DATABASE_URI'] = f'sqlite:///{db_path}'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

# Configuración de Flask-Mail
app.config['MAIL_SERVER'] = 'smtp.gmail.com'
app.config['MAIL_PORT'] = 587
app.config['MAIL_USE_TLS'] = True
app.config['MAIL_USERNAME'] = os.getenv('MAIL_USERNAME')
app.config['MAIL_PASSWORD'] = os.getenv('MAIL_PASSWORD')
app.config['MAIL_DEFAULT_SENDER'] = os.getenv('MAIL_USERNAME')

# Configuración de Flask-Security-Too
app.config['SECURITY_PASSWORD_SALT'] = os.getenv('SECURITY_PASSWORD_SALT', 'my_precious_two')
app.config['SECURITY_REGISTERABLE'] = True
app.config['SECURITY_SEND_REGISTER_EMAIL'] = False  # Deshabilitar envío de emails al registrarse
app.config['SECURITY_RECOVERABLE'] = True
app.config['SECURITY_CHANGEABLE'] = True
app.config['SECURITY_TRACKABLE'] = True

# Inicializar Extensiones
db.init_app(app)
migrate.init_app(app, db)
bcrypt.init_app(app)
login_manager.init_app(app)
mail = Mail(app)
csrf = CSRFProtect(app)

# Configuración de Flask-Login
login_manager.login_view = 'security.login'
login_manager.login_message_category = 'warning'

@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))

# Configurar el serializador
s = URLSafeTimedSerializer(app.secret_key)

# Directorio para guardar las vCards
VCARD_FOLDER = os.path.join(app.instance_path, 'vcards')
os.makedirs(VCARD_FOLDER, exist_ok=True)

# Directorio para guardar las subidas
UPLOAD_FOLDER = os.path.join(app.instance_path, 'uploads')
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# Extensiones permitidas (si las usas)
ALLOWED_LOGO_EXTENSIONS = {'png', 'jpeg', 'jpg'}
ALLOWED_EXCEL_EXTENSIONS = {'xlsx', 'xls'}

def allowed_file(filename, allowed_extensions):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in allowed_extensions

# Inicializar los modelos de seguridad
user_datastore = SQLAlchemyUserDatastore(db, User, Role)
security = Security(app, user_datastore)

# Crear roles y un usuario administrador si no existen
@app.before_first_request
def create_user():
    db.create_all()
    if not user_datastore.find_role('admin'):
        user_datastore.create_role(name='admin', description='Administrador del sitio')
    if not user_datastore.find_role('user'):
        user_datastore.create_role(name='user', description='Usuario estándar')
    if not user_datastore.get_user('admin@example.com'):
        user_datastore.create_user(
            username='admin',
            email='admin@example.com',
            password=bcrypt.generate_password_hash('password').decode('utf-8'),
            roles=['admin']
        )
    db.session.commit()

# Definir una clase personalizada para Flask-Admin que restringe el acceso a administradores
class AdminModelView(ModelView):
    def is_accessible(self):
        return current_user.is_authenticated and ('admin' in [role.name for role in current_user.roles])

    def inaccessible_callback(self, name, **kwargs):
        flash('No tienes acceso a esta sección.', 'danger')
        return redirect(url_for('security.login'))

# Inicializar Flask-Admin
admin = Admin(app, name='Panel de Administración', template_mode='bootstrap3')
admin.add_view(AdminModelView(User, db.session))
admin.add_view(AdminModelView(Role, db.session))
admin.add_view(AdminModelView(Pulzcard, db.session))
admin.add_view(AdminModelView(Tag, db.session))

# Rutas Existentes

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/about')
def about():
    return render_template('about.html')

@app.route('/contact', methods=['GET', 'POST'])
def contact():
    form = ContactForm()  # Crear una instancia del formulario
    if form.validate_on_submit():  # Usar validate_on_submit para verificar el envío
        nombre = form.nombre.data
        email = form.email.data
        mensaje = form.mensaje.data

        try:
            msg = Message(
                subject=f"Nuevo mensaje de {nombre}",
                recipients=['contacto@pulztag.com'],
                body=f"Nombre: {nombre}\nCorreo Electrónico: {email}\n\nMensaje:\n{mensaje}"
            )
            mail.send(msg)
            flash('¡Tu mensaje ha sido enviado exitosamente!', 'success')
            return redirect(url_for('contact'))
        except Exception as e:
            print(e)
            flash('Hubo un error al enviar tu mensaje. Por favor, inténtalo de nuevo más tarde.', 'danger')
            return redirect(url_for('contact'))

    return render_template('contact.html', form=form)  # Pasar el formulario al template

@app.route('/products')
def products():
    return render_template('products.html')

@app.route('/order', methods=['GET', 'POST'])
@login_required
@roles_required('user')  # Restringir a usuarios con rol 'user' o superiores
def order():
    form = OrderForm()  # Crear una instancia del formulario
    if form.validate_on_submit():
        # Procesa el pedido
        nombre = form.nombre.data
        email = form.email.data
        dispositivo = form.dispositivo.data
        mensaje = form.mensaje.data

        # Validaciones básicas
        if not nombre or not email or not dispositivo or not mensaje:
            flash('Por favor, completa todos los campos.', 'danger')
            return redirect(url_for('order'))

        # Manejar los logos
        logos = request.files.getlist('logos')
        valid_logos = [logo for logo in logos if logo.filename != '']
        if len(valid_logos) > 10:
            flash('Puedes subir un máximo de 10 logos.', 'danger')
            return redirect(url_for('order'))

        saved_logos = []
        for logo in valid_logos:
            filename = logo.filename.strip()
            if allowed_file(filename, ALLOWED_LOGO_EXTENSIONS):
                try:
                    secure_name = secure_filename(filename)
                    unique_filename = f"{uuid.uuid4().hex}_{secure_name}"
                    logo_path = os.path.join(app.config['UPLOAD_FOLDER'], unique_filename)
                    logo.save(logo_path)
                    saved_logos.append((filename, logo_path))
                    print(f"Logo guardado: {logo_path}")
                except Exception as e:
                    print(f"Error al guardar el logo {filename}: {e}")
                    flash(f"Hubo un error al guardar el logo {filename}.", 'danger')
                    return redirect(url_for('order'))
            else:
                flash(f"Formato de logo no permitido: {filename}", 'danger')
                return redirect(url_for('order'))

        # Manejar el archivo Excel
        excel = request.files.get('excel')
        if excel and excel.filename != '':
            filename = excel.filename.strip()
            if allowed_file(filename, ALLOWED_EXCEL_EXTENSIONS):
                try:
                    secure_name = secure_filename(filename)
                    unique_filename = f"{uuid.uuid4().hex}_{secure_name}"
                    excel_path = os.path.join(app.config['UPLOAD_FOLDER'], unique_filename)
                    excel.save(excel_path)
                    print(f"Archivo Excel guardado: {excel_path}")
                except Exception as e:
                    print(f"Error al guardar el archivo Excel {filename}: {e}")
                    flash(f"Hubo un error al guardar el archivo Excel {filename}.", 'danger')
                    return redirect(url_for('order'))
            else:
                flash('Formato de archivo Excel no permitido.', 'danger')
                return redirect(url_for('order'))
        else:
            excel_path = None

        # Crear un DataFrame con los datos del pedido
        data = {
            'Nombre': [nombre],
            'Correo Electrónico': [email],
            'Selección de Dispositivo': [dispositivo],
            'Mensaje': [mensaje]
        }
        df = pd.DataFrame(data)

        # Guardar el DataFrame en un archivo Excel
        pedido_excel_path = os.path.join(app.config['UPLOAD_FOLDER'], f"pedido_{uuid.uuid4().hex}.xlsx")
        df.to_excel(pedido_excel_path, index=False)
        print(f"Pedido guardado en: {pedido_excel_path}")

        # Enviar el correo con los archivos adjuntos
        try:
            msg = Message(
                subject="Nuevo Pedido de PulztagWeb",
                recipients=['contacto@pulztag.com']
            )
            msg.body = f"Nombre: {nombre}\nCorreo Electrónico: {email}\nSelección de Dispositivo: {dispositivo}\n\nMensaje:\n{mensaje}"

            # Adjuntar el archivo Excel del pedido
            with open(pedido_excel_path, 'rb') as fp:
                msg.attach(
                    "pedido.xlsx",
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    fp.read()
                )

            # Adjuntar los logos
            for original_filename, logo_path in saved_logos:
                try:
                    print(f"Adjuntando logo: {original_filename} desde {logo_path}")
                    with open(logo_path, 'rb') as fp:
                        # Determinar el MIME type correcto
                        ext = original_filename.rsplit('.', 1)[1].lower()
                        mime_type = f"image/{'jpeg' if ext in ['jpg', 'jpeg'] else ext}"
                        msg.attach(
                            original_filename,
                            mime_type,
                            fp.read()
                        )
                except Exception as e:
                    print(f"Error adjuntando el logo {original_filename}: {e}")

            # Adjuntar el archivo Excel si existe
            if excel_path:
                with open(excel_path, 'rb') as fp:
                    msg.attach(
                        os.path.basename(excel_path),
                        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        fp.read()
                    )

            mail.send(msg)
            print("Correo enviado exitosamente.")

            # Eliminar archivos temporales
            os.remove(pedido_excel_path)
            for _, logo_path in saved_logos:
                os.remove(logo_path)
            if excel_path:
                os.remove(excel_path)
            print("Archivos temporales eliminados.")

            flash('Su solicitud fue enviada exitosamente. ¡Pronto nos pondremos en contacto contigo!', 'success')
            return redirect(url_for('order'))

        except Exception as e:
            print(f"Error al enviar el correo: {e}")
            flash('Hubo un error al procesar tu solicitud. Por favor, inténtalo de nuevo más tarde.', 'danger')
            return redirect(url_for('order'))

    # Rutas de Pulzcard
    @app.route('/pulzcard', methods=['GET', 'POST'])
    @login_required
    @roles_required('user')  # Restringir a usuarios con rol 'user' o superiores
    def pulzcard():
        form = PulzcardForm()
        if form.validate_on_submit():
            # Handle the image file if provided
            if form.image_file.data:
                # Save the uploaded image file
                image_file = form.image_file.data
                filename = secure_filename(image_file.filename)
                unique_filename = f"{uuid.uuid4().hex}_{filename}"
                image_path = os.path.join(app.config['UPLOAD_FOLDER'], unique_filename)
                image_file.save(image_path)
                print(f"Image saved at: {image_path}")
            else:
                unique_filename = 'default.jpg'

            # Crear Pulzcard y agregar a la base de datos
            pulzcard = Pulzcard(
                card_name=form.card_name.data,
                first_name=form.first_name.data,
                last_name=form.last_name.data,
                organization=form.organization.data,
                position=form.position.data,
                phone=form.phone.data,
                email=form.email.data,
                website=form.website.data,
                address=form.address.data,
                image_file=unique_filename,  # Store the image filename in the database
                owner=current_user
            )

            # Añadir a la sesión y hacer flush para obtener card_id
            db.session.add(pulzcard)
            try:
                db.session.flush()  # Asigna card_id sin commit
                print(f"Pulzcard creada con card_id: {pulzcard.card_id}")
            except Exception as e:
                db.session.rollback()
                print(f"Error al hacer flush de Pulzcard: {e}")
                flash('Hubo un error al crear tu Pulzcard. Por favor, inténtalo de nuevo.', 'danger')
                return redirect(url_for('pulzcard'))

            # Crear y guardar la vCard
            vcard = f"""BEGIN:VCARD
VERSION:3.0
FN:{pulzcard.first_name} {pulzcard.last_name}
ORG:{pulzcard.organization}
TITLE:{pulzcard.position}
TEL;TYPE=WORK,VOICE:{pulzcard.phone}
EMAIL:{pulzcard.email}
URL:{pulzcard.website}
ADR;TYPE=WORK:;;{pulzcard.address}
END:VCARD"""
            vcard_path = os.path.join(VCARD_FOLDER, f'{pulzcard.card_id}.vcf')
            print(f"Intentando guardar vCard en: {vcard_path}")

            try:
                with open(vcard_path, 'w') as f:
                    f.write(vcard)
                print(f"vCard guardada exitosamente en: {vcard_path}")
            except Exception as e:
                db.session.rollback()
                print(f"Error al guardar la vCard: {e}")
                flash('Hubo un error al guardar la Pulzcard.', 'danger')
                return redirect(url_for('pulzcard'))

            # Commit de la Pulzcard y finalización
            try:
                db.session.commit()
                print("Pulzcard añadida a la base de datos correctamente.")
            except Exception as e:
                db.session.rollback()
                print(f"Error al crear Pulzcard en la base de datos: {e}")
                flash('Hubo un error al crear tu Pulzcard. Por favor, inténtalo de nuevo.', 'danger')
                return redirect(url_for('pulzcard'))

            # Redirigir usando card_id en lugar de id
            return redirect(url_for('pulzcard_card', card_id=pulzcard.card_id))
        else:
            print("Formulario no validado. Errores:", form.errors)

        return render_template('pulzcard/index.html', form=form)

    @app.route('/pulzcard/card/<card_id>')
    def pulzcard_card(card_id):
        # Query the Pulzcard from the database using only card_id
        pulzcard = Pulzcard.query.filter_by(card_id=card_id).first()
        if not pulzcard:
            flash('Tarjeta no encontrada.', 'danger')
            return redirect(url_for('home'))

        # Path to the vCard file
        vcard_path = os.path.join(VCARD_FOLDER, f'{card_id}.vcf')
        print(f"Intentando leer vCard en: {vcard_path}")

        # Check if vCard file exists
        if not os.path.exists(vcard_path):
            print(f"vCard no encontrada en: {vcard_path}")
            flash('Tarjeta no encontrada.', 'danger')
            return redirect(url_for('home'))

        # Read the vCard content
        with open(vcard_path, 'r') as f:
            vcard = f.read()

        # Extract contact information from the vCard
        contact_info = {
            "full_name": f"{pulzcard.first_name} {pulzcard.last_name}",
            "organization": pulzcard.organization,
            "position": pulzcard.position,
            "phone": pulzcard.phone,
            "email": pulzcard.email,
            "website": pulzcard.website,
            "address": pulzcard.address,
            "image_file": pulzcard.image_file  # Add the image file from the database
        }

        # Print extracted contact information for debugging
        print(f"Información de contacto extraída: {contact_info}")

        # Render the template with the complete contact information
        return render_template('pulzcard/card.html', contact=contact_info, card_id=card_id)

    @app.route('/uploads/<filename>')
    def uploaded_file(filename):
        return send_from_directory(app.config['UPLOAD_FOLDER'], filename)

    @app.route('/pulzcard/vcards/<filename>')
    def pulzcard_download_vcard(filename):
        # Opcional: Validar que el archivo existe y pertenece a una Pulzcard existente
        file_path = os.path.join(VCARD_FOLDER, filename)
        if not os.path.exists(file_path):
            flash('Archivo no encontrado.', 'danger')
            return redirect(url_for('home'))
        return send_from_directory(VCARD_FOLDER, filename, as_attachment=True)

    # Ruta de Perfil de Usuario
    @app.route('/profile', methods=['GET', 'POST'])
    @login_required
    @roles_required('user')  # Restringir a usuarios con rol 'user' o superiores
    def profile():
        pulzcards = Pulzcard.query.filter_by(user_id=current_user.id).order_by(Pulzcard.created_at.desc()).all()
        tags = Tag.query.filter_by(user_id=current_user.id).order_by(Tag.created_at.desc()).all()
        tag_form = TagForm()
        pulzcard_form = PulzcardForm()

        # Initialize delete forms for each Pulzcard and Tag
        delete_forms = {card.id: DeletePulzcardForm(prefix=str(card.card_id)) for card in pulzcards}
        delete_tag_forms = {tag.id: DeleteTagForm(prefix=str(tag.tag_id)) for tag in tags}

        # Manejar el formulario de Etiqueta
        if tag_form.validate_on_submit() and 'tag_name' in request.form:
            new_tag = Tag(
                tag_name=tag_form.tag_name.data,
                redirect_url=tag_form.redirect_url.data,
                user_id=current_user.id
            )
            db.session.add(new_tag)
            db.session.commit()
            flash('Tu etiqueta ha sido creada exitosamente.', 'success')
            return redirect(url_for('profile'))

        # Manejar el formulario de Pulzcard desde la modal
        if pulzcard_form.validate_on_submit() and 'card_name' in request.form:
            # Handle the image file if provided
            if pulzcard_form.image_file.data:
                # Save the uploaded image file
                image_file = pulzcard_form.image_file.data
                filename = secure_filename(image_file.filename)
                unique_filename = f"{uuid.uuid4().hex}_{filename}"
                image_path = os.path.join(app.config['UPLOAD_FOLDER'], unique_filename)
                image_file.save(image_path)
                print(f"Image saved at: {image_path}")
            else:
                unique_filename = 'default.jpg'

            # Crear Pulzcard y agregar a la base de datos
            pulzcard = Pulzcard(
                card_name=pulzcard_form.card_name.data,
                first_name=pulzcard_form.first_name.data,
                last_name=pulzcard_form.last_name.data,
                organization=pulzcard_form.organization.data,
                position=pulzcard_form.position.data,
                phone=pulzcard_form.phone.data,
                email=pulzcard_form.email.data,
                website=pulzcard_form.website.data,
                address=pulzcard_form.address.data,
                image_file=unique_filename,  # Store the image filename in the database
                owner=current_user
            )

            # Añadir a la sesión y hacer flush para obtener card_id
            db.session.add(pulzcard)
            try:
                db.session.flush()  # Asigna card_id sin commit
                print(f"Pulzcard creada con card_id: {pulzcard.card_id}")
            except Exception as e:
                db.session.rollback()
                print(f"Error al hacer flush de Pulzcard: {e}")
                flash('Hubo un error al crear tu Pulzcard. Por favor, inténtalo de nuevo.', 'danger')
                return redirect(url_for('profile'))

            # Crear y guardar la vCard
            vcard = f"""BEGIN:VCARD
VERSION:3.0
FN:{pulzcard.first_name} {pulzcard.last_name}
ORG:{pulzcard.organization}
TITLE:{pulzcard.position}
TEL;TYPE=WORK,VOICE:{pulzcard.phone}
EMAIL:{pulzcard.email}
URL:{pulzcard.website}
ADR;TYPE=WORK:;;{pulzcard.address}
END:VCARD"""
            vcard_path = os.path.join(VCARD_FOLDER, f'{pulzcard.card_id}.vcf')
            print(f"Intentando guardar vCard en: {vcard_path}")

            try:
                with open(vcard_path, 'w') as f:
                    f.write(vcard)
                print(f"vCard guardada exitosamente en: {vcard_path}")
            except Exception as e:
                db.session.rollback()
                print(f"Error al guardar la vCard: {e}")
                flash('Hubo un error al guardar la Pulzcard.', 'danger')
                return redirect(url_for('profile'))

            # Commit de la Pulzcard y finalización
            try:
                db.session.commit()
                print("Pulzcard añadida a la base de datos correctamente.")
            except Exception as e:
                db.session.rollback()
                print(f"Error al crear Pulzcard en la base de datos: {e}")
                flash('Hubo un error al crear tu Pulzcard. Por favor, inténtalo de nuevo.', 'danger')
                return redirect(url_for('profile'))

            # Redirigir usando card_id en lugar de id
            flash('Pulzcard creada exitosamente.', 'success')
            return redirect(url_for('profile'))

        return render_template(
            'profile.html', 
            title='Perfil de Usuario', 
            pulzcards=pulzcards, 
            tags=tags, 
            tag_form=tag_form, 
            pulzcard_form=pulzcard_form,  # Pasar el formulario de Pulzcard
            delete_forms=delete_forms,  # Pulzcard delete forms
            delete_tag_forms=delete_tag_forms  # Tag delete forms
        )

    @app.route('/r/<tag_id>')
    def redirect_tag(tag_id):
        # Busca la etiqueta usando tag_id en lugar de id
        tag = Tag.query.filter_by(tag_id=tag_id).first()
        if tag:
            return redirect(tag.redirect_url)
        else:
            flash('La etiqueta no existe o fue eliminada.', 'danger')
            return redirect(url_for('profile'))

    @app.route('/tag/delete/<tag_id>', methods=['POST'])
    @login_required
    @roles_required('user')  # Restringir a usuarios con rol 'user' o superiores
    def delete_tag(tag_id):
        tag = Tag.query.filter_by(tag_id=tag_id, user_id=current_user.id).first_or_404()

        form = DeleteTagForm()
        if form.validate_on_submit():
            try:
                db.session.delete(tag)
                db.session.commit()
                flash('Etiqueta eliminada exitosamente.', 'success')
            except Exception as e:
                print(f"Error al eliminar etiqueta: {e}")
                flash('Hubo un error al eliminar la etiqueta. Por favor, intenta de nuevo.', 'danger')
        else:
            flash('Formulario inválido o token CSRF no válido.', 'danger')

        return redirect(url_for('profile'))

    # Nueva Ruta: Editar Pulzcard
    @app.route('/pulzcard/edit/<card_id>', methods=['GET', 'POST

    




    # app.py

# ============================================
# Importaciones estándar de la biblioteca
# ============================================

import os
import uuid
from io import BytesIO
from random import randint
from urllib.parse import urlparse
from datetime import datetime, timedelta, timezone

# ============================================
# Importaciones de terceros
# ============================================

from flask import (
    Flask, render_template, request, flash, redirect, url_for,
    send_from_directory, send_file, jsonify, make_response, abort
)
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy.exc import IntegrityError
from sqlalchemy import exists
from sqlalchemy.orm import joinedload
from flask_bcrypt import Bcrypt
from flask_mail import Mail, Message
from flask_wtf.csrf import CSRFProtect
from flask_login import login_required, current_user, login_user, logout_user, LoginManager
from flask_admin import Admin
from flask_admin.contrib.sqla import ModelView
from itsdangerous import URLSafeTimedSerializer, SignatureExpired
from werkzeug.utils import secure_filename
from werkzeug.security import generate_password_hash
import pandas as pd
import qrcode
from dotenv import load_dotenv

# ============================================
# Importaciones locales
# ============================================

from extensions import mail, db, migrate, bcrypt, login_manager, oauth
from models import User, Pulzcard, Tag, Bodega, Caja, Producto, SecureModelView, DashboardItem, SurveyResponse
from forms import (
    RegistrationForm, LoginForm, UpdateAccountForm,
    RequestResetForm, ResetPasswordForm,
    PulzcardForm, EditPulzcardForm, DeletePulzcardForm,
    ContactForm, OrderForm, TagForm, EditTagForm, DeleteTagForm,
    BodegaForm, EditBodegaForm, DeleteBodegaForm,
    CajaForm, EditCajaForm, DeleteCajaForm, ProductoForm, EditProductoForm, DeleteProductoForm,
    ImportTagsForm, BulkDeleteTagForm, DeleteDashboardItemForm,
    ImportPulzcardForm, BulkDeletePulzcardForm, DeleteCajaForm, DeleteProductoForm
)

# ============================================
# Configuración de la aplicación Flask
# ============================================

from routes.auth_routes import main_bp #importación de tu blueprint de autenticación

load_dotenv()  # Carga las variables de entorno desde el archivo .env es




from flask import Flask
from flask_mail import Mail, Message
from dotenv import load_dotenv
import os
import logging

# Cargar variables de entorno desde .env
load_dotenv()

app = Flask(__name__)

# Configuración de Flask-Mail para usar SSL en el puerto 465
app.config['MAIL_SERVER'] = 'smtp.gmail.com'
app.config['MAIL_PORT'] = 465
app.config['MAIL_USE_TLS'] = False
app.config['MAIL_USE_SSL'] = True
app.config['MAIL_USERNAME'] = os.getenv('MAIL_USERNAME')
app.config['MAIL_PASSWORD'] = os.getenv('MAIL_PASSWORD')
app.config['MAIL_DEFAULT_SENDER'] = os.getenv('MAIL_USERNAME')

mail = Mail(app)

# Configuración de Logging
logging.basicConfig(level=logging.INFO)
app.logger.info(f"MAIL_USERNAME: {app.config['MAIL_USERNAME']}")
# No hagas log de MAIL_PASSWORD por razones de seguridad

with app.app_context():
    try:
        msg = Message(
            "Prueba de Flask-Mail",
            recipients=["contacto@pulztag.com"]  # Reemplaza con una dirección válida
        )
        msg.body = "Este es un correo de prueba enviado desde Flask-Mail usando SSL en el puerto 465."
        mail.send(msg)
        print("Correo enviado exitosamente.")
    except Exception as e:
        print(f"Error al enviar el correo: {e}")
        app.logger.error(f"Error al enviar el correo: {e}")





ESPALDO DE PROFILE.HTML

<!-- templates/profile.html -->

{% extends 'base.html' %}

{% block title %}Perfil de Usuario - PulztagWeb (Escala 1-10 NPS){% endblock %}

{% block head %}
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">

<style>
body {
  background-image: url("/static/images/background.jpg") !important;
  background-size: cover;
  background-attachment: fixed;
  background-position: center;
}

.d-flex {
  display: flex !important;
}
.h-100 {
  height: 100% !important;
}

#sidebar {
  height: calc(100vh - 90px - 75px); 
  overflow-y: auto;
}
@media (max-width: 768px) {
  #sidebar {
    height: auto;
  }
}
</style>
{% endblock %}

{% block content %}
<div class="d-flex h-100">
  <!-- SIDEBAR -->
  <div id="sidebar" class="col-auto border-end sidebar-transition d-none d-md-flex flex-column collapsed" style="flex-shrink: 0;">
    <div class="sidebar-header d-flex align-items-center p-3 border-bottom">
      <div class="user-display">
        <span class="user-fullname">{{ current_user.username }}</span>
      </div>
      <button id="sidebarToggle" class="btn btn-light btn-sm ms-auto" title="Expandir/Contraer Sidebar">
        <i class="bi bi-chevron-left"></i>
      </button>
    </div>

    <ul class="nav flex-column pt-2" id="sidebarMenu">
      <!-- Pulzcards -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse"
           data-bs-target="#pulzcardSubmenu" aria-expanded="false" title="Pulzcards">
          <i class="bi bi-person-badge-fill"></i><span class="text-label ms-2">Pulzcards</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="pulzcardSubmenu">
          <li>
            <a href="{{ url_for('pulzcard') }}" class="nav-link sub-link">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
            </a>
          </li>
          <li>
            <a href="#pulzcardsSection" class="nav-link sub-link">
              <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
            </a>
          </li>
        </ul>
      </li>

      <!-- Etiquetas -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse"
           data-bs-target="#etiquetasSubmenu" aria-expanded="false" title="Etiquetas">
          <i class="bi bi-tags-fill"></i><span class="text-label ms-2">Etiquetas</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="etiquetasSubmenu">
          <li>
            <a href="#" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal"
               class="nav-link sub-link">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
            </a>
          </li>
          <li>
            <a href="#" data-bs-toggle="modal" data-bs-target="#importTagsModal" class="nav-link sub-link" title="Importar Etiquetas">
              <i class="bi bi-file-arrow-up-fill"></i><span class="text-label ms-1">Importar</span>
            </a>
          </li>
          <li>
            <a href="#etiquetasSection" class="nav-link sub-link">
              <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
            </a>
          </li>
        </ul>
      </li>

      <!-- Bodegas -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#bodegasSubmenu"
           aria-expanded="false" title="Bodegas">
          <i class="bi bi-box-fill"></i><span class="text-label ms-2">Bodegas</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="bodegasSubmenu">
          <li>
            <a href="#" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal"
               class="nav-link sub-link">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nueva</span>
            </a>
          </li>
          <li>
            <a href="#bodegasSection" class="nav-link sub-link">
              <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todas</span>
            </a>
          </li>
        </ul>
      </li>

      <!-- Dashboard -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#dashboardSubmenu"
           aria-expanded="false" aria-controls="dashboardSubmenu" title="Dashboard">
          <i class="fa-regular fa-chart-bar"></i><span class="text-label ms-2">Dashboard</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="dashboardSubmenu">
          <li>
            <a href="#" class="nav-link sub-link" data-bs-toggle="modal" data-bs-target="#agregarItemModal">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Agregar Item</span>
            </a>
          </li>
          <div id="dashboardItemsContainer">
            {% if dashboard_items %}
              {% for item in dashboard_items %}
              <li>
                <a href="#dashboardItemDetailSection"
                   class="nav-link sub-link dashboard-item-link"
                   data-item-id="{{ item.uuid }}"
                   data-item-name="{{ item.name }}"
                   data-item-type="{{ item.item_type }}">
                  <i class="fa-solid fa-angles-right"></i><span class="text-label ms-1">{{ item.name }}</span>
                </a>
              </li>
              {% endfor %}
            {% else %}
              <li>
                <span class="text-muted ms-3">Sin items disponibles</span>
              </li>
            {% endif %}
          </div>
        </ul>
      </li>

      <hr class="my-10">

      <!-- Mi Perfil -->
      <li class="nav-item mt-2">
        <a href="#miPerfilSection" class="nav-link sidebar-link" title="Mi Perfil">
          <i class="bi bi-person-lines-fill"></i><span class="text-label ms-2">Mi Perfil</span>
        </a>
      </li>
    </ul>
  </div>

  <!-- NAVBAR superior para pantallas pequeñas -->
  <nav class="navbar navbar-expand-md navbar-light bg-white border-bottom d-md-none">
    <div class="container-fluid">
      <a class="navbar-brand" href="/">
        <img src="{{ url_for('static', filename='images/logov3.png') }}" height="40">
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#topbarMenu"
              aria-controls="topbarMenu" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="topbarMenu">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="pulzcardDropdown" role="button"
               data-bs-toggle="dropdown" aria-expanded="false">Pulzcards</a>
            <ul class="dropdown-menu" aria-labelledby="pulzcardDropdown">
              <li><a class="dropdown-item" href="{{ url_for('pulzcard') }}">Crear Nuevo</a></li>
              <li><a class="dropdown-item" href="#" onclick="showSection('pulzcardsSection')">Ver Todos</a></li>
            </ul>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="etiquetasDropdown" role="button"
               data-bs-toggle="dropdown" aria-expanded="false">Etiquetas</a>
            <ul class="dropdown-menu" aria-labelledby="etiquetasDropdown">
              <li>
                <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal">
                  Crear Nuevo
                </a>
              </li>
              <li>
                <a class="dropdown-item" href="#" onclick="showSection('etiquetasSection')">Ver Todos</a>
              </li>
            </ul>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="bodegasDropdown" role="button"
               data-bs-toggle="dropdown" aria-expanded="false">Bodegas</a>
            <ul class="dropdown-menu" aria-labelledby="bodegasDropdown">
              <li>
                <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal">
                  Crear Nueva
                </a>
              </li>
              <li>
                <a class="dropdown-item" href="#" onclick="showSection('bodegasSection')">Ver Todas</a>
              </li>
            </ul>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#" onclick="showSection('miPerfilSection')">Mi Perfil</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <!-- CONTENIDO PRINCIPAL -->
  <div class="flex-grow-1" id="mainContent" style="padding:20px; overflow-y: auto;">
    <!-- Seccion Perfil -->
    <div id="miPerfilSection">
      <h2 class="text-center mb-4">Mi Perfil</h2>
      <div class="container-fluid mb-5">
        <div class="row">
          <div class="col-md-6">
            <h4>Información Personal</h4>
            <p><strong>Nombre de Usuario:</strong> {{ current_user.username }}</p>
            <p><strong>Correo Electrónico:</strong> {{ current_user.email }}</p>
          </div>
          <div class="col-md-6 text-end">
            <a href="{{ url_for('main.account') }}" class="btn btn-primary">Editar Perfil</a>
          </div>
        </div>
      </div>
      <hr class="my-5">
    </div>

    <!-- Seccion Pulzcards -->
    <div id="pulzcardsSection" style="display:none;">
      <h4>Tus Pulzcards</h4>
      {% if pulzcards %}
      <form method="POST" action="{{ url_for('delete_bulk_pulzcards') }}" id="bulkDeletePulzcardForm">
        {{ bulk_delete_pulzcard_form.hidden_tag() }}

        <div class="action-bar-wrapper">
          <div class="action-bar">
            <button type="button"
                    class="action-btn btn-import"
                    data-bs-toggle="modal"
                    data-bs-target="#importPulzcardModal"
                    title="Importar Pulzcards desde un archivo Excel">
              <i class="bi bi-upload"></i>
            </button>
            <button type="button"
                    class="action-btn btn-export"
                    onclick="exportSelectedPulzcards()"
                    title="Exportar Pulzcards seleccionadas">
              <i class="bi bi-download"></i>
            </button>
            <button type="button"
                    class="action-btn btn-delete"
                    data-bs-toggle="modal"
                    data-bs-target="#confirmDeleteBulkPulzcardsModal"
                    title="Eliminar Pulzcards seleccionadas">
              <i class="bi bi-trash"></i>
            </button>
          </div>
        </div>
        <hr class="my-10">

        <div class="table-responsive">
          <table class="table table-hover custom-table">
            <thead>
              <tr>
                <th><input type="checkbox" id="select_all_pulzcards" form="bulkDeletePulzcardForm"></th>
                <th>Nombre Tarjeta</th>
                <th>Nombre</th>
                <th>Organización</th>
                <th>Email</th>
                <th>Fecha de Creación</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody>
              {% for card in pulzcards %}
              <tr>
                <td>
                  <input type="checkbox" name="selected_pulzcards" value="{{ card.card_id }}" form="bulkDeletePulzcardForm">
                </td>
                <td>{{ card.card_name }}</td>
                <td>{{ card.first_name }} {{ card.last_name }}</td>
                <td>{{ card.organization }}</td>
                <td>{{ card.email }}</td>
                <td>{{ card.created_at.strftime('%d/%m/%Y %H:%M') }}</td>
                <td>
                  <div class="d-none d-md-flex gap-2">
                    <a href="{{ url_for('pulzcard_card', card_id=card.card_id) }}"
                       class="btn btn-outline-secondary btn-sm" target="_blank">
                      Ver
                    </a>
                    <a href="{{ url_for('edit_pulzcard', card_id=card.card_id, next='pulzcardsSection') }}"
                       class="btn btn-outline-secondary btn-sm">
                      Editar
                    </a>
                    <a href="{{ url_for('pulzcard_qrcode', card_id=card.card_id) }}"
                       class="btn btn-outline-secondary btn-sm" title="Ver Código QR">
                      <i class="fas fa-qrcode"></i>
                    </a>
                    <form action="{{ url_for('delete_pulzcard', card_id=card.card_id) }}" method="POST" style="display:inline;">
                      {{ delete_forms[card.id].hidden_tag() }}
                      <button type="submit"
                              onclick="return confirm('¿Estás seguro de que deseas eliminar esta Pulzcard?')"
                              style="background:none; border:none; padding:0; cursor:pointer;">
                        <i class="fa-solid fa-delete-left fa-rotate-by"
                           style="color: #ff5957; --fa-rotate-angle: 0deg; font-size: 1.8em"></i>
                      </button>
                    </form>
                  </div>
                  <div class="d-md-none">
                    <div class="dropdown">
                      <button class="btn btn-outline-secondary btn-sm dropdown-toggle"
                              type="button"
                              id="dropdownMenuButtonPulz{{ card.card_id }}"
                              data-bs-toggle="dropdown" aria-expanded="false">
                        Acciones
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonPulz{{ card.card_id }}">
                        <li>
                          <a class="dropdown-item"
                             href="{{ url_for('pulzcard_card', card_id=card.card_id) }}"
                             target="_blank">
                            <i class="fas fa-eye me-2"></i>Ver
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item"
                             href="{{ url_for('edit_pulzcard', card_id=card.card_id, next='pulzcardsSection') }}">
                            <i class="fas fa-edit me-2"></i>Editar
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item"
                             href="{{ url_for('pulzcard_qrcode', card_id=card.card_id) }}"
                             title="Ver Código QR">
                            <i class="fas fa-qrcode me-2"></i>Ver QR
                          </a>
                        </li>
                        <li>
                          <form action="{{ url_for('delete_pulzcard', card_id=card.card_id) }}"
                                method="POST" style="display:inline;">
                            {{ delete_forms[card.id].hidden_tag() }}
                            <button type="submit"
                                    onclick="return confirm('¿Estás seguro de que deseas eliminar esta Pulzcard?')"
                                    class="dropdown-item bg-danger text-white">
                              <i class="fa-regular fa-eraser me-2"></i>Eliminar
                            </button>
                          </form>
                        </li>
                      </ul>
                    </div>
                  </div>
                </td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
      </form>

      <div class="modal fade" id="confirmDeleteBulkPulzcardsModal" tabindex="-1" aria-labelledby="confirmDeleteBulkPulzcardsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="confirmDeleteBulkPulzcardsModalLabel">Confirmar Eliminación</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
              <p>¿Estás seguro de que deseas eliminar las Pulzcards seleccionadas? Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
              <button type="button" class="btn btn-danger" id="confirmDeleteBulkPulzcardsBtn">Eliminar</button>
            </div>
          </div>
        </div>
      </div>
      {% else %}
      <p>No has creado ninguna Pulzcard aún. <a href="{{ url_for('pulzcard') }}">Crear una Pulzcard</a>.</p>
      {% endif %}
      <div class="mt-3">
        <a href="{{ url_for('pulzcard') }}" class="btn btn-secondary">
          <i class="fas fa-user-plus" style="color: rgb(104, 245, 167); font-size: 1.0em;"></i> Añadir
        </a>
      </div>
      <hr class="my-5">
    </div>

    <!-- Etiquetas -->
    <div id="etiquetasSection" style="display:none;">
      <h4>Tus Etiquetas y QR Code</h4>
      {% if tags %}
      <form method="POST" action="{{ url_for('delete_bulk_tags') }}" id="bulkDeleteForm">
        {{ bulk_delete_tag_form.hidden_tag() }}
        <div class="action-bar-wrapper">
          <div class="action-bar">
            <button type="button"
                    class="action-btn btn-import"
                    data-bs-toggle="modal"
                    data-bs-target="#importTagsModal"
                    title="Importar etiquetas desde un archivo">
              <i class="bi bi-upload"></i>
            </button>
            <button type="button"
                    class="action-btn btn-export"
                    onclick="exportSelectedTags()"
                    title="Exportar etiquetas seleccionadas">
              <i class="bi bi-download"></i>
            </button>
            <button type="button"
                    class="action-btn btn-delete"
                    data-bs-toggle="modal"
                    data-bs-target="#confirmDeleteBulkModal"
                    title="Eliminar etiquetas seleccionadas">
              <i class="bi bi-trash"></i>
            </button>
          </div>
        </div>
      </form>

      <div class="modal fade" id="confirmDeleteBulkModal" tabindex="-1" aria-labelledby="confirmDeleteBulkModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="confirmDeleteBulkModalLabel">Confirmar Eliminación</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
              <p>¿Estás seguro de que deseas eliminar la(s) etiqueta(s) seleccionada(s)? Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
              <button type="button" class="btn btn-danger" id="confirmDeleteBulkBtn">Eliminar</button>
            </div>
          </div>
        </div>
      </div>

      <hr class="my-10">

      <div class="table-responsive">
        <table class="table table-hover custom-table">
          <thead>
            <tr>
              <th><input type="checkbox" id="select_all" form="bulkDeleteForm"></th>
              <th>Nombre Etiqueta</th>
              <th>URL destino</th>
              <th>URL enlace</th>
              <th>Vistas</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            {% for tag in tags %}
            <tr>
              <td>
                <input type="checkbox" name="selected_tags" value="{{ tag.tag_id }}" form="bulkDeleteForm">
              </td>
              <td>{{ tag.tag_name }}</td>
              <td>
                <a href="{{ tag.redirect_url }}" target="_blank">
                {% if tag.redirect_url|length > 30 %}
                  {{ tag.redirect_url|slice(0,30) }}...
                {% else %}
                  {{ tag.redirect_url }}
                {% endif %}
                </a>
              </td>
              <td>
                {% set generated_url = url_for('redirect_tag', tag_id=tag.tag_id, _external=True) %}
                {% if generated_url|length > 30 %}
                  <a href="{{ generated_url }}" target="_blank">{{ generated_url|slice(0,30) }}...</a>
                {% else %}
                  <a href="{{ generated_url }}" target="_blank">{{ generated_url }}</a>
                {% endif %}
              </td>
              <td>{{ tag.vistas }}</td>
              <td>
                <div class="d-none d-md-flex gap-2">
                  <button type="button" class="btn btn-outline-secondary btn-sm" onclick="copyURL('{{ generated_url }}')">Copiar</button>
                  <a href="{{ url_for('edit_tag', tag_id=tag.tag_id, next='etiquetasSection') }}" class="btn btn-outline-secondary btn-sm">Editar</a>
                  <a href="{{ url_for('tag_qrcode', tag_id=tag.tag_id) }}" class="btn btn-outline-secondary btn-sm" title="Ver Código QR">
                    <i class="fas fa-qrcode"></i>
                  </a>
                  <form action="{{ url_for('delete_tag', tag_id=tag.tag_id) }}" method="POST" style="display:inline;">
                    {{ delete_tag_forms[tag.id].hidden_tag() }}
                    <button type="submit"
                            onclick="return confirm('¿Estás seguro de que deseas eliminar esta etiqueta?')"
                            style="background:none; border:none; padding:0; cursor:pointer;">
                      <i class="fa-solid fa-delete-left fa-rotate-by" style="color: #ff5957; --fa-rotate-angle: 0deg; font-size: 1.8em"></i>
                    </button>
                  </form>
                </div>
                <div class="d-md-none">
                  <div class="dropdown">
                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButtonTag{{ tag.tag_id }}" data-bs-toggle="dropdown" aria-expanded="false">
                      Acciones
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonTag{{ tag.tag_id }}">
                      <li>
                        <a href="#" class="dropdown-item"
                           onclick="copyURL('{{ generated_url }}'); return false;">
                          <i class="fas fa-copy me-2"></i>Copiar URL
                        </a>
                      </li>
                      <li>
                        <a class="dropdown-item" href="{{ url_for('edit_tag', tag_id=tag.tag_id, next='etiquetasSection') }}">
                          <i class="fas fa-edit me-2"></i>Editar
                        </a>
                      </li>
                      <li>
                        <a class="dropdown-item" href="{{ url_for('tag_qrcode', tag_id=tag.tag_id) }}" title="Ver Código QR">
                          <i class="fas fa-qrcode me-2"></i>Ver QR
                        </a>
                      </li>
                      <li>
                        <form action="{{ url_for('delete_tag', tag_id=tag.tag_id) }}" method="POST" style="display:inline;">
                          {{ delete_tag_forms[tag.id].hidden_tag() }}
                          <button type="submit"
                                  onclick="return confirm('¿Estás seguro de que deseas eliminar esta etiqueta?')"
                                  class="dropdown-item bg-danger text-white">
                            <i class="fa-regular fa-eraser me-2"></i>Eliminar
                          </button>
                        </form>
                      </li>
                    </ul>
                  </div>
                </div>
              </td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
      {% else %}
      <p>No has creado ninguna etiqueta aún.
        <a href="#" class="text-decoration-underline" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal">Crear una Etiqueta</a>.
      </p>
      {% endif %}
      <div class="mt-3">
        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal">
          <i class="fa-regular fa-square-plus" style="color: rgb(104, 245, 167); font-size: 1.0em;"></i> Añadir
        </button>
      </div>
      <hr class="my-5">
    </div>

    <!-- BODEGAS -->
    <div id="bodegasSection" style="display:none;">
      <h4>Bodegas</h4>
      {% if bodegas %}
      <div class="table-responsive">
        <table class="table table-hover custom-table">
          <thead>
            <tr>
              <th>ID Bodega</th>
              <th>Nombre</th>
              <th>Fecha de Creación</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            {% for bodega in bodegas %}
            <tr>
              <td>
                <a href="{{ url_for('view_bodega', uuid_bodega=bodega.uuid) }}">
                  {{ bodega.id_bodega }}
                </a>
              </td>
              <td>{{ bodega.nombre }}</td>
              <td>{{ bodega.fecha_creacion.strftime('%d/%m/%Y %H:%M') }}</td>
              <td>
                <div class="d-none d-md-flex gap-2">
                  <a href="{{ url_for('bodega_qrcode', uuid_bodega=bodega.uuid) }}"
                     class="btn btn-outline-secondary btn-sm" title="Ver Código QR">
                    <i class="fas fa-qrcode"></i>
                  </a>
                  <a href="{{ url_for('edit_bodega', uuid_bodega=bodega.uuid, next='bodegasSection') }}"
                     class="btn btn-outline-secondary btn-sm">Editar</a>
                  <form action="{{ url_for('delete_bodega', uuid_bodega=bodega.uuid) }}"
                        method="POST" style="display:inline;">
                    {{ delete_bodega_forms[bodega.uuid].hidden_tag() }}
                    <button type="submit"
                            onclick="return confirm('¿Estás seguro de que deseas eliminar esta bodega?')"
                            style="background:none; border:none; padding:0; cursor:pointer;">
                      <i class="fa-solid fa-delete-left fa-rotate-by" style="color: #ff5957; --fa-rotate-angle: 0deg; font-size: 1.8em"></i>
                    </button>
                  </form>
                </div>
                <div class="d-md-none">
                  <div class="dropdown">
                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle"
                            type="button" id="dropdownMenuButtonBodega{{ bodega.uuid }}"
                            data-bs-toggle="dropdown" aria-expanded="false">
                      Acciones
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonBodega{{ bodega.uuid }}">
                      <li>
                        <a href="{{ url_for('bodega_qrcode', uuid_bodega=bodega.uuid) }}" class="dropdown-item" title="Ver Código QR">
                          <i class="fas fa-qrcode me-2"></i>Ver QR
                        </a>
                      </li>
                      <li>
                        <a class="dropdown-item" href="{{ url_for('edit_bodega', uuid_bodega=bodega.uuid, next='bodegasSection') }}">
                          <i class="fas fa-edit me-2"></i>Editar
                        </a>
                      </li>
                      <li>
                        <form action="{{ url_for('delete_bodega', uuid_bodega=bodega.uuid) }}" method="POST" style="display:inline;">
                          {{ delete_bodega_forms[bodega.uuid].hidden_tag() }}
                          <button type="submit"
                                  onclick="return confirm('¿Estás seguro de que deseas eliminar esta bodega?')"
                                  class="dropdown-item bg-danger text-white">
                            <i class="fa-regular fa-eraser me-2"></i>Eliminar
                          </button>
                        </form>
                      </li>
                    </ul>
                  </div>
                </div>
              </td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
      {% else %}
      <p>No has creado ninguna bodega aún.
        <a href="#" class="text-decoration-underline" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal">Crear una Bodega</a>.
      </p>
      {% endif %}
      <div class="mt-3">
        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal">
          <i class="fa-regular fa-square-plus" style="color: rgb(104, 245, 167); font-size: 1.0em;"></i> Añadir
        </button>
      </div>
    </div>

    <!-- Sección DETALLE de Ítem de Dashboard -->
    <div id="dashboardItemDetailSection" style="display:none;">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="d-flex flex-column">
          <h2 class="mb-0" id="dashboardItemName"></h2>
          <small class="text-muted" id="dashboardItemType"></small>
        </div>
        <div class="d-flex align-items-center gap-3" id="dashboardItemActions">
          <a href="#" id="surveyLink" target="_blank" class="btn btn-sm btn-primary" style="display:none;">
            <i class="bi bi-check2-circle me-1"></i>Responder
          </a>
          <button class="btn btn-sm btn-secondary" id="copySurveyBtn" style="display:none;">
            <i class="bi bi-clipboard me-1"></i>Copiar URL
          </button>
          <button class="btn btn-sm btn-outline-success" id="showSurveyQRBtn" style="display:none;">
            <i class="fas fa-qrcode"></i> QR
          </button>
          <button class="btn btn-sm btn-danger" id="eliminarItemBtn">
            <i class="bi bi-trash-fill"></i> Eliminar
          </button>
        </div>
      </div>
      <hr class="my-4">

      <div id="dashboardItemStats" style="display:none;">
        <h4 class="mb-3">Estadísticas de Valoraciones (últimos 10 días)</h4>
        <div class="d-flex justify-content-between align-items-center mb-3">
          <div class="d-flex align-items-center gap-2">
            <button id="showTableBtn" class="btn btn-outline-primary btn-sm">Ver Tabla</button>
            <button id="showChartBtn" class="btn btn-outline-secondary btn-sm">Ver Gráfico</button>
          </div>
          <div>
            <select id="chartIndicatorSelect" class="form-select form-select-sm" style="width: 220px;">
              <option value="count" selected>Cantidad de Evaluaciones</option>
              <option value="average">Promedio de Puntajes</option>
              <option value="nps">NPS Ponderado</option>
              <option value="promoters">Clientes Promotores (%)</option>
              <option value="passives">Clientes Neutros (%)</option>
              <option value="detractors">Clientes Detractores (%)</option>
              <option value="stacked">Gráfico Barras Apiladas</option>
            </select>
          </div>
        </div>

        <div id="tableContainer">
          <table class="table table-bordered text-center" id="ratingsTable">
            <thead>
              <tr id="ratingsHeader">
                <th>Valoración</th>
              </tr>
            </thead>
            <tbody>
              <tr id="rating10Row"><th>10</th></tr>
              <tr id="rating9Row"><th>9</th></tr>
              <tr id="rating8Row"><th>8</th></tr>
              <tr id="rating7Row"><th>7</th></tr>
              <tr id="rating6Row"><th>6</th></tr>
              <tr id="rating5Row"><th>5</th></tr>
              <tr id="rating4Row"><th>4</th></tr>
              <tr id="rating3Row"><th>3</th></tr>
              <tr id="rating2Row"><th>2</th></tr>
              <tr id="rating1Row"><th>1</th></tr>
              <tr id="totalRow"><th>Total</th></tr>
            </tbody>
          </table>
        </div>

        <div id="chartContainer" style="display:none;">
          <canvas id="myChart"></canvas>
        </div>

        <div id="dayDetailsContainer" style="display:none; margin-top: 20px;">
          <h5 id="detailsTitle"></h5>
          <table class="table table-bordered">
            <thead>
              <tr>
                <th>Evaluación (1 a 10)</th>
                <th>Comentario</th>
              </tr>
            </thead>
            <tbody id="dayDetailsBody"></tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- MODALES para Pulzcards, Etiquetas, Bodegas, Dashboard Items -->
<!-- Modal Importar Pulzcards -->
<div class="modal fade" id="importPulzcardModal" tabindex="-1" aria-labelledby="importPulzcardModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('import_pulzcards') }}" enctype="multipart/form-data">
        {{ import_pulzcards_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="importPulzcardModalLabel">Importar Pulzcards desde Excel</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <p><strong>Cómo Importar:</strong></p>
          <p>Asegúrate de que tu archivo Excel tenga al menos las columnas:</p>
          <table class="table table-bordered">
            <thead>
              <tr>
                {% for field in pulzcard_fields %}
                <th>{{ field }}</th>
                {% endfor %}
              </tr>
            </thead>
            <tbody>
              <tr>
                {% for _ in pulzcard_fields %}
                <td>Ejemplo</td>
                {% endfor %}
              </tr>
            </tbody>
          </table>
          <div class="mb-3">
            <label for="excelFilePulzcards" class="form-label">Selecciona tu archivo Excel</label>
            {{ import_pulzcards_form.excelFile(class="form-control", id="excelFilePulzcards", required=True) }}
            {% for error in import_pulzcards_form.excelFile.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
          {{ import_pulzcards_form.submit(class="btn btn-primary") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Agregar Etiqueta -->
<div class="modal fade" id="agregarEtiquetaModal" tabindex="-1" aria-labelledby="agregarEtiquetaModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('create_tag') }}">
        {{ tag_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="agregarEtiquetaModalLabel">Agregar Nueva Etiqueta</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            {{ tag_form.tag_name.label(class="form-label") }}
            {{ tag_form.tag_name(class="form-control", placeholder="Nombre de la Etiqueta") }}
            {% for error in tag_form.tag_name.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ tag_form.redirect_url.label(class="form-label") }}
            {{ tag_form.redirect_url(class="form-control", placeholder="URL de Redirección") }}
            {% for error in tag_form.redirect_url.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          {{ tag_form.submit(class="btn btn-success") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Importar Etiquetas -->
<div class="modal fade" id="importTagsModal" tabindex="-1" aria-labelledby="importTagsModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('import_tags') }}" enctype="multipart/form-data">
        {{ import_tags_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="importTagsModalLabel">Importar Etiquetas desde Excel</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <p><strong>Cómo Importar:</strong></p>
          <p>Asegúrate de que tu archivo Excel tenga las columnas:</p>
          <table class="table table-bordered">
            <thead>
              <tr>
                {% for field in tag_fields %}
                <th>{{ field }}</th>
                {% endfor %}
              </tr>
            </thead>
            <tbody>
              <tr>
                {% for _ in tag_fields %}
                <td>Ejemplo de dato</td>
                {% endfor %}
              </tr>
            </tbody>
          </table>
          <div class="mb-3">
            <label for="excelFile" class="form-label">Selecciona tu archivo Excel</label>
            {{ import_tags_form.excelFile(class="form-control", id="excelFile", required=True) }}
            {% for error in import_tags_form.excelFile.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
          {{ import_tags_form.submit(class="btn btn-primary") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Agregar Bodega -->
<div class="modal fade" id="agregarBodegaModal" tabindex="-1" aria-labelledby="agregarBodegaModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('create_bodega') }}">
        {{ bodega_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="agregarBodegaModalLabel">Agregar Nueva Bodega</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            {{ bodega_form.nombre.label(class="form-label") }}
            {{ bodega_form.nombre(class="form-control", placeholder="Nombre de la Bodega") }}
            {% for error in bodega_form.nombre.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ bodega_form.ubicacion.label(class="form-label") }}
            {{ bodega_form.ubicacion(class="form-control", placeholder="Ubicación") }}
            {% for error in bodega_form.ubicacion.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ bodega_form.notas.label(class="form-label") }}
            {{ bodega_form.notas(class="form-control", placeholder="Notas") }}
            {% for error in bodega_form.notas.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          {{ bodega_form.submit(class="btn btn-success") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Agregar Item Dashboard -->
<div class="modal fade" id="agregarItemModal" tabindex="-1" aria-labelledby="agregarItemModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="agregarItemForm">
        <div class="modal-header">
          <h5 class="modal-title" id="agregarItemModalLabel">Agregar Nuevo Item al Dashboard</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="itemNameInput" class="form-label">Nombre del Item</label>
            <input type="text" class="form-control" id="itemNameInput" name="name" required>
          </div>
          <div class="mb-3">
            <label for="itemTypeSelect" class="form-label">Tipo de Item</label>
            <select class="form-select" id="itemTypeSelect" name="item_type" required>
              <option value="" selected disabled>Selecciona un tipo</option>
              <option value="Evaluación de Clientes">Evaluación de Clientes (NPS 1-10)</option>
              <option value="Evaluación de Semáforo">Evaluación de Semáforo (1-3)</option>
              <option value="Visualizaciones diarias">Visualizaciones Diarias</option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-success">Agregar</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Eliminar Item Dashboard -->
<div class="modal fade" id="confirmDeleteDashboardItemModal" tabindex="-1" aria-labelledby="confirmDeleteDashboardItemModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="deleteDashboardItemForm">
        <div class="modal-header">
          <h5 class="modal-title" id="confirmDeleteDashboardItemModalLabel">Confirmar Eliminación</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <p>¿Estás seguro de que deseas eliminar este ítem del Dashboard? Esta acción no se puede deshacer.</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-danger">Eliminar</button>
        </div>
      </form>
    </div>
  </div>
</div>

{% if bodega_form.errors %}
<script>
var agregarBodegaModal = new bootstrap.Modal(document.getElementById('agregarBodegaModal'));
agregarBodegaModal.show();
</script>
{% endif %}

{% if tag_form.errors %}
<script>
var agregarEtiquetaModal = new bootstrap.Modal(document.getElementById('agregarEtiquetaModal'));
agregarEtiquetaModal.show();
</script>
{% endif %}
{% endblock %}

{% block scripts %}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
// ----------------------------------------------------------------------------------
// Al cargar DOM
$(document).ready(function() {
  // 1) Inicializa DataTables
  $('.custom-table').DataTable({
    language: {
      url: "https://cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json"
    }
  });

  // 2) Control de secciones con hash
  function showSection(section) {
    var sections = [
      'miPerfilSection',
      'pulzcardsSection',
      'etiquetasSection',
      'bodegasSection',
      'dashboardItemDetailSection'
    ];
    sections.forEach(function(sec) {
      var el = document.getElementById(sec);
      if (el) {
        el.style.display = (sec === section) ? 'block' : 'none';
      }
    });
  }
  function handleHash() {
    var hash = window.location.hash.substring(1);
    if (hash) {
      showSection(hash);
    } else {
      showSection('miPerfilSection');
    }
  }
  window.addEventListener('load', handleHash, false);
  window.addEventListener('hashchange', handleHash, false);
  document.querySelectorAll('a.nav-link.sub-link').forEach(function(link) {
    var href = link.getAttribute('href');
    if (href.startsWith('#')) {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        var targetSection = this.getAttribute('href').substring(1);
        window.location.hash = targetSection;
        showSection(targetSection);
      });
    }
  });

  // 3) Copiar URL al portapapeles
  window.copyURL = function(url) {
    navigator.clipboard.writeText(url).then(function(){
      alert('URL copiada al portapapeles!');
    }).catch(function(err){
      alert('Error al copiar la URL: ' + err);
    });
  };

  // 4) Toggle sidebar
  var sidebar = document.getElementById('sidebar');
  var toggleBtn = document.getElementById('sidebarToggle');
  if (sidebar && toggleBtn) {
    toggleBtn.addEventListener('click', function() {
      sidebar.classList.toggle('collapsed');
      if (sidebar.classList.contains('collapsed')) {
        this.innerHTML = '<i class="bi bi-chevron-right"></i>';
      } else {
        this.innerHTML = '<i class="bi bi-chevron-left"></i>';
      }
    });
  }

  // 5) Selección en masa de Etiquetas
  var selectAllTagsCheckbox = document.getElementById('select_all');
  if (selectAllTagsCheckbox) {
    selectAllTagsCheckbox.addEventListener('click', function() {
      var checkboxes = document.querySelectorAll('input[name="selected_tags"]');
      checkboxes.forEach(function(ch) {
        ch.checked = selectAllTagsCheckbox.checked;
      });
    });
  }
  var confirmDeleteBulkBtn = document.getElementById('confirmDeleteBulkBtn');
  if (confirmDeleteBulkBtn) {
    confirmDeleteBulkBtn.addEventListener('click', function(){
      document.getElementById('bulkDeleteForm').submit();
    });
  }

  // 6) Exportar Etiquetas
  window.exportSelectedTags = function() {
    var selectedTags = document.querySelectorAll('input[name="selected_tags"]:checked');
    if (selectedTags.length === 0) {
      alert('Por favor, selecciona al menos una etiqueta para exportar.');
      return;
    }
    var tagIds = Array.from(selectedTags).map(function(tag){ return tag.value; });
    fetch('{{ url_for("export_tags") }}', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRFToken': '{{ csrf_token() }}'
      },
      body: JSON.stringify({ tag_ids: tagIds })
    })
    .then(function(response){
      if (!response.ok) {
        return response.json().then(function(data){ throw new Error(data.error); });
      }
      return response.blob();
    })
    .then(function(blob){
      var url = window.URL.createObjectURL(blob);
      var a = document.createElement('a');
      a.style.display='none';
      a.href=url;
      a.download='tags_export.xlsx';
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
    })
    .catch(function(error){
      console.error('Error:', error);
      alert('Hubo un error al exportar las etiquetas: ' + error.message);
    });
  };

  // 7) Selección en masa Pulzcards
  var selectAllPulzcardsCheckbox = document.getElementById('select_all_pulzcards');
  if (selectAllPulzcardsCheckbox) {
    selectAllPulzcardsCheckbox.addEventListener('click', function(){
      var checkboxes = document.querySelectorAll('input[name="selected_pulzcards"]');
      checkboxes.forEach(function(ch){ ch.checked = selectAllPulzcardsCheckbox.checked; });
    });
  }
  var confirmDeleteBulkPulzcardsBtn = document.getElementById('confirmDeleteBulkPulzcardsBtn');
  if (confirmDeleteBulkPulzcardsBtn) {
    confirmDeleteBulkPulzcardsBtn.addEventListener('click', function(){
      document.getElementById('bulkDeletePulzcardForm').submit();
    });
  }

  // 8) Exportar Pulzcards
  window.exportSelectedPulzcards = function() {
    var selected = document.querySelectorAll('input[name="selected_pulzcards"]:checked');
    if (selected.length === 0) {
      alert('Por favor, selecciona al menos una Pulzcard para exportar.');
      return;
    }
    var pulz_ids = Array.from(selected).map(function(el){ return el.value; });
    fetch('{{ url_for("export_pulzcards") }}', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRFToken': '{{ csrf_token() }}'
      },
      body: JSON.stringify({ pulz_ids: pulz_ids })
    })
    .then(function(response){
      if (!response.ok) {
        return response.json().then(function(data){ throw new Error(data.error); });
      }
      return response.blob();
    })
    .then(function(blob){
      var url = window.URL.createObjectURL(blob);
      var a = document.createElement('a');
      a.style.display='none';
      a.href=url;
      a.download='pulzcards_export.xlsx';
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
    })
    .catch(function(error){
      console.error('Error:', error);
      alert('Hubo un error al exportar las Pulzcards: ' + error.message);
    });
  };

    // 9) Dashboard Items (mostrar detalles)
    $('#dashboardItemsContainer').on('click', '.dashboard-item-link', function(e) {
        e.preventDefault();
        var name = $(this).data('item-name');
        var type = $(this).data('item-type');
        var itemId = $(this).data('item-id');

        // Mostrar en el DOM
        $('#dashboardItemName').text(name);
        $('#dashboardItemType').text(type);
        $('#eliminarItemBtn').data('item-id', itemId);

        // Si es un tipo que admite encuesta
        if (type === "Evaluación de Clientes" || type === "Evaluación de Semáforo") {
            // Construye la URL de la encuesta (reemplaza ITEMUUID con itemId)
            var surveyUrl = "{{ url_for('survey', item_uuid='ITEMUUID', _external=True) }}".replace('ITEMUUID', itemId);

            // Mostrar/actualizar link de "Responder Encuesta"
            $('#surveyLink')
                .attr('href', surveyUrl)
                .show();

            // Botón para copiar la URL
            $('#copySurveyBtn')
                .off('click')
                .on('click', function() {
                    navigator.clipboard.writeText(surveyUrl)
                    .then(function() {
                        alert('URL copiada al portapapeles!');
                    })
                    .catch(function(err) {
                        alert('Error al copiar la URL: ' + err);
                    });
                })
                .show();

            // Botón para ver el QR de la encuesta
            $('#showSurveyQRBtn')
                .off('click')
                .on('click', function() {
                    // Abrimos la ruta /survey_qrcode/<itemId> en otra pestaña
                    window.open('/survey_qrcode/' + itemId, '_blank');
                })
                .show();

            // Mostrar contenedor de estadísticas y renderizar la tabla
            $('#dashboardItemStats').show();
            renderLast10DaysTable(itemId, type);

        } else {
            // Ocultar si no es un ítem que admita encuesta
            $('#surveyLink').hide();
            $('#copySurveyBtn').hide();
            $('#showSurveyQRBtn').hide();
            $('#dashboardItemStats').hide();
        }

        // Cambiar sección a "Detalle de Ítem"
        showSection('dashboardItemDetailSection');
    });

  // Crear Item (Ajax)
  $('#agregarItemForm').submit(function(e){
    e.preventDefault();
    var itemName = $('#itemNameInput').val().trim();
    var itemType = $('#itemTypeSelect').val();

    if (!itemName || !itemType) {
      alert('Por favor, completa todos los campos antes de continuar.');
      return;
    }
    $.ajax({
      url: "{{ url_for('create_dashboard_item') }}",
      method: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ name: itemName, item_type: itemType }),
      headers: {
        'X-CSRFToken': '{{ csrf_token() }}'
      },
      success: function(response){
        var newItem = '<li>'+
          '<a href="#dashboardItemDetailSection" '+
             'class="nav-link sub-link dashboard-item-link" '+
             'data-item-id="'+response.uuid+'" '+
             'data-item-name="'+itemName+'" '+
             'data-item-type="'+itemType+'">'+
             '<i class="bi bi-dot"></i><span class="text-label ms-1">'+itemName+'</span>'+
          '</a></li>';
        $('#dashboardItemsContainer').append(newItem);
        $('#agregarItemModal').modal('hide');
        $('#itemNameInput').val('');
        $('#itemTypeSelect').val('');
      },
      error: function(){
        alert('Hubo un error al crear el ítem, intenta nuevamente.');
      }
    });
  });

  // Eliminar Item (Ajax)
  $('#eliminarItemBtn').on('click', function(){
    var itemId = $(this).data('item-id');
    if(!itemId){
      console.error('No se encontró item-id');
      return;
    }
    var confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteDashboardItemModal'));
    confirmDeleteModal.show();

    $('#deleteDashboardItemForm').off('submit').on('submit', function(e){
      e.preventDefault();
      $.ajax({
        url: "{{ url_for('delete_dashboard_item') }}",
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ uuid: itemId }),
        headers: {
          'X-CSRFToken': '{{ csrf_token() }}'
        },
        success: function(response){
          $('.dashboard-item-link[data-item-id="'+itemId+'"]').parent().remove();
          showSection('miPerfilSection');
          confirmDeleteModal.hide();
          alert('Ítem eliminado exitosamente.');
        },
        error: function(){
          alert('Error al eliminar el ítem.');
        }
      });
    });
  });

  // 10) Renderizar tabla y gráfico
  var globalRatingsData=null, globalDates=null, globalDetails=null;

  function renderLast10DaysTable(itemUUID, itemType){
    var ratingsHeader = document.getElementById('ratingsHeader');
    Array.from(ratingsHeader.querySelectorAll('th:not(:first-child)')).forEach(function(th){
      th.remove();
    });
    var rowIds=[
      'rating10Row','rating9Row','rating8Row','rating7Row','rating6Row',
      'rating5Row','rating4Row','rating3Row','rating2Row','rating1Row',
      'totalRow'
    ];
    rowIds.forEach(function(rowId){
      var row=document.getElementById(rowId);
      while(row.children.length>1){
        row.removeChild(row.lastChild);
      }
    });

    $.ajax({
      url: '{{ url_for("get_ratings_data") }}',
      type:'GET',
      data:{ item_uuid:itemUUID },
      success:function(response){
        if(response.error){
          console.error("Error:", response.error);
          return;
        }
        globalRatingsData=response.ratings;
        globalDates=response.dates;
        globalDetails=response.details;
        globalDates.forEach(function(dateStr){
          var th=document.createElement('th');
          th.textContent=dateStr;
          ratingsHeader.appendChild(th);
        });
        fillTableWithCounts(globalRatingsData);
        renderChart(globalRatingsData, globalDates, globalDetails, itemType, 'count');
      },
      error:function(xhr,status,error){
        console.error('Error al obtener datos:', error);
      }
    });
  }

  function fillTableWithCounts(ratingsData){
    for(var val=10; val>=1; val--){
      var row=document.getElementById('rating'+val+'Row');
      var countArray=ratingsData[val.toString()]||[];
      countArray.forEach(function(cnt){
        var td=document.createElement('td');
        td.textContent=cnt;
        row.appendChild(td);
      });
    }
    var totalRow=document.getElementById('totalRow');
    var length=(ratingsData["1"]||[]).length;
    var dayTotals=new Array(length).fill(0);
    for(var rating=1; rating<=10; rating++){
      var arr=ratingsData[rating.toString()]||[];
      arr.forEach(function(cnt, i){
        dayTotals[i]+=cnt;
      });
    }
    dayTotals.forEach(function(t){
      var td=document.createElement('td');
      td.textContent=t;
      totalRow.appendChild(td);
    });
  }

  function computeDataByIndicator(ratingsData, dates, indicator){
    var length=dates.length;
    var resultArray=new Array(length).fill(0);
    for(var i=0; i<length; i++){
      var total=0, sumRatings=0, promoters=0, passives=0, detractors=0;
      for(var rating=1; rating<=10; rating++){
        var counts=ratingsData[rating.toString()]||[];
        var c=counts[i]||0;
        total+=c;
        sumRatings+=(rating*c);
        if(rating>=9) promoters+=c;
        else if(rating>=7) passives+=c;
        else detractors+=c;
      }
      if(indicator==="count"){
        resultArray[i]=total;
      } else if(indicator==="average"){
        if(total>0) resultArray[i]=sumRatings/total; else resultArray[i]=0;
      } else if(indicator==="nps"){
        if(total>0) resultArray[i]=((promoters-detractors)/total)*100; else resultArray[i]=0;
      } else if(indicator==="promoters"){
        if(total>0) resultArray[i]=(promoters/total)*100; else resultArray[i]=0;
      } else if(indicator==="passives"){
        if(total>0) resultArray[i]=(passives/total)*100; else resultArray[i]=0;
      } else if(indicator==="detractors"){
        if(total>0) resultArray[i]=(detractors/total)*100; else resultArray[i]=0;
      }
    }
    return resultArray;
  }

  function computeStackedData(ratingsData, dates){
    var length=dates.length;
    var promotersArray=new Array(length).fill(0);
    var passivesArray=new Array(length).fill(0);
    var detractorsArray=new Array(length).fill(0);
    for(var i=0; i<length; i++){
      var total=0, pro=0, pas=0, det=0;
      for(var rating=1; rating<=10; rating++){
        var arr=ratingsData[rating.toString()]||[];
        var count=arr[i]||0;
        total+=count;
        if(rating>=9) pro+=count;
        else if(rating>=7) pas+=count;
        else det+=count;
      }
      if(total>0){
        promotersArray[i]=(pro/total)*100;
        passivesArray[i]=(pas/total)*100;
        detractorsArray[i]=(det/total)*100;
      }
    }
    return {
      promotersArray:promotersArray,
      passivesArray:passivesArray,
      detractorsArray:detractorsArray
    };
  }

  function renderChart(ratingsData, dates, detailsByDay, itemType, indicator){
    if(indicator==="stacked"){
      renderStackedChart(ratingsData, dates);
      return;
    }
    var dataArray=computeDataByIndicator(ratingsData, dates, indicator);
    var labelMap={
      count:"Cantidad de Evaluaciones",
      average:"Promedio de Puntajes",
      nps:"NPS",
      promoters:"% Promotores",
      passives:"% Neutros",
      detractors:"% Detractores"
    };
    var datasetLabel=labelMap[indicator]||"Indicador";
    var data={
      labels:dates,
      datasets:[{
        label:datasetLabel,
        data:dataArray,
        borderColor:'rgba(75,192,192,1)',
        backgroundColor:'rgba(75,192,192,0.2)',
        fill:true
      }]
    };
    var config={
      type:'line',
      data:data,
      options:{
        responsive:true,
        plugins:{
          title:{
            display:true,
            text:"Indicador: "+datasetLabel
          }
        },
        onClick:function(evt,elements){
          if(elements && elements.length){
            var idx=elements[0].index;
            var selectedDate=dates[idx];
            var dayResponses=detailsByDay[selectedDate]||[];
            showResponsesForDay(selectedDate, dayResponses);
          }
        },
        scales:{
          y:{beginAtZero:true}
        }
      }
    };
    var ctx=document.getElementById('myChart').getContext('2d');
    if(window.myChartInstance) {
      window.myChartInstance.destroy();
    }
    window.myChartInstance=new Chart(ctx,config);
  }

  function renderStackedChart(ratingsData, dates){
    var computed=computeStackedData(ratingsData, dates);
    var data={
      labels:dates,
      datasets:[
        {
          label:"Promotores (%)",
          data:computed.promotersArray,
          backgroundColor:"rgba(75,192,192,0.8)"
        },
        {
          label:"Neutros (%)",
          data:computed.passivesArray,
          backgroundColor:"rgba(255,206,86,0.8)"
        },
        {
          label:"Detractores (%)",
          data:computed.detractorsArray,
          backgroundColor:"rgba(255,99,132,0.8)"
        }
      ]
    };
    var config={
      type:'bar',
      data:data,
      options:{
        responsive:true,
        plugins:{
          title:{
            display:true,
            text:"Barras Apiladas (Promotores/Neutros/Detractores)"
          }
        },
        scales:{
          x:{stacked:true},
          y:{stacked:true,beginAtZero:true,max:100}
        }
      }
    };
    var ctx=document.getElementById('myChart').getContext('2d');
    if(window.myChartInstance){
      window.myChartInstance.destroy();
    }
    window.myChartInstance=new Chart(ctx, config);
  }

  function showResponsesForDay(dateStr, responses){
    var detailsTitle=document.getElementById('detailsTitle');
    detailsTitle.textContent="Detalles del día: "+dateStr;
    var tbody=document.getElementById('dayDetailsBody');
    tbody.innerHTML="";
    if(!responses.length){
      var row=document.createElement('tr');
      var cell=document.createElement('td');
      cell.colSpan=2;
      cell.textContent="No hay respuestas para este día.";
      row.appendChild(cell);
      tbody.appendChild(row);
    } else {
      responses.forEach(function(resp){
        var row=document.createElement('tr');
        var tdRating=document.createElement('td');
        tdRating.textContent=resp.rating;
        var tdComment=document.createElement('td');
        tdComment.textContent=resp.comment||"Sin Comentario";
        row.appendChild(tdRating);
        row.appendChild(tdComment);
        tbody.appendChild(row);
      });
    }
    document.getElementById('dayDetailsContainer').style.display='block';
  }

  // Evento para <select id="chartIndicatorSelect">
  var chartIndicatorSelect=document.getElementById('chartIndicatorSelect');
  if(chartIndicatorSelect){
    chartIndicatorSelect.addEventListener('change',function(){
      if(!globalRatingsData || !globalDates || !globalDetails) return;
      var indicator=this.value;
      renderChart(globalRatingsData, globalDates, globalDetails, "Evaluación de Clientes", indicator);
    });
  }

  // Botones Tabla vs Gráfico
  var showTableBtn=document.getElementById('showTableBtn');
  var showChartBtn=document.getElementById('showChartBtn');
  var tableContainer=document.getElementById('tableContainer');
  var chartContainer=document.getElementById('chartContainer');
  if(showTableBtn && showChartBtn && tableContainer && chartContainer){
    showTableBtn.addEventListener('click', function(){
      tableContainer.style.display='block';
      chartContainer.style.display='none';
    });
    showChartBtn.addEventListener('click', function(){
      tableContainer.style.display='none';
      chartContainer.style.display='block';
    });
  }
});
</script>
{% endblock %}







      <!-- Botones para Dashboard Item Actions -->
      <div class="d-flex align-items-center gap-3" id="dashboardItemActions">
        <div class="action-bar-wrapper">
          <div class="action-bar">
            <!-- Botón para descargar el gráfico como imagen -->
            <button class="btn btn-sm btn-info action-btn" id="downloadChartBtn" title="Descargar Gráfico">
              <i class="bi bi-download"></i> Descargar Gráfico
            </button>
            <button class="btn btn-sm btn-primary action-btn hidden" id="surveyLink" title="Responder">
              <i class="bi bi-check2-circle me-1"></i>Responder
            </button>
            <button class="btn btn-sm btn-secondary action-btn hidden" id="copySurveyBtn" title="Copiar URL">
              <i class="bi bi-clipboard me-1"></i>Copiar
            </button>
            <button class="btn btn-sm btn-outline-success action-btn hidden" id="showSurveyQRBtn" title="Ver QR">
              <i class="fas fa-qrcode"></i> QR
            </button>
            <button class="btn btn-sm btn-danger action-btn" id="eliminarItemBtn" title="Eliminar">
              <i class="bi bi-trash-fill"></i>
            </button>
          </div>
        </div>
      </div>




      


{% extends 'base.html' %}

{% block title %}Perfil de Usuario - PulztagWeb (Escala 1-10 NPS){% endblock %}

{% block head %}
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">

<style>
body {
  background-image: url("/static/images/background.jpg") !important;
  background-size: cover;
  background-attachment: fixed;
  background-position: center;
}

.small-text {
  font-size: 15px; /* Puedes ajustar este valor */
}

.d-flex {
  display: flex !important;
}
.h-100 {
  height: 100% !important;
}

#sidebar {
  height: calc(100vh - 90px - 75px); 
  overflow-y: auto;
}

/* Sidebar styles for larger screens */
@media (min-width: 768px) {
  #sidebar {
    display: block;
  }
}

/* Off-canvas sidebar styles for small screens */
@media (max-width: 767.98px) {
  #sidebar {
    display: none;
  }

  /* Asegurar que el off-canvas ocupe el 100% del ancho en móviles */
  .offcanvas-start {
    width: 250px;
  }

  /* Ajustar el padding del contenido principal en pantallas pequeñas */
  #mainContent {
    padding: 10px;
  }

  /* Ajustar el tamaño del botón del navbar en móviles */
  .navbar .btn {
    padding: 0.3rem 0.6rem;
  }
}

.sidebar-transition {
  transition: all 0.3s;
}

/* Ajustes para off-canvas en móviles */
.offcanvas-custom {
  width: 250px;
}
@media (max-width: 767.98px) {
  .offcanvas-custom {
    width: 100%;
  }
}

/* Estilos para los botones de acción */
.action-btn {
  margin-right: 5px;
}

/* Ajustar el contenedor del gráfico */
#chartContainer {
  margin: 10px auto; /* Reducir el margen superior/inferior */
  padding: 0;        /* Eliminar relleno */
  width: 95%;        /* Utilizar el 95% del ancho de la pantalla */
  max-width: 1200px; /* Límite máximo para pantallas grandes */
  height: auto;      /* Altura dinámica */
}

/* Ajustar el gráfico */
#myChart {
  width: 100%;
  height: 500px; /* Aumentar altura en pantallas grandes */
}

/* Ajustes para pantallas pequeñas */
@media (max-width: 768px) {
  #chartContainer {
    width: 98%; /* Ampliar más el ancho para aprovechar el espacio */
    height: auto; /* Asegurar altura dinámica */
  }

  #myChart {
    height: 400px; /* Aumentar altura en pantallas pequeñas */
  }
}

.table-responsive {
  width: 100%;
}

.hidden {
  display: none;
}

/* Asegurar que gráficos y tablas ocupen todo el ancho */
.full-width {
  width: 100%;
}

/* Estilos adicionales para las etiquetas de los gráficos (tooltip, etc.) */
.chartjs-tooltip {
  opacity: 1;
  position: absolute;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  pointer-events: none;
  transition: all .1s ease;
}

/* Mejora de la apariencia de las tablas */
.custom-table thead th {
  background-color: #f8f9fa;
  font-weight: bold;
}
.custom-table tbody tr:hover {
  background-color: #f1f1f1;
}
</style>
{% endblock %}

{% block content %}
<!-- NAVBAR superior con botón para abrir off-canvas en pantallas pequeñas -->
<nav class="navbar navbar-expand-md navbar-light bg-white border-bottom d-md-none">
  <div class="container-fluid">
    <button class="btn btn-sm btn-primary action-btn d-flex align-items-center" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasSidebar" aria-controls="offcanvasSidebar">
      <i class="bi bi-list"></i> Menú
    </button>
  </div>
</nav>

<div class="d-md-flex h-100">
  <!-- SIDEBAR para pantallas grandes -->
  <div class="d-none d-md-flex flex-column border-end sidebar-transition" id="sidebar" style="flex-shrink: 0;">
    <div class="sidebar-header d-flex align-items-center p-3 border-bottom">
      <div class="user-display">
        <span class="user-fullname">{{ current_user.username }}</span>
      </div>
      <button id="sidebarToggle" class="btn btn-light btn-sm ms-auto" title="Expandir/Contraer Sidebar">
        <i class="bi bi-chevron-left"></i>
      </button>
    </div>

    <ul class="nav flex-column pt-2" id="sidebarMenu">
      <!-- Dashboard -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#dashboardSubmenu"
            aria-expanded="false" aria-controls="dashboardSubmenu" title="Dashboard">
          <i class="fa-regular fa-chart-bar"></i><span class="text-label ms-2">Encuestas</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="dashboardSubmenu">
          <li>
            <a href="#" class="nav-link sub-link" data-bs-toggle="modal" data-bs-target="#agregarItemModal">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Agregar Item</span>
            </a>
          </li>
          <div id="dashboardItemsContainer">
            {% if dashboard_items %}
              {% for item in dashboard_items %}
              <li>
                <a href="#dashboardItemDetailSection"
                    class="nav-link sub-link dashboard-item-link"
                    data-item-id="{{ item.uuid }}"
                    data-item-name="{{ item.name }}"
                    data-item-type="{{ item.item_type }}">
                    <i class="fa-solid fa-square-poll-vertical"></i><span class="text-label ms-1">{{ item.name }}</span>
                </a>
              </li>
              {% endfor %}
            {% else %}
              <li>
                <span class="text-muted ms-3">Sin items disponibles</span>
              </li>
            {% endif %}
          </div>
        </ul>
      </li>
      <!-- Pulzcards -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse"
           data-bs-target="#pulzcardSubmenu" aria-expanded="false" title="Pulzcards">
          <i class="bi bi-person-badge-fill"></i><span class="text-label ms-2">Pulzcards</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="pulzcardSubmenu">
          <li>
            <a href="{{ url_for('pulzcard') }}" class="nav-link sub-link">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
            </a>
          </li>
          <li>
            <a href="#pulzcardsSection" class="nav-link sub-link">
              <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
            </a>
          </li>
        </ul>
      </li>

      <!-- Etiquetas -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse"
           data-bs-target="#etiquetasSubmenu" aria-expanded="false" title="Etiquetas">
          <i class="bi bi-tags-fill"></i><span class="text-label ms-2">Etiquetas</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="etiquetasSubmenu">
          <li>
            <a href="#" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal"
               class="nav-link sub-link">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
            </a>
          </li>
          <li>
            <a href="#" data-bs-toggle="modal" data-bs-target="#importTagsModal" class="nav-link sub-link" title="Importar Etiquetas">
              <i class="bi bi-file-arrow-up-fill"></i><span class="text-label ms-1">Importar</span>
            </a>
          </li>
          <li>
            <a href="#etiquetasSection" class="nav-link sub-link">
              <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
            </a>
          </li>
        </ul>
      </li>

      <!-- Bodegas -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#bodegasSubmenu"
           aria-expanded="false" title="Bodegas">
          <i class="bi bi-box-fill"></i><span class="text-label ms-2">Bodegas</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="bodegasSubmenu">
          <li>
            <a href="#" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal"
               class="nav-link sub-link">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nueva</span>
            </a>
          </li>
          <li>
            <a href="#bodegasSection" class="nav-link sub-link">
              <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todas</span>
            </a>
          </li>
        </ul>
      </li>

      <hr class="my-10">

      <!-- Mi Perfil -->
      <li class="nav-item mt-2">
        <a href="#miPerfilSection" class="nav-link sidebar-link" title="Mi Perfil">
          <i class="bi bi-person-lines-fill"></i><span class="text-label ms-2">Mi Perfil</span>
        </a>
      </li>
    </ul>
  </div>

  <!-- Off-canvas Sidebar para pantallas pequeñas -->
  <div class="offcanvas offcanvas-start d-md-none" tabindex="-1" id="offcanvasSidebar" aria-labelledby="offcanvasSidebarLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasSidebarLabel">{{ current_user.username }}</h5>
      <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Cerrar"></button>
    </div>
    <div class="offcanvas-body p-0">
      <ul class="nav flex-column pt-2" id="offcanvasSidebarMenu">

        <!-- Dashboard -->
        <li class="nav-item mt-2">
          <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#dashboardSubmenuOffcanvas"
             aria-expanded="false" aria-controls="dashboardSubmenuOffcanvas" title="Dashboard">
            <i class="fa-regular fa-chart-bar"></i><span class="text-label ms-2">Encuestas</span>
          </a>
          <ul class="collapse list-unstyled ps-0" id="dashboardSubmenuOffcanvas">
            <li>
              <a href="#" class="nav-link sub-link" data-bs-toggle="modal" data-bs-target="#agregarItemModal">
                <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Agregar Item</span>
              </a>
            </li>
            <div id="dashboardItemsContainerOffcanvas">
              {% if dashboard_items %}
                {% for item in dashboard_items %}
                <li>
                  <a href="#dashboardItemDetailSection"
                     class="nav-link sub-link dashboard-item-link"
                     data-item-id="{{ item.uuid }}"
                     data-item-name="{{ item.name }}"
                     data-item-type="{{ item.item_type }}">
                    <i class="fa-solid fa-angles-right"></i><span class="text-label ms-1">{{ item.name }}</span>
                  </a>
                </li>
                {% endfor %}
              {% else %}
                <li>
                  <span class="text-muted ms-3">Sin items disponibles</span>
                </li>
              {% endif %}
            </div>
          </ul>
        </li>
        
        <!-- Pulzcards -->
        <li class="nav-item mt-2">
          <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse"
             data-bs-target="#pulzcardSubmenuOffcanvas" aria-expanded="false" title="Pulzcards">
            <i class="bi bi-person-badge-fill"></i><span class="text-label ms-2">Pulzcards</span>
          </a>
          <ul class="collapse list-unstyled ps-0" id="pulzcardSubmenuOffcanvas">
            <li>
              <a href="{{ url_for('pulzcard') }}" class="nav-link sub-link">
                <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
              </a>
            </li>
            <li>
              <a href="#pulzcardsSection" class="nav-link sub-link">
                <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
              </a>
            </li>
          </ul>
        </li>

        <!-- Etiquetas -->
        <li class="nav-item mt-2">
          <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse"
             data-bs-target="#etiquetasSubmenuOffcanvas" aria-expanded="false" title="Etiquetas">
            <i class="bi bi-tags-fill"></i><span class="text-label ms-2">Etiquetas</span>
          </a>
          <ul class="collapse list-unstyled ps-0" id="etiquetasSubmenuOffcanvas">
            <li>
              <a href="#" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal"
                 class="nav-link sub-link">
                <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
              </a>
            </li>
            <li>
              <a href="#" data-bs-toggle="modal" data-bs-target="#importTagsModal" class="nav-link sub-link" title="Importar Etiquetas">
                <i class="bi bi-file-arrow-up-fill"></i><span class="text-label ms-1">Importar</span>
              </a>
            </li>
            <li>
              <a href="#etiquetasSection" class="nav-link sub-link">
                <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
              </a>
            </li>
          </ul>
        </li>

        <!-- Bodegas -->
        <li class="nav-item mt-2">
          <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#bodegasSubmenuOffcanvas"
             aria-expanded="false" title="Bodegas">
            <i class="bi bi-box-fill"></i><span class="text-label ms-2">Bodegas</span>
          </a>
          <ul class="collapse list-unstyled ps-0" id="bodegasSubmenuOffcanvas">
            <li>
              <a href="#" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal"
                 class="nav-link sub-link">
                <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nueva</span>
              </a>
            </li>
            <li>
              <a href="#bodegasSection" class="nav-link sub-link">
                <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todas</span>
              </a>
            </li>
          </ul>
        </li>
        <hr class="my-10">

        <!-- Mi Perfil -->
        <li class="nav-item mt-2">
          <a href="#miPerfilSection" class="nav-link sidebar-link" title="Mi Perfil">
            <i class="bi bi-person-lines-fill"></i><span class="text-label ms-2">Mi Perfil</span>
          </a>
        </li>
      </ul>
    </div>
  </div>

  <!-- CONTENIDO PRINCIPAL -->
  <div class="flex-grow-1" id="mainContent" style="padding:20px; overflow-y: auto;">
    <!-- Seccion Perfil -->
    <div id="miPerfilSection">
      <h2 class="text-center mb-4">Mi Perfil</h2>
      <div class="container-fluid mb-5">
        <div class="row">
          <div class="col-md-6">
            <h4>Información Personal</h4>
            <p><strong>Nombre de Usuario:</strong> {{ current_user.username }}</p>
            <p><strong>Correo Electrónico:</strong> {{ current_user.email }}</p>
          </div>
          <div class="col-md-6 text-end">
            <a href="{{ url_for('main.account') }}" class="btn btn-primary">Editar Perfil</a>
          </div>
        </div>
      </div>
      <hr class="my-5">
    </div>

    <!-- Sección Pulzcards -->
    <div id="pulzcardsSection" style="display:none;">
      <h4>Tus Pulzcards</h4>
      {% if pulzcards %}
      <form method="POST" action="{{ url_for('delete_bulk_pulzcards') }}" id="bulkDeletePulzcardForm">
        {{ bulk_delete_pulzcard_form.hidden_tag() }}

        <div class="action-bar-wrapper">
          <div class="action-bar">
            <button type="button"
                    class="action-btn btn-import d-flex align-items-center"
                    data-bs-toggle="modal"
                    data-bs-target="#importPulzcardModal"
                    title="Importar Pulzcards desde un archivo Excel">
              <i class="bi bi-upload"></i>
              <span class="d-none d-sm-inline ms-1">Importar</span>
            </button>
            <button type="button"
                    class="action-btn btn-export d-flex align-items-center"
                    onclick="exportSelectedPulzcards()"
                    title="Exportar Pulzcards seleccionadas">
              <i class="bi bi-download"></i>
              <span class="d-none d-sm-inline ms-1">Exportar</span>
            </button>
            <button type="button"
                    class="action-btn btn-delete d-flex align-items-center"
                    data-bs-toggle="modal"
                    data-bs-target="#confirmDeleteBulkPulzcardsModal"
                    title="Eliminar Pulzcards seleccionadas">
              <i class="bi bi-trash"></i>
              <span class="d-none d-sm-inline ms-1">Eliminar</span>
            </button>
          </div>
        </div>
        <hr class="my-10">

        <div class="table-responsive full-width">
          <table class="table table-hover custom-table table-striped table-bordered">
            <thead>
              <tr>
                <th><input type="checkbox" id="select_all_pulzcards" form="bulkDeletePulzcardForm"></th>
                <th>Nombre Tarjeta</th>
                <th>Nombre Usuario</th>
                <th>Organización</th>
                <th>Email</th>
                <th>Fecha Creación</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody>
              {% for card in pulzcards %}
              <tr>
                <td>
                  <input type="checkbox" name="selected_pulzcards" value="{{ card.card_id }}" form="bulkDeletePulzcardForm">
                </td>
                <td>
                  {% if card.card_name|length > 15 %}
                    {{ card.card_name[:15] }}...
                  {% else %}
                    {{ card.card_name }}
                  {% endif %}
                </td>
                
                <td>
                  {% if (card.first_name ~ ' ' ~ card.last_name)|length > 15 %}
                    {{ (card.first_name ~ ' ' ~ card.last_name)[:15] }}...
                  {% else %}
                    {{ card.first_name }} {{ card.last_name }}
                  {% endif %}
                </td>
                
                <td>
                  {% if card.organization|length > 15 %}
                    {{ card.organization[:15] }}...
                  {% else %}
                    {{ card.organization }}
                  {% endif %}
                </td>
                
                <td>
                  {% if card.email|length > 20 %}
                    {{ card.email[:20] }}...
                  {% else %}
                    {{ card.email }}
                  {% endif %}
                </td>
                
                <td class="small-text">{{ card.created_at.strftime('%d/%m/%Y %H:%M') }}</td>
                <td>
                  <div class="d-none d-md-flex gap-2">
                    <a href="{{ url_for('pulzcard_card', card_id=card.card_id) }}"
                       class="btn btn-outline-secondary btn-sm" target="_blank">
                      Ver
                    </a>
                    <a href="{{ url_for('edit_pulzcard', card_id=card.card_id, next='pulzcardsSection') }}"
                       class="btn btn-outline-secondary btn-sm">
                      Editar
                    </a>
                    <a href="{{ url_for('pulzcard_qrcode', card_id=card.card_id) }}"
                       class="btn btn-outline-secondary btn-sm" title="Ver Código QR">
                      <i class="fas fa-qrcode"></i>
                    </a>
                    <form action="{{ url_for('delete_pulzcard', card_id=card.card_id) }}" method="POST" style="display:inline;">
                      {{ delete_forms[card.id].hidden_tag() }}
                      <button type="submit"
                              onclick="return confirm('¿Estás seguro de que deseas eliminar esta Pulzcard?')"
                              style="background:none; border:none; padding:0; cursor:pointer;">
                        <i class="fa-solid fa-delete-left fa-rotate-by"
                           style="color: #ff5957; --fa-rotate-angle: 0deg; font-size: 1.8em"></i>
                      </button>
                    </form>
                  </div>
                  <div class="d-md-none">
                    <div class="dropdown">
                      <button class="btn btn-outline-secondary btn-sm dropdown-toggle"
                              type="button"
                              id="dropdownMenuButtonPulz{{ card.card_id }}"
                              data-bs-toggle="dropdown" aria-expanded="false">
                        Acciones
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonPulz{{ card.card_id }}">
                        <li>
                          <a class="dropdown-item"
                             href="{{ url_for('pulzcard_card', card_id=card.card_id) }}"
                             target="_blank">
                            <i class="fas fa-eye me-2"></i>Ver
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item"
                             href="{{ url_for('edit_pulzcard', card_id=card.card_id, next='pulzcardsSection') }}">
                            <i class="fas fa-edit me-2"></i>Editar
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item"
                             href="{{ url_for('pulzcard_qrcode', card_id=card.card_id) }}"
                             title="Ver Código QR">
                            <i class="fas fa-qrcode me-2"></i>Ver QR
                          </a>
                        </li>
                        <li>
                          <form action="{{ url_for('delete_pulzcard', card_id=card.card_id) }}" method="POST" style="display:inline;">
                            {{ delete_forms[card.id].hidden_tag() }}
                            <button type="submit"
                                    onclick="return confirm('¿Estás seguro de que deseas eliminar esta Pulzcard?')"
                                    class="dropdown-item bg-danger text-white">
                              <i class="fa-regular fa-eraser me-2"></i>Eliminar
                            </button>
                          </form>
                        </li>
                      </ul>
                    </div>
                  </div>
                </td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
      </form>

      <div class="modal fade" id="confirmDeleteBulkPulzcardsModal" tabindex="-1" aria-labelledby="confirmDeleteBulkPulzcardsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="confirmDeleteBulkPulzcardsModalLabel">Confirmar Eliminación</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
              <p>¿Estás seguro de que deseas eliminar las Pulzcards seleccionadas? Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
              <button type="button" class="btn btn-danger" id="confirmDeleteBulkPulzcardsBtn">Eliminar</button>
            </div>
          </div>
        </div>
      </div>
      {% else %}
      <p>No has creado ninguna Pulzcard aún. <a href="{{ url_for('pulzcard') }}">Crear una Pulzcard</a>.</p>
      {% endif %}
      <div class="mt-3">
        <a href="{{ url_for('pulzcard') }}" class="btn btn-secondary">
          <i class="fas fa-user-plus" style="color: rgb(104, 245, 167); font-size: 1.0em;"></i> Añadir
        </a>
      </div>
      <hr class="my-5">
    </div>

    <!-- Etiquetas -->
    <div id="etiquetasSection" style="display:none;">
      <h4>Tus Etiquetas y QR Code</h4>
      {% if tags %}
      <form method="POST" action="{{ url_for('delete_bulk_tags') }}" id="bulkDeleteForm">
        {{ bulk_delete_tag_form.hidden_tag() }}
        <div class="action-bar-wrapper">
          <div class="action-bar">
            <button type="button"
                    class="action-btn btn-import d-flex align-items-center"
                    data-bs-toggle="modal"
                    data-bs-target="#importTagsModal"
                    title="Importar etiquetas desde un archivo">
              <i class="bi bi-upload"></i>
              <span class="d-none d-sm-inline ms-1">Importar</span>
            </button>
            <button type="button"
                    class="action-btn btn-export d-flex align-items-center"
                    onclick="exportSelectedTags()"
                    title="Exportar etiquetas seleccionadas">
              <i class="bi bi-download"></i>
              <span class="d-none d-sm-inline ms-1">Exportar</span>
            </button>
            <button type="button"
                    class="action-btn btn-delete d-flex align-items-center"
                    data-bs-toggle="modal"
                    data-bs-target="#confirmDeleteBulkModal"
                    title="Eliminar etiquetas seleccionadas">
              <i class="bi bi-trash"></i>
              <span class="d-none d-sm-inline ms-1">Eliminar</span>
            </button>
          </div>
        </div>
        <hr class="my-10">

        <!-- Resto del contenido de Etiquetas -->
        <div class="table-responsive full-width">
          <table class="table table-hover custom-table table-striped table-bordered">
            <thead>
              <tr>
                <th><input type="checkbox" id="select_all" form="bulkDeleteForm"></th>
                <th>Nombre Etiqueta</th>
                <th>URL destino</th>
                <th>URL enlace</th>
                <th>Vistas</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody>
              {% for tag in tags %}
              <tr>
                <td>
                  <input type="checkbox" name="selected_tags" value="{{ tag.tag_id }}" form="bulkDeleteForm">
                <td>
                  {% if tag.tag_name|length > 25 %}
                    {{ tag.tag_name[:25] }}...
                  {% else %}
                    {{ tag.tag_name }}
                  {% endif %}
                </td>
                <td>
                  <a href="{{ tag.redirect_url }}" target="_blank">
                    {% if tag.redirect_url|length > 25 %}
                      {{ tag.redirect_url[:25] }}...
                    {% else %}
                      {{ tag.redirect_url }}
                    {% endif %}
                  </a>
                </td>
                <td>
                  {% set generated_url = url_for('redirect_tag', tag_id=tag.tag_id, _external=True) %}
                  <a href="{{ generated_url }}" target="_blank">
                    {% if generated_url|length > 25 %}
                      {{ generated_url[:25] }}...
                    {% else %}
                      {{ generated_url }}
                    {% endif %}
                  </a>
                </td>
                <td>{{ tag.vistas }}</td>
                <td>
                  <div class="d-none d-md-flex gap-2">
                    <button type="button" class="btn btn-outline-secondary btn-sm" onclick="copyURL('{{ generated_url }}')">Copiar</button>
                    <a href="{{ url_for('edit_tag', tag_id=tag.tag_id, next='etiquetasSection') }}" class="btn btn-outline-secondary btn-sm">Editar</a>
                    <a href="{{ url_for('tag_qrcode', tag_id=tag.tag_id) }}" class="btn btn-outline-secondary btn-sm" title="Ver Código QR">
                      <i class="fas fa-qrcode"></i>
                    </a>
                    <form action="{{ url_for('delete_tag', tag_id=tag.tag_id) }}" method="POST" style="display:inline;">
                      {{ delete_tag_forms[tag.id].hidden_tag() }}
                      <button type="submit"
                              onclick="return confirm('¿Estás seguro de que deseas eliminar esta etiqueta?')"
                              style="background:none; border:none; padding:0; cursor:pointer;">
                        <i class="fa-solid fa-delete-left fa-rotate-by" style="color: #ff5957; --fa-rotate-angle: 0deg; font-size: 1.8em"></i>
                      </button>
                    </form>
                  </div>
                  <div class="d-md-none">
                    <div class="dropdown">
                      <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButtonTag{{ tag.tag_id }}" data-bs-toggle="dropdown" aria-expanded="false">
                        Acciones
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonTag{{ tag.tag_id }}">
                        <li>
                          <a href="#" class="dropdown-item"
                            onclick="copyURL('{{ generated_url }}'); return false;">
                            <i class="fas fa-copy me-2"></i>Copiar URL
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item" href="{{ url_for('edit_tag', tag_id=tag.tag_id, next='etiquetasSection') }}">
                            <i class="fas fa-edit me-2"></i>Editar
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item" href="{{ url_for('tag_qrcode', tag_id=tag.tag_id) }}" title="Ver Código QR">
                            <i class="fas fa-qrcode me-2"></i>Ver QR
                          </a>
                        </li>
                        <li>
                          <form action="{{ url_for('delete_tag', tag_id=tag.tag_id) }}" method="POST" style="display:inline;">
                            {{ delete_tag_forms[tag.id].hidden_tag() }}
                            <button type="submit"
                                    onclick="return confirm('¿Estás seguro de que deseas eliminar esta etiqueta?')"
                                    class="dropdown-item bg-danger text-white">
                              <i class="fa-regular fa-eraser me-2"></i>Eliminar
                            </button>
                          </form>
                        </li>
                      </ul>
                    </div>
                  </div>
                </td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
        {% else %}
        <p>No has creado ninguna etiqueta aún.
          <a href="#" class="text-decoration-underline" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal">Crear una Etiqueta</a>.
        </p>
        {% endif %}
        <div class="mt-3">
          <button type="button" class="btn btn-secondary d-flex align-items-center" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal">
            <i class="fa-regular fa-square-plus" style="color: rgb(104, 245, 167); font-size: 1.0em;"></i>
            <span class="d-none d-sm-inline ms-1">Añadir</span>
          </button>
        </div>
        <hr class="my-5">
    </div>

    <!-- BODEGAS -->
    <div id="bodegasSection" style="display:none;">
      <h4>Bodegas</h4>
      {% if bodegas %}
      <div class="table-responsive full-width">
        <table class="table table-hover custom-table">
          <thead>
            <tr>
              <th>ID Bodega</th>
              <th>Nombre</th>
              <th>Fecha de Creación</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            {% for bodega in bodegas %}
            <tr>
              <td>
                <a href="{{ url_for('view_bodega', uuid_bodega=bodega.uuid) }}">
                  {{ bodega.id_bodega }}
                </a>
              </td>
              <td>{{ bodega.nombre }}</td>
              <td>{{ bodega.fecha_creacion.strftime('%d/%m/%Y %H:%M') }}</td>
              <td>
                <div class="d-none d-md-flex gap-2">
                  <a href="{{ url_for('bodega_qrcode', uuid_bodega=bodega.uuid) }}"
                     class="btn btn-outline-secondary btn-sm" title="Ver Código QR">
                    <i class="fas fa-qrcode"></i>
                  </a>
                  <a href="{{ url_for('edit_bodega', uuid_bodega=bodega.uuid, next='bodegasSection') }}"
                     class="btn btn-outline-secondary btn-sm">Editar</a>
                  <form action="{{ url_for('delete_bodega', uuid_bodega=bodega.uuid) }}"
                        method="POST" style="display:inline;">
                    {{ delete_bodega_forms[bodega.uuid].hidden_tag() }}
                    <button type="submit"
                            onclick="return confirm('¿Estás seguro de que deseas eliminar esta bodega?')"
                            style="background:none; border:none; padding:0; cursor:pointer;">
                      <i class="fa-solid fa-delete-left fa-rotate-by" style="color: #ff5957; --fa-rotate-angle: 0deg; font-size: 1.8em"></i>
                    </button>
                  </form>
                </div>
                <div class="d-md-none">
                  <div class="dropdown">
                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle"
                            type="button" id="dropdownMenuButtonBodega{{ bodega.uuid }}"
                            data-bs-toggle="dropdown" aria-expanded="false">
                      Acciones
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonBodega{{ bodega.uuid }}">
                      <li>
                        <a href="{{ url_for('bodega_qrcode', uuid_bodega=bodega.uuid) }}" class="dropdown-item" title="Ver Código QR">
                          <i class="fas fa-qrcode me-2"></i>Ver QR
                        </a>
                      </li>
                      <li>
                        <a class="dropdown-item" href="{{ url_for('edit_bodega', uuid_bodega=bodega.uuid, next='bodegasSection') }}">
                          <i class="fas fa-edit me-2"></i>Editar
                        </a>
                      </li>
                      <li>
                        <form action="{{ url_for('delete_bodega', uuid_bodega=bodega.uuid) }}" method="POST" style="display:inline;">
                          {{ delete_bodega_forms[bodega.uuid].hidden_tag() }}
                          <button type="submit"
                                  onclick="return confirm('¿Estás seguro de que deseas eliminar esta bodega?')"
                                  class="dropdown-item bg-danger text-white">
                            <i class="fa-regular fa-eraser me-2"></i>Eliminar
                          </button>
                        </form>
                      </li>
                    </ul>
                  </div>
                </div>
              </td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
      {% else %}
      <p>No has creado ninguna bodega aún.
        <a href="#" class="text-decoration-underline" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal">Crear una Bodega</a>.
      </p>
      {% endif %}
      <div class="mt-3">
        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal">
          <i class="fa-regular fa-square-plus" style="color: rgb(104, 245, 167); font-size: 1.0em;"></i> Añadir
        </button>
      </div>
    </div>

    <!-- SECCIÓN DETALLE DE Ítem de Dashboard -->
    <div id="dashboardItemDetailSection" style="display:none;">

      <!-- Bloque con nombre y tipo, centrado -->
      <div class="mb-3 text-center">
        <h2 class="mb-0" id="dashboardItemName"></h2>
        <small class="text-muted" id="dashboardItemType"></small>
      </div>
      <h4 class="mb-3 text-center">Estadísticas de Valoraciones</h4>
      <hr class="my-4">
      <!-- Contenedor de botones, alineados a la derecha -->
      <div class="d-flex align-items-center justify-content-end gap-3 flex-wrap" id="dashboardItemActions">
        <div class="action-bar-wrapper">
          <div class="action-bar">
            <!-- Enlace (ahora <a>) para Responder -->
            <a class="btn btn-sm btn-primary action-btn d-flex align-items-center"
              id="surveyLink"
              title="Responder"
              target="_blank">
              <i class="fa-solid fa-reply"></i>
              <span class="d-none d-sm-inline ms-1">Responder</span>
            </a>
            <!-- Botón: Copiar URL -->
            <button class="btn btn-sm btn-primary action-btn d-flex align-items-center"
                    id="copySurveyBtn"
                    title="Copiar URL">
              <i class="fa-solid fa-clone"></i>
              <span class="d-none d-sm-inline ms-1">Copiar URL</span>
            </button>

            <!-- Botón: Ver QR -->
            <button class="btn btn-sm btn-primary action-btn d-flex align-items-center"
                    id="showSurveyQRBtn"
                    title="Ver QR">
              <i class="fas fa-qrcode"></i>
              <span class="d-none d-sm-inline ms-1">QR</span>
            </button>
            <!-- Botón: Descargar Gráfico -->
            <button class="btn btn-sm btn-primary action-btn d-flex align-items-center" id="downloadChartBtn" title="Descargar Gráfico">
              <i class="fa-solid fa-download"></i>
              <span class="d-none d-sm-inline ms-1">Descargar Gráfico</span>
            </button>
            <!-- Botón: Eliminar -->
            <button class="btn btn-sm btn-danger action-btn d-flex align-items-center"
                    id="eliminarItemBtn"
                    title="Eliminar">
              <i class="fa-solid fa-trash"></i>
              <span class="d-none d-sm-inline ms-1">Eliminar</span>
            </button>
          </div>
        </div>
      </div>

      <div id="dashboardItemStats" style="display:none;">
        <!-- Filtro de rango de fechas -->
        <div class="mb-3 d-flex flex-nowrap justify-content-end align-items-center gap-2">
          <label for="dateRangePicker" class="form-label mb-0"></label>
          <input type="date" id="startDate" class="form-control form-control-sm" style="width: auto;">
          <span>a</span>
          <input type="date" id="endDate" class="form-control form-control-sm" style="width: auto;">
          <button class="btn btn-sm btn-secondary action-btn d-flex align-items-center" id="filterDateBtn">Filtrar</button>
        </div>

        <!-- Selección de indicador con 'Tabla de Evaluaciones' al final -->
        <div class="d-flex justify-content-end align-items-center mb-3">
          <select id="chartIndicatorSelect" class="form-select form-select-sm" style="width: 220px;">
            <option value="count" selected>Cantidad de Evaluaciones</option>
            <option value="average">Promedio de Puntajes</option>
            <option value="nps">NPS Ponderado</option>
            <option value="csat">CSAT (Satisfacción del Cliente)</option>
            <option value="ces">CES (Esfuerzo del Cliente)</option>
            <option value="response_rate">Tasa de Respuesta</option>
            <option value="sentiment">Análisis de Sentimientos</option>
            <option value="stacked">Gráfico Barras Apiladas</option>
            <option value="table">Tabla de Evaluaciones</option><!-- Nuevo -->
          </select>
        </div>

        <div id="chartContainer" class="full-width">
          <canvas id="myChart"></canvas>
        </div>

        <div id="tableContainer" style="display:none;">
          <table class="table table-bordered table-striped table-hover text-center" id="ratingsTable">
            <thead class="table-dark">
              <tr id="ratingsHeader">
                <th>Valoración</th>
              </tr>
            </thead>
            <tbody>
              <tr id="rating10Row"><th>10</th></tr>
              <tr id="rating9Row"><th>9</th></tr>
              <tr id="rating8Row"><th>8</th></tr>
              <tr id="rating7Row"><th>7</th></tr>
              <tr id="rating6Row"><th>6</th></tr>
              <tr id="rating5Row"><th>5</th></tr>
              <tr id="rating4Row"><th>4</th></tr>
              <tr id="rating3Row"><th>3</th></tr>
              <tr id="rating2Row"><th>2</th></tr>
              <tr id="rating1Row"><th>1</th></tr>
              <tr id="totalRow"><th>Total</th></tr>
            </tbody>
          </table>
        </div>

        <div id="dayDetailsContainer" style="display:none; margin-top: 20px;">
          <h5 id="detailsTitle"></h5>
          <table class="table table-bordered">
            <thead>
              <tr>
                <th>Evaluación (1 a 10)</th>
                <th>Comentario</th>
              </tr>
            </thead>
            <tbody id="dayDetailsBody"></tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- MODALES para Pulzcards, Etiquetas, Bodegas, Dashboard Items -->
<!-- Modal Importar Pulzcards -->
<div class="modal fade" id="importPulzcardModal" tabindex="-1" aria-labelledby="importPulzcardModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('import_pulzcards') }}" enctype="multipart/form-data">
        {{ import_pulzcards_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="importPulzcardModalLabel">Importar Pulzcards desde Excel</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <p><strong>Cómo Importar:</strong></p>
          <p>Asegúrate de que tu archivo Excel tenga al menos las columnas:</p>
          <table class="table table-bordered">
            <thead>
              <tr>
                {% for field in pulzcard_fields %}
                <th>{{ field }}</th>
                {% endfor %}
              </tr>
            </thead>
            <tbody>
              <tr>
                {% for _ in pulzcard_fields %}
                <td>Ejemplo</td>
                {% endfor %}
              </tr>
            </tbody>
          </table>
          <div class="mb-3">
            <label for="excelFilePulzcards" class="form-label">Selecciona tu archivo Excel</label>
            {{ import_pulzcards_form.excelFile(class="form-control", id="excelFilePulzcards", required=True) }}
            {% for error in import_pulzcards_form.excelFile.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
          {{ import_pulzcards_form.submit(class="btn btn-primary") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Agregar Etiqueta -->
<div class="modal fade" id="agregarEtiquetaModal" tabindex="-1" aria-labelledby="agregarEtiquetaModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('create_tag') }}">
        {{ tag_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="agregarEtiquetaModalLabel">Agregar Nueva Etiqueta</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            {{ tag_form.tag_name.label(class="form-label") }}
            {{ tag_form.tag_name(class="form-control", placeholder="Nombre de la Etiqueta") }}
            {% for error in tag_form.tag_name.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ tag_form.redirect_url.label(class="form-label") }}
            {{ tag_form.redirect_url(class="form-control", placeholder="URL de Redirección") }}
            {% for error in tag_form.redirect_url.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          {{ tag_form.submit(class="btn btn-success") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Importar Etiquetas -->
<div class="modal fade" id="importTagsModal" tabindex="-1" aria-labelledby="importTagsModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('import_tags') }}" enctype="multipart/form-data">
        {{ import_tags_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="importTagsModalLabel">Importar Etiquetas desde Excel</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <p><strong>Cómo Importar:</strong></p>
          <p>Asegúrate de que tu archivo Excel tenga las columnas:</p>
          <table class="table table-bordered">
            <thead>
              <tr>
                {% for field in tag_fields %}
                <th>{{ field }}</th>
                {% endfor %}
              </tr>
            </thead>
            <tbody>
              <tr>
                {% for _ in tag_fields %}
                <td>Ejemplo de dato</td>
                {% endfor %}
              </tr>
            </tbody>
          </table>
          <div class="mb-3">
            <label for="excelFile" class="form-label">Selecciona tu archivo Excel</label>
            {{ import_tags_form.excelFile(class="form-control", id="excelFile", required=True) }}
            {% for error in import_tags_form.excelFile.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
          {{ import_tags_form.submit(class="btn btn-primary") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Agregar Bodega -->
<div class="modal fade" id="agregarBodegaModal" tabindex="-1" aria-labelledby="agregarBodegaModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('create_bodega') }}">
        {{ bodega_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="agregarBodegaModalLabel">Agregar Nueva Bodega</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            {{ bodega_form.nombre.label(class="form-label") }}
            {{ bodega_form.nombre(class="form-control", placeholder="Nombre de la Bodega") }}
            {% for error in bodega_form.nombre.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ bodega_form.ubicacion.label(class="form-label") }}
            {{ bodega_form.ubicacion(class="form-control", placeholder="Ubicación") }}
            {% for error in bodega_form.ubicacion.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ bodega_form.notas.label(class="form-label") }}
            {{ bodega_form.notas(class="form-control", placeholder="Notas") }}
            {% for error in bodega_form.notas.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          {{ bodega_form.submit(class="btn btn-success") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Agregar Item Dashboard -->
<div class="modal fade" id="agregarItemModal" tabindex="-1" aria-labelledby="agregarItemModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="agregarItemForm">
        <div class="modal-header">
          <h5 class="modal-title" id="agregarItemModalLabel">Agregar Nuevo Item al Dashboard</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="itemNameInput" class="form-label">Nombre del Item</label>
            <input type="text" class="form-control" id="itemNameInput" name="name" required>
          </div>
          <div class="mb-3">
            <label for="itemTypeSelect" class="form-label">Tipo de Item</label>
            <select class="form-select" id="itemTypeSelect" name="item_type" required>
              <option value="" selected disabled>Selecciona un tipo</option>
              <option value="Evaluación de Clientes">Evaluación de Clientes (NPS 1-10)</option>
              <option value="Evaluación de Semáforo">Evaluación de Semáforo (1-3)</option>
              <option value="Visualizaciones diarias">Visualizaciones Diarias</option>
              <!-- (Si no deseas más tipos, remueve los de abajo) -->
              <!--
              <option value="CSAT">CSAT (Satisfacción del Cliente)</option>
              <option value="CES">CES (Esfuerzo del Cliente)</option>
              <option value="Sentiment">Análisis de Sentimientos</option>
              <option value="Response Rate">Tasa de Respuesta</option>
              -->
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-success">Agregar</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Eliminar Item Dashboard -->
<div class="modal fade" id="confirmDeleteDashboardItemModal" tabindex="-1" aria-labelledby="confirmDeleteDashboardItemModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="deleteDashboardItemForm">
        <div class="modal-header">
          <h5 class="modal-title" id="confirmDeleteDashboardItemModalLabel">Confirmar Eliminación</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <p>¿Estás seguro de que deseas eliminar este ítem del Dashboard? Esta acción no se puede deshacer.</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-danger">Eliminar</button>
        </div>
      </form>
    </div>
  </div>
</div>

{% if bodega_form.errors %}
<script>
var agregarBodegaModal = new bootstrap.Modal(document.getElementById('agregarBodegaModal'));
agregarBodegaModal.show();
</script>
{% endif %}

{% if tag_form.errors %}
<script>
var agregarEtiquetaModal = new bootstrap.Modal(document.getElementById('agregarEtiquetaModal'));
agregarEtiquetaModal.show();
</script>
{% endif %}
{% endblock %}

{% block scripts %}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

<script>
// ----------------------------------------------------------------------------------
// Al cargar DOM
$(document).ready(function() {
  // 1) Inicializa DataTables en todas las tablas con la clase .custom-table
  $('.custom-table').DataTable({
    language: {
      url: "https://cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json"
    }
  });

  // 2) Control de secciones con hash
  function showSection(section) {
    var sections = [
      'miPerfilSection',
      'pulzcardsSection',
      'etiquetasSection',
      'bodegasSection',
      'dashboardItemDetailSection'
    ];
    sections.forEach(function(sec) {
      var el = document.getElementById(sec);
      if (el) {
        el.style.display = (sec === section) ? 'block' : 'none';
      }
    });
  }
  function handleHash() {
    var hash = window.location.hash.substring(1);
    if (hash) {
      showSection(hash);
    } else {
      showSection('miPerfilSection');
    }
  }
  window.addEventListener('load', handleHash, false);
  window.addEventListener('hashchange', handleHash, false);

  // Función para manejar clic en los items del Dashboard
  function handleDashboardItemClick(e, element){
    e.preventDefault();
    var name = $(element).data('item-name');
    var type = $(element).data('item-type');
    var itemId = $(element).data('item-id');

    // Muestra en el DOM
    $('#dashboardItemName').text(name);
    $('#dashboardItemType').text(type);
    $('#eliminarItemBtn').data('item-id', itemId);

    // Si es un tipo que admite encuesta
    if (["Evaluación de Clientes", "Evaluación de Semáforo", "CSAT", "CES", "Sentiment", "Response Rate"].includes(type)) {
      var surveyUrl = "{{ url_for('survey', item_uuid='ITEMUUID', _external=True) }}".replace('ITEMUUID', itemId);

      // Link "Responder"
      $('#surveyLink')
        .attr('href', surveyUrl)
        .show()
        .find('span')
        .text('Responder');

      // Botón "Copiar URL"
      $('#copySurveyBtn').off('click').on('click', function() {
        navigator.clipboard.writeText(surveyUrl)
          .then(function(){ alert('URL copiada al portapapeles!'); })
          .catch(function(err){ alert('Error al copiar la URL: ' + err); });
      }).show();

      // Botón "Ver QR"
      $('#showSurveyQRBtn').off('click').on('click', function() {
        window.open('/survey_qrcode/' + itemId, '_blank');
      }).show();

      // Mostrar contenedor de estadísticas y renderizar la tabla inicial
      $('#dashboardItemStats').show();
      renderLast10DaysTable(itemId, type);


    } else {
      // Ocultar
      $('#surveyLink, #copySurveyBtn, #showSurveyQRBtn').hide();
      $('#dashboardItemStats').hide();
    }

    // Cambiar a la sección de detalle
    showSection('dashboardItemDetailSection');

    // Cerrar el off-canvas si está abierto
    var offcanvasElement = document.getElementById('offcanvasSidebar');
    if (offcanvasElement) {
      var offcanvas = bootstrap.Offcanvas.getInstance(offcanvasElement);
      if (offcanvas) offcanvas.hide();
    }
  }

  // Listeners para ítems en sidebar
  $('#dashboardItemsContainer').on('click', '.dashboard-item-link', function(e) {
    handleDashboardItemClick(e, this);
    // Si en móvil, cerrar el offcanvas
    var offcanvasElement = document.getElementById('offcanvasSidebar');
    if (offcanvasElement) {
      var offcanvas = bootstrap.Offcanvas.getInstance(offcanvasElement);
      if (offcanvas) offcanvas.hide();
    }
  });
  $('#dashboardItemsContainerOffcanvas').on('click', '.dashboard-item-link', function(e) {
    handleDashboardItemClick(e, this);
    var offcanvasElement = document.getElementById('offcanvasSidebar');
    if (offcanvasElement) {
      var offcanvas = bootstrap.Offcanvas.getInstance(offcanvasElement);
      if (offcanvas) offcanvas.hide();
    }
  });

  // 3) Función copiar URL
  window.copyURL = function(url) {
    navigator.clipboard.writeText(url)
      .then(function(){ alert('URL copiada al portapapeles!'); })
      .catch(function(err){ alert('Error al copiar URL: ' + err); });
  };

  // 4) Toggle sidebar (colapsar en pantallas grandes)
  var sidebar = document.getElementById('sidebar');
  var toggleBtn = document.getElementById('sidebarToggle');
  if (sidebar && toggleBtn) {
    toggleBtn.addEventListener('click', function() {
      sidebar.classList.toggle('collapsed');
      this.innerHTML = sidebar.classList.contains('collapsed')
        ? '<i class="bi bi-chevron-right"></i>'
        : '<i class="bi bi-chevron-left"></i>';
    });
  }

  // 5) Selección masiva de Etiquetas
  var selectAllTagsCheckbox = document.getElementById('select_all');
  if (selectAllTagsCheckbox) {
    selectAllTagsCheckbox.addEventListener('click', function() {
      var checkboxes = document.querySelectorAll('input[name="selected_tags"]');
      checkboxes.forEach(ch => { ch.checked = selectAllTagsCheckbox.checked; });
    });
  }
  var confirmDeleteBulkBtn = document.getElementById('confirmDeleteBulkBtn');
  if (confirmDeleteBulkBtn) {
    confirmDeleteBulkBtn.addEventListener('click', function(){
      document.getElementById('bulkDeleteForm').submit();
    });
  }

  // 6) Exportar Etiquetas
  window.exportSelectedTags = function() {
    var selectedTags = document.querySelectorAll('input[name="selected_tags"]:checked');
    if (!selectedTags.length) {
      alert('Selecciona al menos una etiqueta para exportar.');
      return;
    }
    var tagIds = Array.from(selectedTags).map(tag => tag.value);
    fetch('{{ url_for("export_tags") }}', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json', 'X-CSRFToken': '{{ csrf_token() }}' },
      body: JSON.stringify({ tag_ids: tagIds })
    })
    .then(res => {
      if (!res.ok) {
        return res.json().then(data => { throw new Error(data.error); });
      }
      return res.blob();
    })
    .then(blob => {
      var url = window.URL.createObjectURL(blob);
      var a = document.createElement('a');
      a.style.display='none';
      a.href = url;
      a.download = 'tags_export.xlsx';
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
    })
    .catch(err => {
      console.error('Error:', err);
      alert('Error exportando: ' + err.message);
    });
  };

  // 7) Selección masiva de Pulzcards
  var selectAllPulzcardsCheckbox = document.getElementById('select_all_pulzcards');
  if (selectAllPulzcardsCheckbox) {
    selectAllPulzcardsCheckbox.addEventListener('click', function(){
      var checkboxes = document.querySelectorAll('input[name="selected_pulzcards"]');
      checkboxes.forEach(ch => { ch.checked = selectAllPulzcardsCheckbox.checked; });
    });
  }
  var confirmDeleteBulkPulzcardsBtn = document.getElementById('confirmDeleteBulkPulzcardsBtn');
  if (confirmDeleteBulkPulzcardsBtn) {
    confirmDeleteBulkPulzcardsBtn.addEventListener('click', function(){
      document.getElementById('bulkDeletePulzcardForm').submit();
    });
  }

  // 8) Exportar Pulzcards
  window.exportSelectedPulzcards = function() {
    var selected = document.querySelectorAll('input[name="selected_pulzcards"]:checked');
    if (!selected.length) {
      alert('Selecciona al menos una Pulzcard para exportar.');
      return;
    }
    var pulz_ids = Array.from(selected).map(el => el.value);
    fetch('{{ url_for("export_pulzcards") }}', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json', 'X-CSRFToken': '{{ csrf_token() }}' },
      body: JSON.stringify({ pulz_ids: pulz_ids })
    })
    .then(res => {
      if(!res.ok) {
        return res.json().then(data=>{throw new Error(data.error);});
      }
      return res.blob();
    })
    .then(blob => {
      var url = window.URL.createObjectURL(blob);
      var a = document.createElement('a');
      a.style.display='none';
      a.href = url;
      a.download = 'pulzcards_export.xlsx';
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
    })
    .catch(err => {
      console.error('Error:', err);
      alert('Error exportando pulzcards: ' + err.message);
    });
  };

  // 9) Crear Item Dashboard (Ajax)
  $('#agregarItemForm').submit(function(e){
    e.preventDefault();
    var itemName = $('#itemNameInput').val().trim();
    var itemType = $('#itemTypeSelect').val();
    if(!itemName || !itemType){
      alert('Completa todos los campos.');
      return;
    }
    $.ajax({
      url: "{{ url_for('create_dashboard_item') }}",
      method: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ name: itemName, item_type: itemType }),
      headers: {'X-CSRFToken': '{{ csrf_token() }}'},
      success: function(resp){
        var newItem = '<li>'+
          '<a href="#dashboardItemDetailSection" class="nav-link sub-link dashboard-item-link" ' +
            'data-item-id="'+resp.uuid+'" data-item-name="'+itemName+'" data-item-type="'+itemType+'">' +
            '<i class="fa-solid fa-square-poll-vertical"></i><span class="text-label ms-1">' + itemName + '</span>' +
          '</a></li>';
        $('#dashboardItemsContainer').append(newItem);
        $('#dashboardItemsContainerOffcanvas').append(newItem);
        $('#agregarItemModal').modal('hide');
        $('#itemNameInput').val('');
        $('#itemTypeSelect').val('');
      },
      error: function(){ alert('Error al crear ítem.'); }
    });
  });

  // Eliminar Item (Ajax)
  $('#eliminarItemBtn').on('click', function(){
    var itemId = $(this).data('item-id');
    if(!itemId){
      console.error('No item-id');
      return;
    }
    var confirmModal = new bootstrap.Modal(document.getElementById('confirmDeleteDashboardItemModal'));
    confirmModal.show();
    $('#deleteDashboardItemForm').off('submit').on('submit', function(e){
      e.preventDefault();
      $.ajax({
        url: "{{ url_for('delete_dashboard_item') }}",
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ uuid: itemId }),
        headers: {'X-CSRFToken': '{{ csrf_token() }}'},
        success: function(){
          $('.dashboard-item-link[data-item-id="'+itemId+'"]').parent().remove();
          $('.offcanvas #dashboardItemsContainerOffcanvas .dashboard-item-link[data-item-id="'+itemId+'"]').parent().remove();
          showSection('miPerfilSection');
          confirmModal.hide();
          alert('Ítem eliminado.');
        },
        error: function(){ alert('Error al eliminar ítem.'); }
      });
    });
  });

  // 10) Renderizar tabla y gráfico
  var globalRatingsData=null, globalDates=null, globalDetails=null;

  function renderLast10DaysTable(itemUUID, itemType){
    var ratingsHeader = document.getElementById('ratingsHeader');
    // Limpiar columnas
    Array.from(ratingsHeader.querySelectorAll('th:not(:first-child)')).forEach(th => th.remove());
    // Limpiar filas
    var rowIds = ['rating10Row','rating9Row','rating8Row','rating7Row','rating6Row',
                  'rating5Row','rating4Row','rating3Row','rating2Row','rating1Row','totalRow'];
    rowIds.forEach(function(rowId){
      var row = document.getElementById(rowId);
      while(row.children.length>1){
        row.removeChild(row.lastChild);
      }
    });

    $.ajax({
      url:'{{ url_for("get_ratings_data") }}',
      type:'GET',
      data:{
        item_uuid: itemUUID,
        start_date: $('#startDate').val(),
        end_date: $('#endDate').val()
      },
      success:function(resp){
        if(resp.error){
          console.error("Error:", resp.error);
          return;
        }
        globalRatingsData = resp.ratings;
        globalDates = resp.dates;
        globalDetails = resp.details;

        // Agregar encabezado con las fechas
        globalDates.forEach(function(dateStr){
          var th=document.createElement('th');
          th.textContent=dateStr;
          ratingsHeader.appendChild(th);
        });
        // Llenar la tabla
        fillTableWithCounts(globalRatingsData);

        // Renderizar gráfico por defecto "count"
        renderChart(globalRatingsData, globalDates, globalDetails, itemType, 'count');
      },
      error:function(xhr,status,error){
        console.error('Error al obtener datos:', error);
      }
    });
  }

  function fillTableWithCounts(ratingsData){
    for(var val=10; val>=1; val--){
      var row = document.getElementById('rating'+val+'Row');
      var countArray = ratingsData[val.toString()]||[];
      countArray.forEach(function(cnt){
        var td=document.createElement('td');
        td.textContent=cnt;
        row.appendChild(td);
      });
    }
    var totalRow=document.getElementById('totalRow');
    var length=(ratingsData["1"]||[]).length;
    var dayTotals=new Array(length).fill(0);
    for(var rating=1; rating<=10; rating++){
      var arr = ratingsData[rating.toString()]||[];
      arr.forEach(function(cnt, i){
        dayTotals[i]+=cnt;
      });
    }
    dayTotals.forEach(function(t){
      var td=document.createElement('td');
      td.textContent=t;
      totalRow.appendChild(td);
    });
  }

  // Cálculo de indicadores
  function computeDataByIndicator(ratingsData, dates, indicator){
    var length=dates.length;
    var resultArray=new Array(length).fill(0);

    for(var i=0; i<length; i++){
      var total=0, sumRatings=0, promoters=0, passives=0, detractors=0;
      for(var rating=1; rating<=10; rating++){
        var c = (ratingsData[rating.toString()]||[])[i]||0;
        total += c;
        sumRatings += rating*c;
        if(rating>=9) promoters+=c;
        else if(rating>=7) passives+=c;
        else detractors+=c;
      }

      if(indicator === "csat"){
        // CSAT = (Promotores / total) * 100
        var csat=0;
        if(total>0) csat=(promoters/total)*100;
        resultArray[i] = csat;
      }
      else if(indicator === "ces"){
        // CES = sumRatings(1-5) / total
        // Reusamos sumRatings y total, pero si tu rating es 1..10, ajusta tu lógica
        // Ejemplo: tomamos rating 1..5 como "esfuerzo"
        var sumEsfuerzo=0; 
        var totEsf=0;
        for(var r=1; r<=5; r++){
          var c2=(ratingsData[r.toString()]||[])[i]||0;
          sumEsfuerzo += r*c2;
          totEsf += c2;
        }
        if(totEsf>0) resultArray[i] = sumEsfuerzo/totEsf; 
        else resultArray[i] = 0;
      }
      else if(indicator === "response_rate"){
        // Tasa de Respuesta
        // asumiendo response.total_sent si existe...
        // (Ajustar según la estructura real)
        // Ej:
        var totalSent=0; 
        if(globalRatingsData && globalRatingsData.total_sent){
          totalSent = globalRatingsData.total_sent[i]||0;
        }
        if(totalSent>0) resultArray[i]=(total/totalSent)*100; 
        else resultArray[i]=0;
      }
      else if(indicator === "sentiment"){
        // Asume un valor 'sentiment' en globalDetails
        var sentiments=globalDetails[dates[i]]||[];
        var sentimentSum=0, sentimentCount=0;
        sentiments.forEach(function(resp){
          if(resp.sentiment !== undefined){
            sentimentSum += resp.sentiment;
            sentimentCount++;
          }
        });
        if(sentimentCount>0) resultArray[i] = sentimentSum/sentimentCount;
        else resultArray[i] = 0;
      }
      else {
        // "count", "average", "nps", ...
        switch(indicator){
          case "count":
            resultArray[i] = total;
            break;
          case "average":
            resultArray[i] = total>0? (sumRatings/total) : 0;
            break;
          case "nps":
            resultArray[i] = total>0 ? ((promoters-detractors)/total)*100 : 0;
            break;
          default:
            resultArray[i] = 0;
        }
      }
    }
    return resultArray;
  }

  function computeStackedData(ratingsData, dates){
    var length=dates.length;
    var promotersArray = new Array(length).fill(0);
    var passivesArray = new Array(length).fill(0);
    var detractorsArray = new Array(length).fill(0);

    for(var i=0;i<length;i++){
      var pro=0, pas=0, det=0, total=0;
      for(var rating=1; rating<=10; rating++){
        var c=(ratingsData[rating.toString()]||[])[i]||0;
        total+=c;
        if(rating>=9) pro+=c;
        else if(rating>=7) pas+=c;
        else det+=c;
      }
      promotersArray[i]=pro;
      passivesArray[i]=pas;
      detractorsArray[i]=det;
    }
    return {
      promotersArray: promotersArray,
      passivesArray: passivesArray,
      detractorsArray: detractorsArray
    };
  }

  function renderChart(ratingsData, dates, detailsByDay, itemType, indicator){
    // Si "tabla de evaluaciones"
    if(indicator==="table"){
      document.getElementById('chartContainer').style.display='none';
      document.getElementById('tableContainer').style.display='block';
      return;
    } else {
      document.getElementById('chartContainer').style.display='block';
      document.getElementById('tableContainer').style.display='none';
    }

    if(indicator==="stacked"){
      renderStackedChart(ratingsData, dates);
      return;
    }

    var dataArray = computeDataByIndicator(ratingsData, dates, indicator);

    var labelMap={
      count:"Cantidad de Evaluaciones",
      average:"Promedio de Puntajes",
      nps:"NPS",
      promoters:"% Promotores",
      passives:"% Neutros",
      detractors:"% Detractores",
      csat:"CSAT (Satisfacción del Cliente)",
      ces:"CES (Esfuerzo del Cliente)",
      response_rate:"Tasa de Respuesta",
      sentiment:"Análisis de Sentimientos"
    };
    var datasetLabel = labelMap[indicator] || "Indicador";

    var data={
      labels: dates,
      datasets: [{
        label: datasetLabel,
        data: dataArray,
        borderColor: 'rgba(75,192,192,1)',
        backgroundColor: 'rgba(75,192,192,0.2)',
        fill: true,
        tension: 0.4
      }]
    };

    var config={
      type:'line',
      data:data,
      plugins: [ChartDataLabels],
      options:{
        responsive:true,
        plugins:{
          title:{
            display:true,
            text:"Indicador: "+datasetLabel
          },
          tooltip:{
            callbacks:{
              label:function(context){
                if(indicator==="sentiment"){
                  return 'Sentimiento: '+context.parsed.y.toFixed(2);
                }
                // Para average y count no mostrar porcentaje
                if(indicator==="average" || indicator==="count"){
                  return context.parsed.y.toFixed(1);
                }
                return context.parsed.y;
              }
            }
          },
          datalabels:{
            anchor:'end',
            align:'top',
            formatter:function(value, ctx){
              if(value===0){ return ''; }
              // "count" y "average" se muestran como valor no porcentaje
              let lbl=ctx.dataset.label.toLowerCase();
              if(lbl==="cantidad de evaluaciones"||lbl==="promedio de puntajes"|| lbl==="csat (satisfacción del cliente)"||lbl==="ces (esfuerzo del cliente)"){
                // En average, un decimal
                if(lbl==="promedio de puntajes") return "E: "+value.toFixed(1);
                // En count, 0 decimales
                if(lbl==="cantidad de evaluaciones") return "E: "+value.toFixed(0);
                // csat, ces
                if(lbl.indexOf("csat")!==-1||lbl.indexOf("ces")!==-1){
                  return "E: "+value.toFixed(1)+"%";
                }
              }
              else if(lbl==="sentiment (análisis de sentimientos)"){
                return value.toFixed(2);
              }
              else {
                // nps, response_rate, etc -> porcentaje
                return value.toFixed(1)+"%";
              }
              return value;
            },
            color:'black',
            font:{ weight:'bold' }
          }
        },
        onClick:function(evt,elements){
          if(elements && elements.length){
            var idx=elements[0].index;
            var selectedDate=dates[idx];
            var dayResponses=detailsByDay[selectedDate]||[];
            showResponsesForDay(selectedDate, dayResponses);
          }
        },
        scales:{
          y:{
            beginAtZero:true,
            title:{
              display:true,
              text: (indicator==="count" || indicator==="average") ? "Evaluaciones" : "Valor"
            }
          }
        }
      }
    };

    var ctx=document.getElementById('myChart').getContext('2d');
    if(window.myChartInstance){
      window.myChartInstance.destroy();
    }
    window.myChartInstance=new Chart(ctx, config);
  }

  function renderStackedChart(ratingsData, dates){
    var computed=computeStackedData(ratingsData, dates);
    var data={
      labels: dates,
      datasets:[
        {
          label:"Promotores",
          data:computed.promotersArray,
          backgroundColor:"rgba(75,192,192,0.8)"
        },
        {
          label:"Neutros",
          data:computed.passivesArray,
          backgroundColor:"rgba(255,206,86,0.8)"
        },
        {
          label:"Detractores",
          data:computed.detractorsArray,
          backgroundColor:"rgba(255,99,132,0.8)"
        }
      ]
    };

    var totalEvaluations=computed.promotersArray.map((p,i)=> p+computed.passivesArray[i]+computed.detractorsArray[i]);

    var config={
      type:'bar',
      data:data,
      plugins:[ChartDataLabels],
      options:{
        responsive:true,
        plugins:{
          title:{
            display:true,
            text:"Barras Apiladas (Promotores/Neutros/Detractores)"
          },
          tooltip:{
            callbacks:{
              label:function(context){
                return context.dataset.label+': '+context.parsed.y;
              }
            }
          },
          datalabels:{
            anchor:'center',
            align:'center',
            formatter:function(value, ctx){
              if(value===0){ return ''; }
              var total=totalEvaluations[ctx.dataIndex];
              var pct=((value/total)*100).toFixed(1)+"%";
              return "E: "+value+"\n"+pct;
            },
            color:'white',
            font:{ weight:'bold' }
          }
        },
        scales:{
          x:{ stacked:true },
          y:{
            stacked:true,
            beginAtZero:true,
            title:{display:true, text:'Cantidad de Evaluaciones'}
          }
        }
      }
    };

    var ctx=document.getElementById('myChart').getContext('2d');
    if(window.myChartInstance){
      window.myChartInstance.destroy();
    }
    window.myChartInstance=new Chart(ctx, config);
  }

  function showResponsesForDay(dateStr, responses){
    var detailsTitle=document.getElementById('detailsTitle');
    detailsTitle.textContent="Detalles del día: "+dateStr;

    var tbody=document.getElementById('dayDetailsBody');
    tbody.innerHTML="";
    if(!responses.length){
      var row=document.createElement('tr');
      var cell=document.createElement('td');
      cell.colSpan=2;
      cell.textContent="No hay respuestas para este día.";
      row.appendChild(cell);
      tbody.appendChild(row);
    } else {
      responses.forEach(function(resp){
        var row=document.createElement('tr');
        var tdRating=document.createElement('td');
        tdRating.textContent=resp.rating;
        var tdComment=document.createElement('td');
        tdComment.textContent=resp.comment||"Sin Comentario";
        row.appendChild(tdRating);
        row.appendChild(tdComment);
        tbody.appendChild(row);
      });
    }
    document.getElementById('dayDetailsContainer').style.display='block';
  }

  // Manejar cambio de indicador en el select
  var chartIndicatorSelect = document.getElementById('chartIndicatorSelect');
  if(chartIndicatorSelect){
    chartIndicatorSelect.addEventListener('change', function(){
      if(!globalRatingsData || !globalDates || !globalDetails) return;
      var indicator=this.value;
      renderChart(globalRatingsData, globalDates, globalDetails, "Evaluación de Clientes", indicator);
    });
  }

  // 11) Filtrar por rango de fechas
  $('#filterDateBtn').on('click', function(){
    var startDate=$('#startDate').val();
    var endDate=$('#endDate').val();
    if(!startDate||!endDate){
      alert('Selecciona ambos rangos de fechas');
      return;
    }
    if(startDate>endDate){
      alert('La fecha de inicio no puede ser posterior a la fecha de fin.');
      return;
    }
    // Recargar datos
    $.ajax({
      url:'{{ url_for("get_ratings_data") }}',
      type:'GET',
      data:{
        item_uuid: $('#eliminarItemBtn').data('item-id'),
        start_date: startDate,
        end_date: endDate
      },
      success:function(resp){
        if(resp.error){
          console.error("Error:", resp.error);
          return;
        }
        globalRatingsData=resp.ratings;
        globalDates=resp.dates;
        globalDetails=resp.details;
        // Limpiar tabla
        var ratingsHeader=document.getElementById('ratingsHeader');
        Array.from(ratingsHeader.querySelectorAll('th:not(:first-child)')).forEach(th=>th.remove());
        var rowIds=['rating10Row','rating9Row','rating8Row','rating7Row','rating6Row','rating5Row','rating4Row','rating3Row','rating2Row','rating1Row','totalRow'];
        rowIds.forEach(function(rowId){
          var row=document.getElementById(rowId);
          while(row.children.length>1){ row.removeChild(row.lastChild); }
        });
        // Agregar las columnas de fechas
        globalDates.forEach(function(dateStr){
          var th=document.createElement('th');
          th.textContent=dateStr;
          ratingsHeader.appendChild(th);
        });
        fillTableWithCounts(globalRatingsData);
        var currentIndicator=$('#chartIndicatorSelect').val();
        renderChart(globalRatingsData, globalDates, globalDetails, "Evaluación de Clientes", currentIndicator);
      },
      error:function(xhr,status,error){
        console.error('Error:', error);
      }
    });
  });

  // 12) Descargar gráfico como imagen
  $('#downloadChartBtn').on('click', function(){
    if(window.myChartInstance){
      var link=document.createElement('a');
      link.href=window.myChartInstance.toBase64Image();
      link.download='grafico_dashboard.png';
      link.click();
    } else {
      alert('No hay gráfico para descargar.');
    }
  });

});
</script>
{% endblock %}











{% extends 'base.html' %}

{% block title %}Perfil de Usuario - PulztagWeb (Escala 1-10 NPS){% endblock %}

{% block head %}
<!-- Se mantiene DataTables y Bootstrap -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">

<style>
  /* ===== Estilos Base (Mobile First) ===== */
  body {
    background-image: url("/static/images/background.jpg") !important;
    background-size: cover;
    background-attachment: fixed;
    background-position: center;
  }

  .small-text {
    font-size: 0.9rem; /* tamaño relativo para móviles */
  }

  .d-flex {
    display: flex !important;
  }
  .h-100 {
    height: 100% !important;
  }

  /* Sidebar: por defecto oculto en móviles */
  #sidebar {
    height: calc(100vh - 90px - 75px);
    overflow-y: auto;
    display: none;
  }

  /* Contenedor principal con padding reducido para móviles */
  #mainContent {
    padding: 10px;
  }

  /* Ajuste en botones de navbar para móviles */
  .navbar .btn {
    padding: 0.3rem 0.6rem;
  }

  /* Ajuste de offcanvas en móviles */
  .offcanvas-start {
    width: 100%;
  }

  .sidebar-transition {
    transition: all 0.3s;
  }

  .btn-primary {
    background-color: rgba(231,231,231,0.46);
    border-color: #ffffff;
  }
  .btn-primary:hover {
    background-color: #e6e6e6;
    border-color: #b6b6b6;
  }
  .btn-primary:active,
  .btn-primary:focus {
    background-color: #d6d6d6 !important;
    border-color: #a6a6a6 !important;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
  }

  /* Colores para los botones en secciones */
  #dashboardItemActions .btn,
  #dashboardItemStats .btn,
  #miPerfilSection .btn {
    color: rgb(122, 122, 122) !important;
  }
  #dashboardItemActions .btn-danger {
    color: white !important;
  }

  /* Espaciado en botones de acción */
  .action-btn {
    margin-right: 5px;
  }
  @media (max-width: 767.98px) {
    .action-btn span {
      display: none !important;
    }
  }

  /* Sección de Dashboard con layout flexible */
  .dashboard-section {
    background-color: #f8f9fa;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 1rem;
    margin-bottom: 1rem;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: flex-end;
    gap: 1rem;
  }

  /* Contenedor del gráfico: uso de porcentajes y límite para pantallas grandes */
  #chartContainer {
    margin: 0 auto;
    padding: 0;
    width: 100%;
    max-width: 1200px;
    height: auto;
  }
  #myChart {
    width: 100%;
    height: 500px;
  }

  /* Estilos para DataTables y tablas personalizadas */
  #ratingsTable thead th,
  #ratingsTable tbody td,
  #ratingsTable tbody th {
    font-size: 0.875rem;
    white-space: nowrap;
  }
  .table-responsive, .full-width {
    width: 100%;
  }
  .hidden {
    display: none;
  }

  .chartjs-tooltip {
    opacity: 1;
    position: absolute;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    pointer-events: none;
    transition: all 0.1s ease;
  }

  .custom-table thead th {
    background-color: #f8f9fa;
    font-weight: bold;
  }
  .custom-table tbody tr:hover {
    background-color: #f1f1f1;
  }
  #dayDetailsContainer table {
    table-layout: fixed;
    width: 100%;
  }
  #dayDetailsContainer th:first-child,
  #dayDetailsContainer td:first-child {
    width: 170px;
    white-space: nowrap;
  }
  #dayDetailsContainer th:last-child,
  #dayDetailsContainer td:last-child {
    width: auto;
    word-wrap: break-word;
    text-align: start;
  }

  /* ===== Media Queries para pantallas mayores ===== */
  @media (min-width: 768px) {
    /* Mostrar el sidebar en pantallas medianas y grandes */
    #sidebar {
      display: block;
    }
    /* Restablece el padding del mainContent */
    #mainContent {
      padding: 20px;
    }
  }

  /* Ajustes para pantallas extra pequeñas */
  @media (max-width: 575px) {
    #mainContent {
      padding: 5px;
    }
    .small-text {
      font-size: 0.8rem;
    }
    /* Puedes ajustar márgenes o tamaños de fuente adicionales */
  }

  /* Ajustes para pantallas extra grandes */
  @media (min-width: 1400px) {
    #chartContainer {
      max-width: 1400px;
    }
  }
</style>
{% endblock %}

{% block content %}
<!-- NAVBAR superior para pantallas pequeñas -->
<nav class="navbar navbar-expand-md navbar-light border-bottom d-md-none">
  <div class="container-fluid">
    <button class="btn btn-secondary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasSidebar" aria-controls="offcanvasSidebar">
      <i class="bi bi-list"></i> Menú
    </button>
  </div>
</nav>

<div class="d-md-flex h-100">
  <!-- SIDEBAR para pantallas grandes -->
  <div class="d-none d-md-flex flex-column border-end sidebar-transition" id="sidebar" style="flex-shrink: 0;">
    <div class="sidebar-header d-flex align-items-center p-3 border-bottom">
      <div class="user-display">
        <span class="user-fullname">{{ current_user.username }}</span>
      </div>
      <button id="sidebarToggle" class="btn btn-light btn-sm ms-auto" title="Expandir/Contraer Sidebar">
        <i class="bi bi-chevron-left"></i>
      </button>
    </div>

    <ul class="nav flex-column pt-2" id="sidebarMenu">
      <!-- Dashboard -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#dashboardSubmenu" aria-expanded="false" aria-controls="dashboardSubmenu" title="Dashboard">
          <i class="fa-regular fa-chart-bar"></i><span class="text-label ms-2">Encuestas</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="dashboardSubmenu">
          <li>
            <a href="#" class="nav-link sub-link" data-bs-toggle="modal" data-bs-target="#agregarItemModal">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Agregar Item</span>
            </a>
          </li>
          <div id="dashboardItemsContainer">
            {% if dashboard_items %}
              {% for item in dashboard_items %}
              <li>
                <a href="#dashboardItemDetailSection" class="nav-link sub-link dashboard-item-link" data-item-id="{{ item.uuid }}" data-item-name="{{ item.name }}" data-item-type="{{ item.item_type }}">
                  <i class="fa-solid fa-square-poll-vertical"></i><span class="text-label ms-1">{{ item.name }}</span>
                </a>
              </li>
              {% endfor %}
            {% else %}
              <li>
                <span class="text-muted ms-3">Sin items disponibles</span>
              </li>
            {% endif %}
          </div>
        </ul>
      </li>
      <!-- Pulzcards -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#pulzcardSubmenu" aria-expanded="false" title="Pulzcards">
          <i class="bi bi-person-badge-fill"></i><span class="text-label ms-2">Pulzcards</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="pulzcardSubmenu">
          <li>
            <a href="{{ url_for('pulzcard') }}" class="nav-link sub-link">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
            </a>
          </li>
          <li>
            <a href="#pulzcardsSection" class="nav-link sub-link">
              <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
            </a>
          </li>
        </ul>
      </li>
      <!-- Etiquetas -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#etiquetasSubmenu" aria-expanded="false" title="Etiquetas">
          <i class="bi bi-tags-fill"></i><span class="text-label ms-2">Etiquetas</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="etiquetasSubmenu">
          <li>
            <a href="#" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal" class="nav-link sub-link">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
            </a>
          </li>
          <li>
            <a href="#" data-bs-toggle="modal" data-bs-target="#importTagsModal" class="nav-link sub-link" title="Importar Etiquetas">
              <i class="bi bi-file-arrow-up-fill"></i><span class="text-label ms-1">Importar</span>
            </a>
          </li>
          <li>
            <a href="#etiquetasSection" class="nav-link sub-link">
              <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
            </a>
          </li>
        </ul>
      </li>
      <!-- Bodegas -->
      <li class="nav-item mt-2">
        <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#bodegasSubmenu" aria-expanded="false" title="Bodegas">
          <i class="bi bi-box-fill"></i><span class="text-label ms-2">Bodegas</span>
        </a>
        <ul class="collapse list-unstyled ps-0" id="bodegasSubmenu">
          <li>
            <a href="#" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal" class="nav-link sub-link">
              <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nueva</span>
            </a>
          </li>
          <li>
            <a href="#bodegasSection" class="nav-link sub-link">
              <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todas</span>
            </a>
          </li>
        </ul>
      </li>
      <hr class="my-10">
      <!-- Mi Perfil -->
      <li class="nav-item mt-2">
        <a href="#miPerfilSection" class="nav-link sidebar-link" title="Mi Perfil">
          <i class="bi bi-person-lines-fill"></i><span class="text-label ms-2">Mi Perfil</span>
        </a>
      </li>
    </ul>
  </div>

  <!-- Off-canvas Sidebar para pantallas pequeñas -->
  <div class="offcanvas offcanvas-start d-md-none" tabindex="-1" id="offcanvasSidebar" aria-labelledby="offcanvasSidebarLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasSidebarLabel">{{ current_user.username }}</h5>
      <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Cerrar"></button>
    </div>
    <div class="offcanvas-body p-0">
      <ul class="nav flex-column pt-2" id="offcanvasSidebarMenu">
        <!-- Dashboard -->
        <li class="nav-item mt-2">
          <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#dashboardSubmenuOffcanvas" aria-expanded="false" aria-controls="dashboardSubmenuOffcanvas" title="Dashboard">
            <i class="fa-regular fa-chart-bar"></i><span class="text-label ms-2">Encuestas</span>
          </a>
          <ul class="collapse list-unstyled ps-0" id="dashboardSubmenuOffcanvas">
            <li>
              <a href="#" class="nav-link sub-link" data-bs-toggle="modal" data-bs-target="#agregarItemModal">
                <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Agregar Item</span>
              </a>
            </li>
            <div id="dashboardItemsContainerOffcanvas">
              {% if dashboard_items %}
                {% for item in dashboard_items %}
                <li>
                  <a href="#dashboardItemDetailSection" class="nav-link sub-link dashboard-item-link" data-item-id="{{ item.uuid }}" data-item-name="{{ item.name }}" data-item-type="{{ item.item_type }}">
                    <i class="fa-solid fa-square-poll-vertical"></i><span class="text-label ms-1">{{ item.name }}</span>
                  </a>
                </li>
                {% endfor %}
              {% else %}
                <li>
                  <span class="text-muted ms-3">Sin items disponibles</span>
                </li>
              {% endif %}
            </div>
          </ul>
        </li>
        <!-- Pulzcards -->
        <li class="nav-item mt-2">
          <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#pulzcardSubmenuOffcanvas" aria-expanded="false" title="Pulzcards">
            <i class="bi bi-person-badge-fill"></i><span class="text-label ms-2">Pulzcards</span>
          </a>
          <ul class="collapse list-unstyled ps-0" id="pulzcardSubmenuOffcanvas">
            <li>
              <a href="{{ url_for('pulzcard') }}" class="nav-link sub-link">
                <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
              </a>
            </li>
            <li>
              <a href="#pulzcardsSection" class="nav-link sub-link">
                <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
              </a>
            </li>
          </ul>
        </li>
        <!-- Etiquetas -->
        <li class="nav-item mt-2">
          <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#etiquetasSubmenuOffcanvas" aria-expanded="false" title="Etiquetas">
            <i class="bi bi-tags-fill"></i><span class="text-label ms-2">Etiquetas</span>
          </a>
          <ul class="collapse list-unstyled ps-0" id="etiquetasSubmenuOffcanvas">
            <li>
              <a href="#" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal" class="nav-link sub-link">
                <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nuevo</span>
              </a>
            </li>
            <li>
              <a href="#" data-bs-toggle="modal" data-bs-target="#importTagsModal" class="nav-link sub-link" title="Importar Etiquetas">
                <i class="bi bi-file-arrow-up-fill"></i><span class="text-label ms-1">Importar</span>
              </a>
            </li>
            <li>
              <a href="#etiquetasSection" class="nav-link sub-link">
                <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todos</span>
              </a>
            </li>
          </ul>
        </li>
        <!-- Bodegas -->
        <li class="nav-item mt-2">
          <a href="#" class="nav-link sidebar-link" data-bs-toggle="collapse" data-bs-target="#bodegasSubmenuOffcanvas" aria-expanded="false" title="Bodegas">
            <i class="bi bi-box-fill"></i><span class="text-label ms-2">Bodegas</span>
          </a>
          <ul class="collapse list-unstyled ps-0" id="bodegasSubmenuOffcanvas">
            <li>
              <a href="#" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal" class="nav-link sub-link">
                <i class="bi bi-plus-circle-fill"></i><span class="text-label ms-1">Crear Nueva</span>
              </a>
            </li>
            <li>
              <a href="#bodegasSection" class="nav-link sub-link">
                <i class="bi bi-eye-fill"></i><span class="text-label ms-1">Ver Todas</span>
              </a>
            </li>
          </ul>
        </li>
        <hr class="my-10">
        <!-- Mi Perfil -->
        <li class="nav-item mt-2">
          <a href="#miPerfilSection" class="nav-link sidebar-link" title="Mi Perfil">
            <i class="bi bi-person-lines-fill"></i><span class="text-label ms-2">Mi Perfil</span>
          </a>
        </li>
      </ul>
    </div>
  </div>

  <!-- CONTENIDO PRINCIPAL -->
  <div class="flex-grow-1" id="mainContent" style="overflow-y: auto;">
    <!-- Sección Perfil -->
    <div id="miPerfilSection">
      <h2 class="text-center mb-4">Mi Perfil</h2>
      <div class="container-fluid mb-5">
        <div class="row">
          <div class="col-md-6">
            <h4>Información Personal</h4>
            <p><strong>Nombre de Usuario:</strong> {{ current_user.username }}</p>
            <p><strong>Correo Electrónico:</strong> {{ current_user.email }}</p>
          </div>
          <div class="col-md-6 text-end">
            <a href="{{ url_for('main.account') }}" class="btn btn-primary">Editar Perfil</a>
          </div>
        </div>
      </div>
      <hr class="my-5">
    </div>

    <!-- Sección Pulzcards -->
    <div id="pulzcardsSection" style="display:none;">
      <h4>Tus Pulzcards</h4>
      {% if pulzcards %}
      <form method="POST" action="{{ url_for('delete_bulk_pulzcards') }}" id="bulkDeletePulzcardForm">
        {{ bulk_delete_pulzcard_form.hidden_tag() }}

        <div class="action-bar-wrapper">
          <div class="action-bar">
            <button type="button"
                    class="action-btn btn-import d-flex align-items-center"
                    data-bs-toggle="modal"
                    data-bs-target="#importPulzcardModal"
                    title="Importar Pulzcards desde un archivo Excel">
              <i class="bi bi-upload"></i>
              <span class="d-none d-sm-inline ms-1">Importar</span>
            </button>
            <button type="button"
                    class="action-btn btn-export d-flex align-items-center"
                    onclick="exportSelectedPulzcards()"
                    title="Exportar Pulzcards seleccionadas">
              <i class="bi bi-download"></i>
              <span class="d-none d-sm-inline ms-1">Exportar</span>
            </button>
            <button type="button"
                    class="action-btn btn-delete d-flex align-items-center"
                    data-bs-toggle="modal"
                    data-bs-target="#confirmDeleteBulkPulzcardsModal"
                    title="Eliminar Pulzcards seleccionadas">
              <i class="bi bi-trash"></i>
              <span class="d-none d-sm-inline ms-1">Eliminar</span>
            </button>
          </div>
        </div>
        <hr class="my-10">

        <div class="table-responsive full-width">
          <table class="table table-hover custom-table table-striped table-bordered">
            <thead>
              <tr>
                <th><input type="checkbox" id="select_all_pulzcards" form="bulkDeletePulzcardForm"></th>
                <th>Nombre Tarjeta</th>
                <th>Nombre Usuario</th>
                <th>Organización</th>
                <th>Email</th>
                <th>Fecha Creación</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody>
              {% for card in pulzcards %}
              <tr>
                <td>
                  <input type="checkbox" name="selected_pulzcards" value="{{ card.card_id }}" form="bulkDeletePulzcardForm">
                </td>
                <td>
                  {% if card.card_name|length > 15 %}
                    {{ card.card_name[:15] }}...
                  {% else %}
                    {{ card.card_name }}
                  {% endif %}
                </td>
                
                <td>
                  {% if (card.first_name ~ ' ' ~ card.last_name)|length > 15 %}
                    {{ (card.first_name ~ ' ' ~ card.last_name)[:15] }}...
                  {% else %}
                    {{ card.first_name }} {{ card.last_name }}
                  {% endif %}
                </td>
                
                <td>
                  {% if card.organization|length > 15 %}
                    {{ card.organization[:15] }}...
                  {% else %}
                    {{ card.organization }}
                  {% endif %}
                </td>
                
                <td>
                  {% if card.email|length > 20 %}
                    {{ card.email[:20] }}...
                  {% else %}
                    {{ card.email }}
                  {% endif %}
                </td>
                
                <td class="small-text">{{ card.created_at.strftime('%d/%m/%Y %H:%M') }}</td>
                <td>
                  <div class="d-none d-md-flex gap-2">
                    <a href="{{ url_for('pulzcard_card', card_id=card.card_id) }}"
                       class="btn btn-outline-secondary btn-sm" target="_blank">
                      Ver
                    </a>
                    <a href="{{ url_for('edit_pulzcard', card_id=card.card_id, next='pulzcardsSection') }}"
                       class="btn btn-outline-secondary btn-sm">
                      Editar
                    </a>
                    <a href="{{ url_for('pulzcard_qrcode', card_id=card.card_id) }}"
                       class="btn btn-outline-secondary btn-sm" title="Ver Código QR">
                      <i class="fas fa-qrcode"></i>
                    </a>
                    <form action="{{ url_for('delete_pulzcard', card_id=card.card_id) }}" method="POST" style="display:inline;">
                      {{ delete_forms[card.id].hidden_tag() }}
                      <button type="submit"
                              onclick="return confirm('¿Estás seguro de que deseas eliminar esta Pulzcard?')"
                              style="background:none; border:none; padding:0; cursor:pointer;">
                        <i class="fa-solid fa-delete-left fa-rotate-by"
                           style="color: #ff5957; --fa-rotate-angle: 0deg; font-size: 1.8em"></i>
                      </button>
                    </form>
                  </div>
                  <div class="d-md-none">
                    <div class="dropdown">
                      <button class="btn btn-outline-secondary btn-sm dropdown-toggle"
                              type="button"
                              id="dropdownMenuButtonPulz{{ card.card_id }}"
                              data-bs-toggle="dropdown" aria-expanded="false">
                        Acciones
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonPulz{{ card.card_id }}">
                        <li>
                          <a class="dropdown-item"
                             href="{{ url_for('pulzcard_card', card_id=card.card_id) }}"
                             target="_blank">
                            <i class="fas fa-eye me-2"></i>Ver
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item"
                             href="{{ url_for('edit_pulzcard', card_id=card.card_id, next='pulzcardsSection') }}">
                            <i class="fas fa-edit me-2"></i>Editar
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item"
                             href="{{ url_for('pulzcard_qrcode', card_id=card.card_id) }}"
                             title="Ver Código QR">
                            <i class="fas fa-qrcode me-2"></i>Ver QR
                          </a>
                        </li>
                        <li>
                          <form action="{{ url_for('delete_pulzcard', card_id=card.card_id) }}" method="POST" style="display:inline;">
                            {{ delete_forms[card.id].hidden_tag() }}
                            <button type="submit"
                                    onclick="return confirm('¿Estás seguro de que deseas eliminar esta Pulzcard?')"
                                    class="dropdown-item bg-danger text-white">
                              <i class="fa-regular fa-eraser me-2"></i>Eliminar
                            </button>
                          </form>
                        </li>
                      </ul>
                    </div>
                  </div>
                </td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
      </form>

      <div class="modal fade" id="confirmDeleteBulkPulzcardsModal" tabindex="-1" aria-labelledby="confirmDeleteBulkPulzcardsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="confirmDeleteBulkPulzcardsModalLabel">Confirmar Eliminación</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
              <p>¿Estás seguro de que deseas eliminar las Pulzcards seleccionadas? Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
              <button type="button" class="btn btn-danger" id="confirmDeleteBulkPulzcardsBtn">Eliminar</button>
            </div>
          </div>
        </div>
      </div>
      {% else %}
      <p>No has creado ninguna Pulzcard aún. <a href="{{ url_for('pulzcard') }}">Crear una Pulzcard</a>.</p>
      {% endif %}
      <div class="mt-3">
        <a href="{{ url_for('pulzcard') }}" class="btn btn-secondary">
          <i class="fas fa-user-plus" style="color: rgb(104, 245, 167); font-size: 1.0em;"></i> Añadir
        </a>
      </div>
      <hr class="my-5">
    </div>

    <!-- Etiquetas -->
    <div id="etiquetasSection" style="display:none;">
      <h4>Tus Etiquetas y QR Code</h4>
      {% if tags %}
      <form method="POST" action="{{ url_for('delete_bulk_tags') }}" id="bulkDeleteForm">
        {{ bulk_delete_tag_form.hidden_tag() }}
        <div class="action-bar-wrapper">
          <div class="action-bar">
            <button type="button"
                    class="action-btn btn-import d-flex align-items-center"
                    data-bs-toggle="modal"
                    data-bs-target="#importTagsModal"
                    title="Importar etiquetas desde un archivo">
              <i class="bi bi-upload"></i>
              <span class="d-none d-sm-inline ms-1">Importar</span>
            </button>
            <button type="button"
                    class="action-btn btn-export d-flex align-items-center"
                    onclick="exportSelectedTags()"
                    title="Exportar etiquetas seleccionadas">
              <i class="bi bi-download"></i>
              <span class="d-none d-sm-inline ms-1">Exportar</span>
            </button>
            <button type="button"
                    class="action-btn btn-delete d-flex align-items-center"
                    data-bs-toggle="modal"
                    data-bs-target="#confirmDeleteBulkModal"
                    title="Eliminar etiquetas seleccionadas">
              <i class="bi bi-trash"></i>
              <span class="d-none d-sm-inline ms-1">Eliminar</span>
            </button>
          </div>
        </div>
        <hr class="my-10">

        <!-- Resto del contenido de Etiquetas -->
        <div class="table-responsive full-width">
          <table class="table table-hover custom-table table-striped table-bordered">
            <thead>
              <tr>
                <th><input type="checkbox" id="select_all" form="bulkDeleteForm"></th>
                <th>Nombre Etiqueta</th>
                <th>URL destino</th>
                <th>URL enlace</th>
                <th>Vistas</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody>
              {% for tag in tags %}
              <tr>
                <td>
                  <input type="checkbox" name="selected_tags" value="{{ tag.tag_id }}" form="bulkDeleteForm">
                <td>
                  {% if tag.tag_name|length > 25 %}
                    {{ tag.tag_name[:25] }}...
                  {% else %}
                    {{ tag.tag_name }}
                  {% endif %}
                </td>
                <td>
                  <a href="{{ tag.redirect_url }}" target="_blank">
                    {% if tag.redirect_url|length > 25 %}
                      {{ tag.redirect_url[:25] }}...
                    {% else %}
                      {{ tag.redirect_url }}
                    {% endif %}
                  </a>
                </td>
                <td>
                  {% set generated_url = url_for('redirect_tag', tag_id=tag.tag_id, _external=True) %}
                  <a href="{{ generated_url }}" target="_blank">
                    {% if generated_url|length > 25 %}
                      {{ generated_url[:25] }}...
                    {% else %}
                      {{ generated_url }}
                    {% endif %}
                  </a>
                </td>
                <td>{{ tag.vistas }}</td>
                <td>
                  <div class="d-none d-md-flex gap-2">
                    <button type="button" class="btn btn-outline-secondary btn-sm" onclick="copyURL('{{ generated_url }}')">Copiar</button>
                    <a href="{{ url_for('edit_tag', tag_id=tag.tag_id, next='etiquetasSection') }}" class="btn btn-outline-secondary btn-sm">Editar</a>
                    <a href="{{ url_for('tag_qrcode', tag_id=tag.tag_id) }}" class="btn btn-outline-secondary btn-sm" title="Ver Código QR">
                      <i class="fas fa-qrcode"></i>
                    </a>
                    <form action="{{ url_for('delete_tag', tag_id=tag.tag_id) }}" method="POST" style="display:inline;">
                      {{ delete_tag_forms[tag.id].hidden_tag() }}
                      <button type="submit"
                              onclick="return confirm('¿Estás seguro de que deseas eliminar esta etiqueta?')"
                              style="background:none; border:none; padding:0; cursor:pointer;">
                        <i class="fa-solid fa-delete-left fa-rotate-by" style="color: #ff5957; --fa-rotate-angle: 0deg; font-size: 1.8em"></i>
                      </button>
                    </form>
                  </div>
                  <div class="d-md-none">
                    <div class="dropdown">
                      <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButtonTag{{ tag.tag_id }}" data-bs-toggle="dropdown" aria-expanded="false">
                        Acciones
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonTag{{ tag.tag_id }}">
                        <li>
                          <a href="#" class="dropdown-item"
                            onclick="copyURL('{{ generated_url }}'); return false;">
                            <i class="fas fa-copy me-2"></i>Copiar URL
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item" href="{{ url_for('edit_tag', tag_id=tag.tag_id, next='etiquetasSection') }}">
                            <i class="fas fa-edit me-2"></i>Editar
                          </a>
                        </li>
                        <li>
                          <a class="dropdown-item" href="{{ url_for('tag_qrcode', tag_id=tag.tag_id) }}" title="Ver Código QR">
                            <i class="fas fa-qrcode me-2"></i>Ver QR
                          </a>
                        </li>
                        <li>
                          <form action="{{ url_for('delete_tag', tag_id=tag.tag_id) }}" method="POST" style="display:inline;">
                            {{ delete_tag_forms[tag.id].hidden_tag() }}
                            <button type="submit"
                                    onclick="return confirm('¿Estás seguro de que deseas eliminar esta etiqueta?')"
                                    class="dropdown-item bg-danger text-white">
                              <i class="fa-regular fa-eraser me-2"></i>Eliminar
                            </button>
                          </form>
                        </li>
                      </ul>
                    </div>
                  </div>
                </td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
        {% else %}
        <p>No has creado ninguna etiqueta aún.
          <a href="#" class="text-decoration-underline" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal">Crear una Etiqueta</a>.
        </p>
        {% endif %}
        <div class="mt-3">
          <button type="button" class="btn btn-secondary d-flex align-items-center" data-bs-toggle="modal" data-bs-target="#agregarEtiquetaModal">
            <i class="fa-regular fa-square-plus" style="color: rgb(104, 245, 167); font-size: 1.0em;"></i>
            <span class="d-none d-sm-inline ms-1">Añadir</span>
          </button>
        </div>
        <hr class="my-5">
    </div>

    <!-- BODEGAS -->
    <div id="bodegasSection" style="display:none;">
      <h4>Bodegas</h4>
      {% if bodegas %}
      <div class="table-responsive full-width">
        <table class="table table-hover custom-table">
          <thead>
            <tr>
              <th>ID Bodega</th>
              <th>Nombre</th>
              <th>Fecha de Creación</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            {% for bodega in bodegas %}
            <tr>
              <td>
                <a href="{{ url_for('view_bodega', uuid_bodega=bodega.uuid) }}">
                  {{ bodega.id_bodega }}
                </a>
              </td>
              <td>{{ bodega.nombre }}</td>
              <td>{{ bodega.fecha_creacion.strftime('%d/%m/%Y %H:%M') }}</td>
              <td>
                <div class="d-none d-md-flex gap-2">
                  <a href="{{ url_for('bodega_qrcode', uuid_bodega=bodega.uuid) }}"
                     class="btn btn-outline-secondary btn-sm" title="Ver Código QR">
                    <i class="fas fa-qrcode"></i>
                  </a>
                  <a href="{{ url_for('edit_bodega', uuid_bodega=bodega.uuid, next='bodegasSection') }}"
                     class="btn btn-outline-secondary btn-sm">Editar</a>
                  <form action="{{ url_for('delete_bodega', uuid_bodega=bodega.uuid) }}"
                        method="POST" style="display:inline;">
                    {{ delete_bodega_forms[bodega.uuid].hidden_tag() }}
                    <button type="submit"
                            onclick="return confirm('¿Estás seguro de que deseas eliminar esta bodega?')"
                            style="background:none; border:none; padding:0; cursor:pointer;">
                      <i class="fa-solid fa-delete-left fa-rotate-by" style="color: #ff5957; --fa-rotate-angle: 0deg; font-size: 1.8em"></i>
                    </button>
                  </form>
                </div>
                <div class="d-md-none">
                  <div class="dropdown">
                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle"
                            type="button" id="dropdownMenuButtonBodega{{ bodega.uuid }}"
                            data-bs-toggle="dropdown" aria-expanded="false">
                      Acciones
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonBodega{{ bodega.uuid }}">
                      <li>
                        <a href="{{ url_for('bodega_qrcode', uuid_bodega=bodega.uuid) }}" class="dropdown-item" title="Ver Código QR">
                          <i class="fas fa-qrcode me-2"></i>Ver QR
                        </a>
                      </li>
                      <li>
                        <a class="dropdown-item" href="{{ url_for('edit_bodega', uuid_bodega=bodega.uuid, next='bodegasSection') }}">
                          <i class="fas fa-edit me-2"></i>Editar
                        </a>
                      </li>
                      <li>
                        <form action="{{ url_for('delete_bodega', uuid_bodega=bodega.uuid) }}" method="POST" style="display:inline;">
                          {{ delete_bodega_forms[bodega.uuid].hidden_tag() }}
                          <button type="submit"
                                  onclick="return confirm('¿Estás seguro de que deseas eliminar esta bodega?')"
                                  class="dropdown-item bg-danger text-white">
                            <i class="fa-regular fa-eraser me-2"></i>Eliminar
                          </button>
                        </form>
                      </li>
                    </ul>
                  </div>
                </div>
              </td>
            </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
      {% else %}
      <p>No has creado ninguna bodega aún.
        <a href="#" class="text-decoration-underline" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal">Crear una Bodega</a>.
      </p>
      {% endif %}
      <div class="mt-3">
        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#agregarBodegaModal">
          <i class="fa-regular fa-square-plus" style="color: rgb(104, 245, 167); font-size: 1.0em;"></i> Añadir
        </button>
      </div>
    </div>


    <!-- Sección Detalle de Ítem del Dashboard -->
    <div id="dashboardItemDetailSection" style="display:none;">
      <div class="mb-3 text-center">
        <h2 class="mb-0" id="dashboardItemName"></h2>
        <small class="text-muted" id="dashboardItemType"></small>
      </div>
      <div class="dashboard-section flex-right" id="dashboardItemActions">
        <div class="action-bar-wrapper">
          <div class="action-bar">
            <a class="btn btn-sm btn-primary action-btn d-flex align-items-center" id="surveyLink" title="Responder" target="_blank">
              <i class="fa-solid fa-reply"></i>
              <span class="d-none d-sm-inline ms-1">Responder</span>
            </a>
            <button class="btn btn-sm btn-primary action-btn d-flex align-items-center" id="fullscreenToggleBtn" title="Ver en Pantalla Completa">
              <i class="fa-solid fa-expand"></i>
              <span class="d-none d-sm-inline ms-1">Pantalla Completa</span>
            </button>
            <button class="btn btn-sm btn-primary action-btn d-flex align-items-center" id="copySurveyBtn" title="Copiar URL">
              <i class="fa-solid fa-clone"></i>
              <span class="d-none d-sm-inline ms-1">Copiar URL</span>
            </button>
            <button class="btn btn-sm btn-primary action-btn d-flex align-items-center" id="showSurveyQRBtn" title="Ver QR">
              <i class="fas fa-qrcode"></i>
              <span class="d-none d-sm-inline ms-1">QR</span>
            </button>
            <button class="btn btn-sm btn-primary action-btn d-flex align-items-center" id="downloadChartBtn" title="Descargar Gráfico">
              <i class="fa-solid fa-download"></i>
              <span class="d-none d-sm-inline ms-1">Descargar Gráfico</span>
            </button>
            <button class="btn btn-sm btn-danger action-btn d-flex align-items-center" id="eliminarItemBtn" title="Eliminar">
              <i class="fa-solid fa-trash"></i>
              <span class="d-none d-sm-inline ms-1">Eliminar</span>
            </button>
          </div>
        </div>
      </div>
      <!-- Modal Pantalla Completa -->
      <div class="modal fade" id="fullscreenModal" tabindex="-1" aria-labelledby="fullscreenModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-fullscreen">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="fullscreenModalLabel">Vista Completa</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body d-flex justify-content-center align-items-center">
              <div id="fullscreenContent" class="w-100 h-100"></div>
            </div>
          </div>
        </div>
      </div>

      <div id="dashboardItemStats" style="display:none;">
        <div class="mb-3 d-flex flex-nowrap justify-content-end align-items-center gap-2">
          <label for="dateRangePicker" class="form-label mb-0"></label>
          <input type="date" id="startDate" class="form-control form-control-sm" style="width: auto;">
          <span>a</span>
          <input type="date" id="endDate" class="form-control form-control-sm" style="width: auto;">
          <button class="btn btn-sm btn-primary action-btn d-flex align-items-center" id="filterDateBtn"><i class="bi bi-list"></i> Filtrar</button>
        </div>
        <div class="d-flex justify-content-end align-items-center mb-3">
          <select id="chartIndicatorSelect" class="form-select form-select-sm" style="width: 220px;">
            <option value="count" selected>Cantidad de Evaluaciones</option>
            <option value="average">Promedio de Puntajes</option>
            <option value="nps">NPS Ponderado</option>
            <option value="csat">CSAT (Satisfacción del Cliente)</option>
            <option value="ces">CES (Esfuerzo del Cliente)</option>
            <option value="response_rate">Tasa de Respuesta</option>
            <option value="sentiment">Análisis de Sentimientos</option>
            <option value="stacked">Gráfico Barras Apiladas</option>
            <option value="table">Tabla de Evaluaciones</option>
          </select>
        </div>
        <div id="chartContainer" class="full-width">
          <canvas id="myChart"></canvas>
        </div>
        <div id="tableContainer" style="display:none;">
          <table class="table table-bordered table-striped table-hover text-center" id="ratingsTable">
            <thead class="table-info">
              <tr id="ratingsHeader">
                <th>Valoración</th>
              </tr>
            </thead>
            <tbody>
              <tr id="rating10Row"><th>10</th></tr>
              <tr id="rating9Row"><th>9</th></tr>
              <tr id="rating8Row"><th>8</th></tr>
              <tr id="rating7Row"><th>7</th></tr>
              <tr id="rating6Row"><th>6</th></tr>
              <tr id="rating5Row"><th>5</th></tr>
              <tr id="rating4Row"><th>4</th></tr>
              <tr id="rating3Row"><th>3</th></tr>
              <tr id="rating2Row"><th>2</th></tr>
              <tr id="rating1Row"><th>1</th></tr>
              <tr id="totalRow"><th>Total</th></tr>
            </tbody>
          </table>
        </div>
        <div id="dayDetailsContainer" style="display:none; margin-top: 20px;">
          <h5 id="detailsTitle"></h5>
          <table class="table table-bordered table-striped table-hover text-center">
            <thead class="table-info">
              <tr>
                <th>Evaluación (1 a 10)</th>
                <th>Comentario</th>
              </tr>
            </thead>
            <tbody id="dayDetailsBody"></tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- MODALES para Pulzcards, Etiquetas, Bodegas, Dashboard Items -->
<!-- Modal Importar Pulzcards -->
<div class="modal fade" id="importPulzcardModal" tabindex="-1" aria-labelledby="importPulzcardModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('import_pulzcards') }}" enctype="multipart/form-data">
        {{ import_pulzcards_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="importPulzcardModalLabel">Importar Pulzcards desde Excel</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <p><strong>Cómo Importar:</strong></p>
          <p>Asegúrate de que tu archivo Excel tenga al menos las columnas:</p>
          <table class="table table-bordered">
            <thead>
              <tr>
                {% for field in pulzcard_fields %}
                <th>{{ field }}</th>
                {% endfor %}
              </tr>
            </thead>
            <tbody>
              <tr>
                {% for _ in pulzcard_fields %}
                <td>Ejemplo</td>
                {% endfor %}
              </tr>
            </tbody>
          </table>
          <div class="mb-3">
            <label for="excelFilePulzcards" class="form-label">Selecciona tu archivo Excel</label>
            {{ import_pulzcards_form.excelFile(class="form-control", id="excelFilePulzcards", required=True) }}
            {% for error in import_pulzcards_form.excelFile.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
          {{ import_pulzcards_form.submit(class="btn btn-primary") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Agregar Etiqueta -->
<div class="modal fade" id="agregarEtiquetaModal" tabindex="-1" aria-labelledby="agregarEtiquetaModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('create_tag') }}">
        {{ tag_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="agregarEtiquetaModalLabel">Agregar Nueva Etiqueta</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            {{ tag_form.tag_name.label(class="form-label") }}
            {{ tag_form.tag_name(class="form-control", placeholder="Nombre de la Etiqueta") }}
            {% for error in tag_form.tag_name.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ tag_form.redirect_url.label(class="form-label") }}
            {{ tag_form.redirect_url(class="form-control", placeholder="URL de Redirección") }}
            {% for error in tag_form.redirect_url.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          {{ tag_form.submit(class="btn btn-success") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Importar Etiquetas -->
<div class="modal fade" id="importTagsModal" tabindex="-1" aria-labelledby="importTagsModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('import_tags') }}" enctype="multipart/form-data">
        {{ import_tags_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="importTagsModalLabel">Importar Etiquetas desde Excel</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <p><strong>Cómo Importar:</strong></p>
          <p>Asegúrate de que tu archivo Excel tenga las columnas:</p>
          <table class="table table-bordered">
            <thead>
              <tr>
                {% for field in tag_fields %}
                <th>{{ field }}</th>
                {% endfor %}
              </tr>
            </thead>
            <tbody>
              <tr>
                {% for _ in tag_fields %}
                <td>Ejemplo de dato</td>
                {% endfor %}
              </tr>
            </tbody>
          </table>
          <div class="mb-3">
            <label for="excelFile" class="form-label">Selecciona tu archivo Excel</label>
            {{ import_tags_form.excelFile(class="form-control", id="excelFile", required=True) }}
            {% for error in import_tags_form.excelFile.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
          {{ import_tags_form.submit(class="btn btn-primary") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Agregar Bodega -->
<div class="modal fade" id="agregarBodegaModal" tabindex="-1" aria-labelledby="agregarBodegaModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form method="POST" action="{{ url_for('create_bodega') }}">
        {{ bodega_form.hidden_tag() }}
        <div class="modal-header">
          <h5 class="modal-title" id="agregarBodegaModalLabel">Agregar Nueva Bodega</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            {{ bodega_form.nombre.label(class="form-label") }}
            {{ bodega_form.nombre(class="form-control", placeholder="Nombre de la Bodega") }}
            {% for error in bodega_form.nombre.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ bodega_form.ubicacion.label(class="form-label") }}
            {{ bodega_form.ubicacion(class="form-control", placeholder="Ubicación") }}
            {% for error in bodega_form.ubicacion.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
          <div class="mb-3">
            {{ bodega_form.notas.label(class="form-label") }}
            {{ bodega_form.notas(class="form-control", placeholder="Notas") }}
            {% for error in bodega_form.notas.errors %}
            <div class="text-danger">{{ error }}</div>
            {% endfor %}
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          {{ bodega_form.submit(class="btn btn-success") }}
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Agregar Item Dashboard -->
<div class="modal fade" id="agregarItemModal" tabindex="-1" aria-labelledby="agregarItemModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="agregarItemForm">
        <div class="modal-header">
          <h5 class="modal-title" id="agregarItemModalLabel">Agregar Nuevo Item al Dashboard</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="itemNameInput" class="form-label">Nombre del Item</label>
            <input type="text" class="form-control" id="itemNameInput" name="name" required>
          </div>
          <div class="mb-3">
            <label for="itemTypeSelect" class="form-label">Tipo de Item</label>
            <select class="form-select" id="itemTypeSelect" name="item_type" required>
              <option value="" selected disabled>Selecciona un tipo</option>
              <option value="Evaluación de Clientes">Evaluación de Clientes (NPS 1-10)</option>
              <option value="Evaluación de Semáforo">Evaluación de Semáforo (1-3)</option>
              <option value="Visualizaciones diarias">Visualizaciones Diarias</option>
              <!-- (Si no deseas más tipos, remueve los de abajo) -->
              <!--
              <option value="CSAT">CSAT (Satisfacción del Cliente)</option>
              <option value="CES">CES (Esfuerzo del Cliente)</option>
              <option value="Sentiment">Análisis de Sentimientos</option>
              <option value="Response Rate">Tasa de Respuesta</option>
              -->
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-success">Agregar</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Modal Eliminar Item Dashboard -->
<div class="modal fade" id="confirmDeleteDashboardItemModal" tabindex="-1" aria-labelledby="confirmDeleteDashboardItemModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="deleteDashboardItemForm">
        <div class="modal-header">
          <h5 class="modal-title" id="confirmDeleteDashboardItemModalLabel">Confirmar Eliminación</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <p>¿Estás seguro de que deseas eliminar este ítem del Dashboard? Esta acción no se puede deshacer.</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-danger">Eliminar</button>
        </div>
      </form>
    </div>
  </div>
</div>

{% if bodega_form.errors %}
<script>
  var agregarBodegaModal = new bootstrap.Modal(document.getElementById('agregarBodegaModal'));
  agregarBodegaModal.show();
</script>
{% endif %}

{% if tag_form.errors %}
<script>
  var agregarEtiquetaModal = new bootstrap.Modal(document.getElementById('agregarEtiquetaModal'));
  agregarEtiquetaModal.show();
</script>
{% endif %}
{% endblock %}

{% block scripts %}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

<script>
// ----------------------------------------------------------------------------------
// Al cargar el DOM
$(document).ready(function() {
  // 1) Inicializa DataTables en todas las tablas con la clase .custom-table
  $('.custom-table').DataTable({
    language: {
      url: "https://cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json"
    }
  });

  // 2) Control de secciones mediante el hash de la URL
  function showSection(section) {
    var sections = [
      'miPerfilSection',
      'pulzcardsSection',
      'etiquetasSection',
      'bodegasSection',
      'dashboardItemDetailSection'
    ];
    sections.forEach(function(sec) {
      var el = document.getElementById(sec);
      if (el) {
        el.style.display = (sec === section) ? 'block' : 'none';
      }
    });
  }
  function handleHash() {
    var hash = window.location.hash.substring(1);
    if (hash) {
      showSection(hash);
    } else {
      showSection('miPerfilSection');
    }
  }
  window.addEventListener('load', handleHash, false);
  window.addEventListener('hashchange', handleHash, false);

  // 2.1) Listener delegado para cerrar el off-canvas automáticamente al pulsar enlaces
  // que NO sean los que usan data-bs-toggle="collapse" (es decir, los que no tienen la función de desplegar subítems)
  $('#offcanvasSidebar').on('click', 'a', function(e) {
    var href = $(this).attr('href');
    // Si el enlace tiene data-bs-toggle="collapse", se utiliza para desplegar subítems: no se cierra.
    if ($(this).attr('data-bs-toggle') === 'collapse') {
      return;
    }
    // Si el href es un ancla (por ejemplo, "#etiquetasSection")
    if (href && href.startsWith('#')) {
      // Si el hash actual ya es igual al href, forzamos la actualización de la sección
      if (location.hash === href) {
        handleHash();
      } else {
        location.hash = href;
      }
    }
    // Luego, cerrar el off‑canvas
    var offcanvasElement = document.getElementById('offcanvasSidebar');
    if (offcanvasElement) {
      var offcanvasInstance = bootstrap.Offcanvas.getInstance(offcanvasElement);
      if (offcanvasInstance) {
        offcanvasInstance.hide();
      }
    }
  });
  // 3) Función para manejar el clic en los ítems del Dashboard
  function handleDashboardItemClick(e, element) {
    e.preventDefault();
    var name = $(element).data('item-name');
    var type = $(element).data('item-type');
    var itemId = $(element).data('item-id');

    // Actualiza la sección de detalle con el nombre, tipo y el id del ítem
    $('#dashboardItemName').text(name);
    $('#dashboardItemType').text(type);
    $('#eliminarItemBtn').data('item-id', itemId);

    // Si el tipo admite encuesta (para mostrar acciones como "Responder", "Copiar URL", etc.)
    if (["Evaluación de Clientes", "Evaluación de Semáforo", "CSAT", "CES", "Sentiment", "Response Rate"].includes(type)) {
      var surveyUrl = "{{ url_for('survey', item_uuid='ITEMUUID', _external=True) }}".replace('ITEMUUID', itemId);
      $('#surveyLink')
        .attr('href', surveyUrl)
        .show()
        .find('span')
        .text('Responder');
      $('#copySurveyBtn').off('click').on('click', function() {
        navigator.clipboard.writeText(surveyUrl)
          .then(function(){ alert('URL copiada al portapapeles!'); })
          .catch(function(err){ alert('Error al copiar la URL: ' + err); });
      }).show();
      $('#showSurveyQRBtn').off('click').on('click', function() {
        window.open('/survey_qrcode/' + itemId, '_blank');
      }).show();
      $('#dashboardItemStats').show();
      renderLast10DaysTable(itemId, type);
    } else {
      $('#surveyLink, #copySurveyBtn, #showSurveyQRBtn').hide();
      $('#dashboardItemStats').hide();
    }

    // Cambia a la sección de detalle
    showSection('dashboardItemDetailSection');

    // Si se pulsa sobre un subítem (sin data-bs-toggle="collapse") el off-canvas se cierra por el listener delegado
  }

  // Listeners para los ítems del sidebar (en pantalla grande y en off-canvas)
  $('#dashboardItemsContainer').on('click', '.dashboard-item-link', function(e) {
    handleDashboardItemClick(e, this);
  });
  $('#dashboardItemsContainerOffcanvas').on('click', '.dashboard-item-link', function(e) {
    handleDashboardItemClick(e, this);
  });

  // 4) Función para copiar URL al portapapeles
  window.copyURL = function(url) {
    navigator.clipboard.writeText(url)
      .then(function(){ alert('URL copiada al portapapeles!'); })
      .catch(function(err){ alert('Error al copiar URL: ' + err); });
  };

  // 5) Toggle del sidebar (colapsar en pantallas grandes)
  var sidebar = document.getElementById('sidebar');
  var toggleBtn = document.getElementById('sidebarToggle');
  if (sidebar && toggleBtn) {
    toggleBtn.addEventListener('click', function() {
      sidebar.classList.toggle('collapsed');
      this.innerHTML = sidebar.classList.contains('collapsed')
        ? '<i class="bi bi-chevron-right"></i>'
        : '<i class="bi bi-chevron-left"></i>';
    });
  }

  // 6) Selección masiva de Etiquetas
  var selectAllTagsCheckbox = document.getElementById('select_all');
  if (selectAllTagsCheckbox) {
    selectAllTagsCheckbox.addEventListener('click', function() {
      var checkboxes = document.querySelectorAll('input[name="selected_tags"]');
      checkboxes.forEach(ch => { ch.checked = selectAllTagsCheckbox.checked; });
    });
  }
  var confirmDeleteBulkBtn = document.getElementById('confirmDeleteBulkBtn');
  if (confirmDeleteBulkBtn) {
    confirmDeleteBulkBtn.addEventListener('click', function(){
      document.getElementById('bulkDeleteForm').submit();
    });
  }

  // 7) Exportar Etiquetas
  window.exportSelectedTags = function() {
    var selectedTags = document.querySelectorAll('input[name="selected_tags"]:checked');
    if (!selectedTags.length) {
      alert('Selecciona al menos una etiqueta para exportar.');
      return;
    }
    var tagIds = Array.from(selectedTags).map(tag => tag.value);
    fetch('{{ url_for("export_tags") }}', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json', 'X-CSRFToken': '{{ csrf_token() }}' },
      body: JSON.stringify({ tag_ids: tagIds })
    })
    .then(res => {
      if (!res.ok) {
        return res.json().then(data => { throw new Error(data.error); });
      }
      return res.blob();
    })
    .then(blob => {
      var url = window.URL.createObjectURL(blob);
      var a = document.createElement('a');
      a.style.display = 'none';
      a.href = url;
      a.download = 'tags_export.xlsx';
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
    })
    .catch(err => {
      console.error('Error:', err);
      alert('Error exportando: ' + err.message);
    });
  };

  // 8) Selección masiva de Pulzcards
  var selectAllPulzcardsCheckbox = document.getElementById('select_all_pulzcards');
  if (selectAllPulzcardsCheckbox) {
    selectAllPulzcardsCheckbox.addEventListener('click', function(){
      var checkboxes = document.querySelectorAll('input[name="selected_pulzcards"]');
      checkboxes.forEach(ch => { ch.checked = selectAllPulzcardsCheckbox.checked; });
    });
  }
  var confirmDeleteBulkPulzcardsBtn = document.getElementById('confirmDeleteBulkPulzcardsBtn');
  if (confirmDeleteBulkPulzcardsBtn) {
    confirmDeleteBulkPulzcardsBtn.addEventListener('click', function(){
      document.getElementById('bulkDeletePulzcardForm').submit();
    });
  }

  // 9) Exportar Pulzcards
  window.exportSelectedPulzcards = function() {
    var selected = document.querySelectorAll('input[name="selected_pulzcards"]:checked');
    if (!selected.length) {
      alert('Selecciona al menos una Pulzcard para exportar.');
      return;
    }
    var pulz_ids = Array.from(selected).map(el => el.value);
    fetch('{{ url_for("export_pulzcards") }}', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json', 'X-CSRFToken': '{{ csrf_token() }}' },
      body: JSON.stringify({ pulz_ids: pulz_ids })
    })
    .then(res => {
      if(!res.ok) {
        return res.json().then(data=>{throw new Error(data.error);});
      }
      return res.blob();
    })
    .then(blob => {
      var url = window.URL.createObjectURL(blob);
      var a = document.createElement('a');
      a.style.display = 'none';
      a.href = url;
      a.download = 'pulzcards_export.xlsx';
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
    })
    .catch(err => {
      console.error('Error:', err);
      alert('Error exportando pulzcards: ' + err.message);
    });
  };

  // 10) Crear Item Dashboard (Ajax)
  $('#agregarItemForm').submit(function(e) {
    e.preventDefault();
    var itemName = $('#itemNameInput').val().trim();
    var itemType = $('#itemTypeSelect').val();
    if (!itemName || !itemType) {
      alert('Completa todos los campos.');
      return;
    }
    $.ajax({
      url: "{{ url_for('create_dashboard_item') }}",
      method: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ name: itemName, item_type: itemType }),
      headers: { 'X-CSRFToken': '{{ csrf_token() }}' },
      success: function(resp) {
        // Construye el HTML del nuevo item con su ícono
        var newItemHtml = '<li>' +
            '<a href="#dashboardItemDetailSection" class="nav-link sub-link dashboard-item-link" ' +
            'data-item-id="'+ resp.uuid +'" data-item-name="'+ itemName +'" data-item-type="'+ itemType +'">' +
            '<i class="fa-solid fa-square-poll-vertical"></i>' +
            '<span class="text-label ms-1">' + itemName + '</span>' +
            '</a></li>';
        
        // Se agrega el nuevo item a ambos contenedores (sidebar y off‑canvas)
        $('#dashboardItemsContainer').append(newItemHtml);
        $('#dashboardItemsContainerOffcanvas').append(newItemHtml);
        
        // Se cierra el modal y se limpian los campos
        $('#agregarItemModal').modal('hide');
        $('#itemNameInput').val('');
        $('#itemTypeSelect').val('');
        
        // Simula el clic en el nuevo item para cargar su dashboard (vista principal de la encuesta)
        // Esto hace que se invoque el handler handleDashboardItemClick,
        // que se encarga de actualizar los elementos (gráficos, tablas, etc.)
        var $newItemLink = $('#dashboardItemsContainer .dashboard-item-link').last();
        if ($newItemLink.length) {
          $newItemLink.trigger('click');
        } else {
          // En caso de no encontrar el elemento, se actualiza el hash
          location.hash = '#dashboardItemDetailSection';
        }
      },
      error: function() {
        alert('Error al crear ítem.');
      }
    });
  });

  // Eliminar Item (Ajax)
  $('#eliminarItemBtn').on('click', function(){
    var itemId = $(this).data('item-id');
    if(!itemId){
      console.error('No item-id');
      return;
    }
    var confirmModal = new bootstrap.Modal(document.getElementById('confirmDeleteDashboardItemModal'));
    confirmModal.show();
    $('#deleteDashboardItemForm').off('submit').on('submit', function(e){
      e.preventDefault();
      $.ajax({
        url: "{{ url_for('delete_dashboard_item') }}",
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ uuid: itemId }),
        headers: {'X-CSRFToken': '{{ csrf_token() }}'},
        success: function(){
          $('.dashboard-item-link[data-item-id="'+itemId+'"]').parent().remove();
          $('.offcanvas #dashboardItemsContainerOffcanvas .dashboard-item-link[data-item-id="'+itemId+'"]').parent().remove();
          showSection('miPerfilSection');
          confirmModal.hide();
          alert('Ítem eliminado.');
        },
        error: function(){ alert('Error al eliminar ítem.'); }
      });
    });
  });

  // 11) Renderizar tabla y gráfico
  var globalRatingsData = null, globalDates = null, globalDetails = null;

  function renderLast10DaysTable(itemUUID, itemType){
    var ratingsHeader = document.getElementById('ratingsHeader');
    // Limpiar columnas
    Array.from(ratingsHeader.querySelectorAll('th:not(:first-child)')).forEach(th => th.remove());
    // Limpiar filas
    var rowIds = ['rating10Row','rating9Row','rating8Row','rating7Row','rating6Row',
                  'rating5Row','rating4Row','rating3Row','rating2Row','rating1Row','totalRow'];
    rowIds.forEach(function(rowId){
      var row = document.getElementById(rowId);
      while(row.children.length > 1){
        row.removeChild(row.lastChild);
      }
    });

    $.ajax({
      url:'{{ url_for("get_ratings_data") }}',
      type:'GET',
      data:{
        item_uuid: itemUUID,
        start_date: $('#startDate').val(),
        end_date: $('#endDate').val()
      },
      success:function(resp){
        if(resp.error){
          console.error("Error:", resp.error);
          return;
        }
        globalRatingsData = resp.ratings;
        globalDates = resp.dates;
        globalDetails = resp.details;

        // Agregar encabezado con las fechas
        globalDates.forEach(function(dateStr){
          var th = document.createElement('th');
          th.textContent = dateStr;
          ratingsHeader.appendChild(th);
        });
        // Llenar la tabla
        fillTableWithCounts(globalRatingsData);

        // Renderizar gráfico por defecto "count"
        renderChart(globalRatingsData, globalDates, globalDetails, itemType, 'count');
      },
      error:function(xhr, status, error){
        console.error('Error al obtener datos:', error);
      }
    });
  }

  function fillTableWithCounts(ratingsData){
    for(var val = 10; val >= 1; val--){
      var row = document.getElementById('rating' + val + 'Row');
      var countArray = ratingsData[val.toString()] || [];
      countArray.forEach(function(cnt){
        var td = document.createElement('td');
        td.textContent = cnt;
        row.appendChild(td);
      });
    }
    var totalRow = document.getElementById('totalRow');
    var length = (ratingsData["1"] || []).length;
    var dayTotals = new Array(length).fill(0);
    for(var rating = 1; rating <= 10; rating++){
      var arr = ratingsData[rating.toString()] || [];
      arr.forEach(function(cnt, i){
        dayTotals[i] += cnt;
      });
    }
    dayTotals.forEach(function(t){
      var td = document.createElement('td');
      td.textContent = t;
      totalRow.appendChild(td);
    });
  }

  // Cálculo de indicadores
  function computeDataByIndicator(ratingsData, dates, indicator){
    var length = dates.length;
    var resultArray = new Array(length).fill(0);

    for(var i = 0; i < length; i++){
      var total = 0, sumRatings = 0, promoters = 0, passives = 0, detractors = 0;
      for(var rating = 1; rating <= 10; rating++){
        var c = (ratingsData[rating.toString()] || [])[i] || 0;
        total += c;
        sumRatings += rating * c;
        if(rating >= 9) promoters += c;
        else if(rating >= 7) passives += c;
        else detractors += c;
      }

      if(indicator === "csat"){
        var csat = 0;
        if(total > 0) csat = (promoters / total) * 100;
        resultArray[i] = csat;
      }
      else if(indicator === "ces"){
        var sumEsfuerzo = 0; 
        var totEsf = 0;
        for(var r = 1; r <= 5; r++){
          var c2 = (ratingsData[r.toString()] || [])[i] || 0;
          sumEsfuerzo += r * c2;
          totEsf += c2;
        }
        resultArray[i] = totEsf > 0 ? sumEsfuerzo / totEsf : 0;
      }
      else if(indicator === "response_rate"){
        var totalSent = 0; 
        if(globalRatingsData && globalRatingsData.total_sent){
          totalSent = globalRatingsData.total_sent[i] || 0;
        }
        resultArray[i] = totalSent > 0 ? (total / totalSent) * 100 : 0;
      }
      else if(indicator === "sentiment"){
        var sentiments = globalDetails[dates[i]] || [];
        var sentimentSum = 0, sentimentCount = 0;
        sentiments.forEach(function(resp){
          if(resp.sentiment !== undefined){
            sentimentSum += resp.sentiment;
            sentimentCount++;
          }
        });
        resultArray[i] = sentimentCount > 0 ? sentimentSum / sentimentCount : 0;
      }
      else {
        switch(indicator){
          case "count":
            resultArray[i] = total;
            break;
          case "average":
            resultArray[i] = total > 0 ? (sumRatings / total) : 0;
            break;
          case "nps":
            resultArray[i] = total > 0 ? ((promoters - detractors) / total) * 100 : 0;
            break;
          default:
            resultArray[i] = 0;
        }
      }
    }
    return resultArray;
  }

  function computeStackedData(ratingsData, dates){
    var length = dates.length;
    var promotersArray = new Array(length).fill(0);
    var passivesArray = new Array(length).fill(0);
    var detractorsArray = new Array(length).fill(0);

    for(var i = 0; i < length; i++){
      var pro = 0, pas = 0, det = 0;
      for(var rating = 1; rating <= 10; rating++){
        var c = (ratingsData[rating.toString()] || [])[i] || 0;
        if(rating >= 9) pro += c;
        else if(rating >= 7) pas += c;
        else det += c;
      }
      promotersArray[i] = pro;
      passivesArray[i] = pas;
      detractorsArray[i] = det;
    }
    return {
      promotersArray: promotersArray,
      passivesArray: passivesArray,
      detractorsArray: detractorsArray
    };
  }

  function renderChart(ratingsData, dates, detailsByDay, itemType, indicator) {
    if(indicator === "table"){
      document.getElementById('chartContainer').style.display = 'none';
      document.getElementById('tableContainer').style.display = 'block';
      return;
    } else {
      document.getElementById('chartContainer').style.display = 'block';
      document.getElementById('tableContainer').style.display = 'none';
    }

    if(indicator === "stacked"){
      renderStackedChart(ratingsData, dates);
      return;
    }

    var dataArray = computeDataByIndicator(ratingsData, dates, indicator);
    var labelMap = {
      count:"Cantidad de Evaluaciones",
      average:"Promedio de Puntajes",
      nps:"NPS",
      promoters:"% Promotores",
      passives:"% Neutros",
      detractors:"% Detractores",
      csat:"CSAT (Satisfacción del Cliente)",
      ces:"CES (Esfuerzo del Cliente)",
      response_rate:"Tasa de Respuesta",
      sentiment:"Análisis de Sentimientos"
    };
    var datasetLabel = labelMap[indicator] || "Indicador";

    var data = {
      labels: dates,
      datasets: [{
        label: datasetLabel,
        data: dataArray,
        borderColor: 'rgba(75,192,192,1)',
        backgroundColor: 'rgba(75,192,192,0.2)',
        fill: true,
        tension: 0.4
      }]
    };
    var config = {
      type: 'line',
      data: data,
      plugins: [ChartDataLabels],
      options: {
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: "Indicador: " + datasetLabel,
            align: 'start',
            padding: { top: 0, bottom: 30 },
            font: { size: 20, weight: 'bold', family: 'Arial' }
          },
          legend: {
            display: true,
            position: 'bottom',
            align: 'center'
          },
          tooltip: {
            callbacks: {
              label: function (context) {
                if (indicator === "sentiment") {
                  return 'Sentimiento: ' + context.parsed.y.toFixed(2);
                }
                if (indicator === "average" || indicator === "count") {
                  return context.parsed.y.toFixed(1);
                }
                return context.parsed.y;
              }
            }
          },
          datalabels: {
            anchor: 'end',
            align: 'top',
            formatter: function (value, ctx) {
              if (value === 0) { return ''; }
              let lbl = ctx.dataset.label.toLowerCase();
              if (lbl === "cantidad de evaluaciones" || lbl === "promedio de puntajes" || lbl === "csat (satisfacción del cliente)" || lbl === "ces (esfuerzo del cliente)") {
                if (lbl === "promedio de puntajes") return "E: " + value.toFixed(1);
                if (lbl === "cantidad de evaluaciones") return "E: " + value.toFixed(0);
                if (lbl.indexOf("csat") !== -1 || lbl.indexOf("ces") !== -1) {
                  return "E: " + value.toFixed(1) + "%";
                }
              }
              else if (lbl === "sentiment (análisis de sentimientos)") {
                return value.toFixed(2);
              }
              else {
                return value.toFixed(1) + "%";
              }
              return value;
            },
            color: 'black',
            font: { weight: 'bold' }
          }
        },
        onClick: function (evt, elements) {
          if (elements && elements.length) {
            var idx = elements[0].index;
            var selectedDate = dates[idx];
            var dayResponses = detailsByDay[selectedDate] || [];
            showResponsesForDay(selectedDate, dayResponses);
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            title: {
              display: true,
              text: (indicator === "count" || indicator === "average") ? "Evaluaciones" : "Valor"
            }
          }
        }
      }
    };
    var ctx = document.getElementById('myChart').getContext('2d');
    if(window.myChartInstance){
      window.myChartInstance.destroy();
    }
    window.myChartInstance = new Chart(ctx, config);
  }

  function renderStackedChart(ratingsData, dates) {
    var computed = computeStackedData(ratingsData, dates);
    var data = {
      labels: dates,
      datasets: [
        {
          label: "Promotores",
          data: computed.promotersArray,
          backgroundColor: "rgba(75,192,192,0.8)"
        },
        {
          label: "Neutros",
          data: computed.passivesArray,
          backgroundColor: "rgba(255,206,86,0.8)"
        },
        {
          label: "Detractores",
          data: computed.detractorsArray,
          backgroundColor: "rgba(255,99,132,0.8)"
        }
      ]
    };

    var totalEvaluations = computed.promotersArray.map((p, i) =>
      p + computed.passivesArray[i] + computed.detractorsArray[i]
    );

    var config = {
      type: 'bar',
      data: data,
      plugins: [ChartDataLabels],
      options: {
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: "Barras Apiladas (Promotores/Neutros/Detractores)"
          },
          tooltip: {
            callbacks: {
              label: function(context){
                return context.dataset.label + ': ' + context.parsed.y;
              }
            }
          },
          datalabels: {
            anchor: 'center',
            align: 'center',
            formatter: function(value, ctx) {
              if(value === 0) { return ''; }
              var total = totalEvaluations[ctx.dataIndex];
              var pct = ((value / total) * 100).toFixed(1) + "%";
              return "E: " + value + "\n" + pct;
            },
            color: 'white',
            font: { weight: 'bold' }
          }
        },
        scales: {
          x: { stacked: true },
          y: {
            stacked: true,
            beginAtZero: true,
            title: { display: true, text: 'Cantidad de Evaluaciones' }
          }
        }
      }
    };

    var ctx = document.getElementById('myChart').getContext('2d');
    if(window.myChartInstance){
      window.myChartInstance.destroy();
    }
    window.myChartInstance = new Chart(ctx, config);
  }

  function showResponsesForDay(dateStr, responses) {
    var detailsTitle = document.getElementById('detailsTitle');
    detailsTitle.textContent = "Detalles del día: " + dateStr;

    var tbody = document.getElementById('dayDetailsBody');
    tbody.innerHTML = "";
    if(!responses.length) {
      var row = document.createElement('tr');
      var cell = document.createElement('td');
      cell.colSpan = 2;
      cell.textContent = "No hay respuestas para este día.";
      row.appendChild(cell);
      tbody.appendChild(row);
    } else {
      responses.forEach(function(resp) {
        var row = document.createElement('tr');
        var tdRating = document.createElement('td');
        tdRating.textContent = resp.rating;
        var tdComment = document.createElement('td');
        tdComment.textContent = resp.comment || "Sin Comentario";
        row.appendChild(tdRating);
        row.appendChild(tdComment);
        tbody.appendChild(row);
      });
    }
    document.getElementById('dayDetailsContainer').style.display = 'block';
  }

  // Manejar cambio de indicador en el select
  var chartIndicatorSelect = document.getElementById('chartIndicatorSelect');
  if(chartIndicatorSelect) {
    chartIndicatorSelect.addEventListener('change', function() {
      if(!globalRatingsData || !globalDates || !globalDetails) return;
      var indicator = this.value;
      renderChart(globalRatingsData, globalDates, globalDetails, "Evaluación de Clientes", indicator);
    });
  }

  // 12) Filtrar por rango de fechas
  $('#filterDateBtn').on('click', function() {
    var startDate = $('#startDate').val();
    var endDate = $('#endDate').val();
    if(!startDate || !endDate) {
      alert('Selecciona ambos rangos de fechas');
      return;
    }
    if(startDate > endDate) {
      alert('La fecha de inicio no puede ser posterior a la fecha de fin.');
      return;
    }
    $.ajax({
      url: '{{ url_for("get_ratings_data") }}',
      type: 'GET',
      data: {
        item_uuid: $('#eliminarItemBtn').data('item-id'),
        start_date: startDate,
        end_date: endDate
      },
      success: function(resp) {
        if(resp.error) {
          console.error("Error:", resp.error);
          return;
        }
        globalRatingsData = resp.ratings;
        globalDates = resp.dates;
        globalDetails = resp.details;
        var ratingsHeader = document.getElementById('ratingsHeader');
        Array.from(ratingsHeader.querySelectorAll('th:not(:first-child)')).forEach(th => th.remove());
        var rowIds = ['rating10Row','rating9Row','rating8Row','rating7Row','rating6Row','rating5Row','rating4Row','rating3Row','rating2Row','rating1Row','totalRow'];
        rowIds.forEach(function(rowId) {
          var row = document.getElementById(rowId);
          while(row.children.length > 1) { row.removeChild(row.lastChild); }
        });
        globalDates.forEach(function(dateStr) {
          var th = document.createElement('th');
          th.textContent = dateStr;
          ratingsHeader.appendChild(th);
        });
        fillTableWithCounts(globalRatingsData);
        var currentIndicator = $('#chartIndicatorSelect').val();
        renderChart(globalRatingsData, globalDates, globalDetails, "Evaluación de Clientes", currentIndicator);
      },
      error: function(xhr, status, error) {
        console.error('Error:', error);
      }
    });
  });

  // 13) Descargar gráfico como imagen
  $('#downloadChartBtn').on('click', function() {
    if(window.myChartInstance) {
      var link = document.createElement('a');
      link.href = window.myChartInstance.toBase64Image();
      link.download = 'grafico_dashboard.png';
      link.click();
    } else {
      alert('No hay gráfico para descargar.');
    }
  });
});

document.addEventListener("DOMContentLoaded", function () {
    const fullscreenBtn = document.getElementById("fullscreenToggleBtn");
    const fullscreenModal = new bootstrap.Modal(document.getElementById("fullscreenModal"));
    const fullscreenContent = document.getElementById("fullscreenContent");
    const chartContainer = document.getElementById("chartContainer");
    const tableContainer = document.getElementById("tableContainer");
    const chartIndicatorSelect = document.getElementById("chartIndicatorSelect");

    let lastDisplayedContainer = "chart"; // Por defecto se muestra el gráfico
    let trendLineVisible = false;
    let trendLineDataset = null;

    // Crear y posicionar el botón "Tendencia" en el contenedor del gráfico
    const trendLineBtn = document.createElement("button");
    trendLineBtn.textContent = "Tendencia";
    trendLineBtn.className = "btn btn-primary btn-sm position-absolute";
    trendLineBtn.style.top = "10px";
    trendLineBtn.style.right = "10px";
    trendLineBtn.style.zIndex = "1000";
    chartContainer.style.position = "relative";
    chartContainer.appendChild(trendLineBtn);

    function calculateTrendLine(data) {
      const n = data.length;
      if (n < 2) return [];
      const x = Array.from({ length: n }, (_, i) => i + 1);
      const y = data;
      const sumX = x.reduce((a, b) => a + b, 0);
      const sumY = y.reduce((a, b) => a + b, 0);
      const sumXY = x.reduce((acc, xi, i) => acc + xi * y[i], 0);
      const sumX2 = x.reduce((acc, xi) => acc + xi * xi, 0);
      const slope = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);
      const intercept = (sumY - slope * sumX) / n;
      return x.map(xi => slope * xi + intercept);
    }

    function calculateStackedTrendLine(datasets, labels) {
      const n = labels.length;
      if (n < 2) return [];
      const x = Array.from({ length: n }, (_, i) => i + 1);
      const y = labels.map((_, i) =>
        datasets.reduce((sum, dataset) => {
          if (!dataset.hidden) return sum + dataset.data[i];
          return sum;
        }, 0)
      );
      return calculateTrendLine(y);
    }

    function updateTrendLine(chart) {
      if (!chart) return;
      let trendData;
      if (chart.config.type === "bar" && chart.config.data.datasets.length > 1) {
        trendData = calculateStackedTrendLine(chart.data.datasets, chart.data.labels);
      } else {
        trendData = calculateTrendLine(chart.data.datasets[0].data);
      }
      if (!trendLineDataset) {
        trendLineDataset = {
          type: "line",
          label: "Tendencia",
          data: trendData,
          borderColor: "rgba(255, 99, 132, 1)",
          borderWidth: 2,
          borderDash: [5, 5],
          pointRadius: 0,
          fill: false
        };
        chart.data.datasets.push(trendLineDataset);
      } else {
        trendLineDataset.data = trendData;
      }
      chart.update();
    }

    function toggleTrendLine(chart) {
      if (!chart) return;
      if (trendLineVisible) {
        chart.data.datasets = chart.data.datasets.filter(ds => ds !== trendLineDataset);
        trendLineDataset = null;
      } else {
        updateTrendLine(chart);
      }
      trendLineVisible = !trendLineVisible;
      chart.update();
    }

    function showOnlyOneContainer(containerToShow) {
      if (containerToShow === "chart") {
        chartContainer.style.display = "block";
        tableContainer.style.display = "none";
        lastDisplayedContainer = "chart";
      } else if (containerToShow === "table") {
        tableContainer.style.display = "block";
        chartContainer.style.display = "none";
        lastDisplayedContainer = "table";
      }
    }

    fullscreenBtn.addEventListener("click", function () {
      fullscreenContent.innerHTML = "";
      if (lastDisplayedContainer === "chart") {
        const clonedChartContainer = chartContainer.cloneNode(true);
        clonedChartContainer.style.height = "100%";
        clonedChartContainer.style.width = "100%";
        fullscreenContent.appendChild(clonedChartContainer);
        const oldCanvas = clonedChartContainer.querySelector("canvas");
        const newCanvas = document.createElement("canvas");
        newCanvas.id = "fullscreenChart";
        oldCanvas.replaceWith(newCanvas);
        setTimeout(() => {
          const ctx = newCanvas.getContext("2d");
          if (window.myChartInstance) {
            new Chart(ctx, window.myChartInstance.config);
          }
        }, 200);
      } else if (lastDisplayedContainer === "table") {
        const clonedTable = tableContainer.cloneNode(true);
        clonedTable.style.height = "100%";
        clonedTable.style.width = "100%";
        fullscreenContent.appendChild(clonedTable);
      }
      fullscreenModal.show();
    });

    document.getElementById("fullscreenModal").addEventListener("hidden.bs.modal", function () {
      showOnlyOneContainer(lastDisplayedContainer);
    });

    chartIndicatorSelect.addEventListener("change", function () {
      if (chartIndicatorSelect.value === "table") {
        showOnlyOneContainer("table");
      } else {
        showOnlyOneContainer("chart");
      }
    });

    trendLineBtn.addEventListener("click", function () {
      if (window.myChartInstance) {
        toggleTrendLine(window.myChartInstance);
      }
    });

    if (window.myChartInstance) {
      window.myChartInstance.options.plugins.legend.onClick = function (e, legendItem) {
        const index = legendItem.datasetIndex;
        const dataset = window.myChartInstance.data.datasets[index];
        dataset.hidden = !dataset.hidden;
        if (trendLineVisible) {
          updateTrendLine(window.myChartInstance);
        }
        window.myChartInstance.update();
      };
    }

    showOnlyOneContainer(lastDisplayedContainer);
});
</script>
{% endblock %}